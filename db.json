{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"themes/landscape/source/css/css.css","path":"css/css.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1462880652854},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1462880652854},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1462880652854},{"_id":"themes/landscape/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1462880652854},{"_id":"themes/landscape/_config.yml","hash":"194db9bfb1ff4c9a23527e10a6e6c055a33c7a1b","modified":1463201326675},{"_id":"themes/landscape/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1462880652856},{"_id":"source/favicon.ico","hash":"f50f1228739e790380a195144d715886ea1961e0","modified":1337753982000},{"_id":"source/_posts/JavaScript面向对象编程.md","hash":"ffd6f24a99d76b8c6d59de7ca7f1267e90495cfa","modified":1463153448805},{"_id":"source/_posts/Hadoop集群完全分布式部署.md","hash":"ca0992a7749f2da863cbbe4aa0a38aa12c8f32ec","modified":1462974224383},{"_id":"source/_posts/Linux常见问题解决方法.md","hash":"73c03e08109ffb3a1245a4387c31c47e86ce8a8b","modified":1462967643519},{"_id":"source/_posts/Java设计模式之观察者模式.md","hash":"07de8801d29fed50e52feca0865385222cf78a17","modified":1462970450499},{"_id":"source/_posts/System.setOut.md","hash":"3166c5c55586aeb268d1de251f83a45e4f72174a","modified":1462967643519},{"_id":"source/_posts/博客搭建.md","hash":"1837fdf4d87dbde4879be71e2287852b9f22f135","modified":1463212665524},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1462880652873},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1462880652875},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1462880652875},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1462880652875},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"1ef52d096f074d88399ef1fa80d2f78a81d4b83c","modified":1462894393323},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1462880652876},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1462880652876},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1462880652876},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1462880652876},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1462880652876},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1462880652877},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1462880652877},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1462880652878},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1462880652875},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1KHLwtFe7&690.png","hash":"7043bbc267e660a3a615e5818e92c357f1443521","modified":1462972857742},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1KnAQkx19&690.png","hash":"a735aa956f5d380c96e4175097904fc93a6fc91d","modified":1462972598533},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1MG9JTO50&690.png","hash":"521acf61bbe9221bb399203d90d3679362fd7344","modified":1462971310892},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1MlAy3H5d&690.jpg","hash":"be5eb12da6ea72e0cf7d88228c74a0879ebea51d","modified":1462974125225},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1Mzjamje7&690.jpg","hash":"a75887f218506a0689004b4a5b46ac528e287d57","modified":1462974157741},{"_id":"source/_posts/Java设计模式之观察者模式/003vMReezy6OWsC8Oogc8&690.jpg","hash":"3b2dab83187ba0e1975c7545c305ddf3f2bdd26b","modified":1462969737268},{"_id":"source/_posts/Java设计模式之观察者模式/class.jpg","hash":"79d8669aca398f54e6e49d3c0ee39c83903876f3","modified":1462969264623},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"63bc4f8802967697a9a1096937384bafff0ecd62","modified":1462967643520},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1462880652906},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"133e825b57ffb6ed1c5aa9602c7feacd38705539","modified":1463150609154},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"cbbf324a470d03de9f8cc4927ba7e766b17fb060","modified":1463152992746},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"e0acfb52c9e17e089f79c5408756786c3b306e60","modified":1463201477514},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1462880652906},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"482cf2ab89581e8c08428862763b8ce034bf528f","modified":1462891266693},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"449327f2b0029d1b0ee85fa33115718243e09bb1","modified":1463204695560},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1462880652907},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1462880652907},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1462880652905},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1462880652908},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1462880652908},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1462880652908},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1462880652908},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1462880652918},{"_id":"themes/landscape/source/css/_variables.styl","hash":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1462880652918},{"_id":"themes/landscape/source/css/css.css","hash":"9c4c9aae05ffd5a38082080efb3ddefbd8772cb2","modified":1462891041861},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1462880652919},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1462880652926},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1462880652926},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1462880652927},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1462880652927},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1462880652927},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1462880652927},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1462880652928},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1462880652929},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1462880652929},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1462880652929},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1LyH3gqae&690.jpg","hash":"ad604ae5be66bdcc06aaa1bf626f4303a05ac558","modified":1462974005188},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1O1zJBg32&690.jpg","hash":"a3a2c32631f0c7ab624041e591f17d760f910bcb","modified":1462974183242},{"_id":"source/_posts/Java设计模式之观察者模式/003vMReezy6OWsKgs3pa3&690.jpg","hash":"6616e5940a254b19bbe47b2967188cbf0ea6172e","modified":1462969606358},{"_id":"themes/landscape/source/js/jquery.min.js","hash":"a6eedf84389e1bc9f757bc2d19538f8c8d1cae9d","modified":1462891162286},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1462880652934},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1462880652938},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1462880652938},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1462880652938},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1462880652938},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1462880652938},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1462880652942},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"77d2a41321a2734a8007548e582184fad4ff247e","modified":1462975166201},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1462880652942},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1462880652944},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1462880652944},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"36eefe6332b86b66023a9884b754d305235846b4","modified":1462880652944},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1462880652944},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1462880652944},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1462880652944},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1462880652944},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1462880652946},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1462880652945},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1462880652946},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1462880652942},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1462880652943},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1462880652948},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1462880652947},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1462880652948},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1462880652948},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1462880652948},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1462880652948},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1462880652948},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1462880652948},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1462880652948},{"_id":"source/_posts/Nginx+Tomcat+Memcached集群.md","hash":"3fdc845c9675b25482975f7ad458b36b64cf103b","modified":1463148257986},{"_id":"source/_posts/Nginx+Tomcat集群.md","hash":"1142ca037fe728fcc241063958443a1322422e42","modified":1463147079914},{"_id":"source/_posts/Oracle常用脚本.md","hash":"96ef1a5496e320d3195b11b3f33569a31886daea","modified":1463151171913},{"_id":"source/_posts/浅谈BSF.md","hash":"302f626462266bc82fc7dbf001e1cc1e393d71c1","modified":1463154942065},{"_id":"source/_posts/解决问题心得.md","hash":"afc366e81ab7f56d36050871973df570693be9e3","modified":1463148575520},{"_id":"source/_posts/财务管理系统项目技术经验总结.md","hash":"a7eeb0664f1ef80a819008aca1ea0fdb57628065","modified":1463149614420},{"_id":"source/_posts/Nginx+Tomcat集群/003vMReezy6OUXDo7kt61&690.jpg","hash":"b7a15e619f8e962958b99ebd38555b84b82ee81e","modified":1463146694171},{"_id":"public/2016/05/11/JavaScript面向对象编程/index.html","hash":"3c51d0edc8329ef3759498613c8642627979b908","modified":1463219468282},{"_id":"public/2016/05/10/Linux常见问题解决方法/index.html","hash":"f816c83837563fa44e9d90e495c6e2c56665f356","modified":1463219468382},{"_id":"public/2016/05/10/博客搭建/index.html","hash":"c970d8a52d894425b42282769a662d01c79ca673","modified":1463219468382},{"_id":"public/2015/01/26/解决问题心得/index.html","hash":"c4b350a89e7b6e08a5fd549e250ff1a22b7bcc30","modified":1463219468392},{"_id":"public/2015/01/14/Nginx+Tomcat+Memcached集群/index.html","hash":"dda4d663d3b25f9cc05d9530083f7765f513db58","modified":1463219468392},{"_id":"public/archives/index.html","hash":"7bfbf41d50f6c1749bba5298e8e273b13c3be50e","modified":1463219468392},{"_id":"public/archives/page/2/index.html","hash":"f031edc22bb13f8901bcce3586a3e72edae42ae4","modified":1463219468392},{"_id":"public/archives/2012/index.html","hash":"c83b2d585b06fbd7999e660fa93af2b956cd4c41","modified":1463219468392},{"_id":"public/archives/2012/12/index.html","hash":"e95f8bde07341141a1cff96e3122ad782fe2a5c6","modified":1463219468392},{"_id":"public/archives/2013/index.html","hash":"01a736e1d2cc3131c920cb7b8eada5ad1502021f","modified":1463219468392},{"_id":"public/archives/2013/01/index.html","hash":"4d8476c04dec1c5f8cd702e6ff586beb9445dbc5","modified":1463219468392},{"_id":"public/archives/2014/index.html","hash":"faa3f668d030455475542aae335574041b718a91","modified":1463219468392},{"_id":"public/archives/2014/04/index.html","hash":"7a473fb8b31fee94ef94ae398902edc135e76b8e","modified":1463219468392},{"_id":"public/archives/2014/12/index.html","hash":"622b611c821d1e47b50e0a5a21b9cb2f8d62c66e","modified":1463219468392},{"_id":"public/archives/2015/index.html","hash":"27095e9e064ed39319a7014ce0b21fb76dadd311","modified":1463219468392},{"_id":"public/archives/2015/01/index.html","hash":"5731bdb04f1c53cb22c2b7d9afb2e8e7e832f8a8","modified":1463219468392},{"_id":"public/archives/2016/index.html","hash":"86b67046622931246d34a9cbe1554838151ce1ab","modified":1463219468392},{"_id":"public/archives/2016/05/index.html","hash":"d8c3665ee7b73ba3b6513f8eb2b0489438092e46","modified":1463219468392},{"_id":"public/categories/JavaScript/index.html","hash":"74c3a387c28b75682f86f71e5ec64f9762fc5420","modified":1463219468392},{"_id":"public/categories/Hadoop/index.html","hash":"acb4a706455f3017b845debc86e53d40fdd246e4","modified":1463219468392},{"_id":"public/categories/Linux/index.html","hash":"1e0e36193a92548b7f5642df9dc2722a2ea0b30a","modified":1463219468392},{"_id":"public/categories/Java/index.html","hash":"c95f1101f5947e47c118140794bbcea7a58b9135","modified":1463219468392},{"_id":"public/categories/Tomcat/index.html","hash":"f1a065fd33280127c9e2bfca6d14203c840a511b","modified":1463219468392},{"_id":"public/categories/Oracle/index.html","hash":"3db016bb5a17b514012fd9d82d62d32bf94be985","modified":1463219468392},{"_id":"public/categories/BSF/index.html","hash":"80c189bbaf8e2c513343864b894aa150f85bf32d","modified":1463219468392},{"_id":"public/categories/心得体会/index.html","hash":"e0a2fc459099a8e61996e3ded50bb5db4b1f003e","modified":1463219468392},{"_id":"public/page/2/index.html","hash":"9a38d70aa6f51cd2754eb3e8613e3c2f721fdaa4","modified":1463219468392},{"_id":"public/2016/05/10/System.setOut/index.html","hash":"ceb0614b649b8067e53ae3e8c076b7b619059a27","modified":1463219468392},{"_id":"public/2015/01/08/Hadoop集群完全分布式部署/index.html","hash":"efc5dcf62cf3bc1e8ca63578f22b62538e7e09b7","modified":1463219468392},{"_id":"public/2015/01/05/Java设计模式之观察者模式/index.html","hash":"90ef1e5fa4c3a3408189bb84fd1d54a355c72ef7","modified":1463219468392},{"_id":"public/2014/12/10/Nginx+Tomcat集群/index.html","hash":"fd9eb5d93e8943885bcef22fe53f7d5956e4dfe2","modified":1463219468392},{"_id":"public/2014/04/30/Oracle常用脚本/index.html","hash":"668cea25f169fa4df49fa4ffce7a72696daf2bd1","modified":1463219468392},{"_id":"public/2013/01/30/浅谈BSF/index.html","hash":"87ad7b853327e363c75d7998135ca2afa105303a","modified":1463219468392},{"_id":"public/2012/12/03/财务管理系统项目技术经验总结/index.html","hash":"7fe5f1642e1e9a6353022c5559f895e87fb8b395","modified":1463219468392},{"_id":"public/index.html","hash":"1fcb1280b0cada63ccc65b50854a957316e03abe","modified":1463219468392},{"_id":"themes/landscape/layout/_partial/search.ejs","hash":"6696f7f9dd12d668191e88b21070d6c2a8c876dd","modified":1463204199460},{"_id":"source/_posts/Jar转exe.md","hash":"bd15aa9c4b9a87881a50f72ae07b2887e5b969b5","modified":1463217841462},{"_id":"source/_posts/JavaScript函数.md","hash":"47a67911685717ec4000d8804c72217b0b342aa5","modified":1463218266162},{"_id":"source/_posts/JavaScript常用脚本.md","hash":"f33d39deaa4dfed8580583abe77a5285957cef89","modified":1463215660145},{"_id":"source/_posts/JavaScript模仿块级作用域.md","hash":"711dc8ac195a6279632ef1b43dd1c1c05ac679be","modified":1463218759591},{"_id":"source/_posts/JavaScript闭包.md","hash":"e43750144f6749c69e108413eac4497311b51a44","modified":1463218963527},{"_id":"source/_posts/Java开发过程中异常汇总及解决办法.md","hash":"41d740a2200019264de05e3c885f873a08411dcd","modified":1463214636572},{"_id":"source/_posts/中间件远程调试设置.md","hash":"72d7c4876868c7ecb1616f41189f77111028c317","modified":1463215178662},{"_id":"source/_posts/为什么寄存器比内存快.md","hash":"09418853acfe730b993fe33893cfaff023b8109d","modified":1463219165710},{"_id":"source/_posts/虚拟机联网方式设置.md","hash":"65cc0fdf383e98fba83dbbd0469ca92e6b0f4ba9","modified":1463213391942},{"_id":"source/_posts/Jar转exe/0df431adcbef760930385b9e2cdda3cc7cd99e84.jpg","hash":"d96a4aa6c2e4502b591654ea28871ec06544a980","modified":1463216384529},{"_id":"source/_posts/Jar转exe/1e30e924b899a90168ce99371f950a7b0208f53c.jpg","hash":"95b5359af718bf9a02e98a7c05a6c452e7f43848","modified":1463216683672},{"_id":"source/_posts/Jar转exe/2e2eb9389b504fc259ec7204e7dde71190ef6d04.jpg","hash":"04973de684743286b16f91b3be506defc631fa35","modified":1463216405249},{"_id":"source/_posts/Jar转exe/3b87e950352ac65c7624ab72f9f2b21193138a8a.jpg","hash":"be06a73e0408b58e0f47003a97eb1da894cce4ff","modified":1463216913490},{"_id":"source/_posts/Jar转exe/42166d224f4a20a4063cf1c692529822720ed095.jpg","hash":"3b00acf2a9846d3c3503fddb3b9a9a9949185573","modified":1463216947250},{"_id":"source/_posts/Jar转exe/4610b912c8fcc3ce12f40b329045d688d43f20ff.jpg","hash":"90c8d3aa709f12e502897370a25617f97c4bda55","modified":1463216332339},{"_id":"source/_posts/Jar转exe/4d086e061d950a7b2a1a8cc508d162d9f2d3c980.jpg","hash":"e3c1d2db7d13601871af30d073e5458aad2a793c","modified":1463216432609},{"_id":"source/_posts/Jar转exe/4ec2d5628535e5dd690b68de74c6a7efce1b6288.jpg","hash":"6bde22b1c4e089395612e7520ff98af2b807babd","modified":1463216825550},{"_id":"source/_posts/Jar转exe/5bafa40f4bfbfbed5277fb7e7af0f736afc31f81.jpg","hash":"11d8c97117adddc34cae39c6811915f4881f3c60","modified":1463216651632},{"_id":"source/_posts/Jar转exe/7a899e510fb30f24acb42e02ca95d143ad4b0381.jpg","hash":"4cb49a0ee377e670b2154fce41ecb52272290995","modified":1463216476599},{"_id":"source/_posts/Jar转exe/96dda144ad345982c72127930ef431adcbef840c.jpg","hash":"efff7fc1b1c259617e0ce73fee76bd80e84c0ae5","modified":1463216523152},{"_id":"source/_posts/Jar转exe/96dda144ad345982c7ab27930ef431adcbef848a.jpg","hash":"6765efacb7a2d04e413f3ccdf4e088b4013acf5c","modified":1463216558902},{"_id":"source/_posts/Jar转exe/a686c9177f3e67090c1786fe39c79f3df8dc5598.jpg","hash":"fbab0904eea4bf9e779d3cd5234e2ebe1fd428ee","modified":1463216176414},{"_id":"source/_posts/Jar转exe/b151f8198618367acea2bddc2c738bd4b31ce58c.jpg","hash":"d01fa8984206e949d7e0f2dd8b310a8328ae96fd","modified":1463216501652},{"_id":"source/_posts/Jar转exe/ac6eddc451da81cbd80640cc5066d016082431cb.jpg","hash":"d209f91210a7b2235d5bb874a0bd3757de6e2443","modified":1463216262096},{"_id":"source/_posts/Jar转exe/c83d70cf3bc79f3d30562631b8a1cd11728b2978.jpg","hash":"726b7b33f8f8cc9c30a3802ad5feb6b502b28857","modified":1463216364349},{"_id":"source/_posts/Jar转exe/c8ea15ce36d3d539d610c2c23887e950352ab086.jpg","hash":"982ad9dae31d8af1675b5bf02ca723da7048da6d","modified":1463216581752},{"_id":"source/_posts/Jar转exe/c8ea15ce36d3d539d688c2c23887e950352ab07e.jpg","hash":"e77c32c7da2d24ac230d291eb64ad3de75c490b3","modified":1463217749795},{"_id":"source/_posts/Jar转exe/c8ea15ce36d3d539d7c2cdc23887e950352ab030.jpg","hash":"d179d688f38aafb8bd9b66eeeae0ee90898cf9bf","modified":1463216617402},{"_id":"source/_posts/Jar转exe/caef76094b36acaf525e5bfd7ed98d1001e99c71.jpg","hash":"cb24a77cda3b1638f59ced73547189da7224f7dd","modified":1463217691575},{"_id":"source/_posts/Jar转exe/d0c8a786c9177f3ea3573f0c72cf3bc79f3d5654.jpg","hash":"15651be01628a880a7df9528a71a963d8699cd74","modified":1463216133134},{"_id":"source/_posts/Jar转exe/d0c8a786c9177f3ea39a3f0c72cf3bc79f3d5601.jpg","hash":"a4a39f43603af6c485ab8072cec2ac51c33cffc7","modified":1463216291686},{"_id":"source/_posts/Jar转exe/e4dde71190ef76c63577392a9f16fdfaaf51670e.jpg","hash":"bcaddb1d3f1ae975d5ee7257415b4579dc74aa7c","modified":1463216541632},{"_id":"source/_posts/Jar转exe/f2deb48f8c5494ee6c91cc182ff5e0fe99257e04.jpg","hash":"390e25a4058d0857b0e327ed65687944b3f26b35","modified":1463216204944},{"_id":"source/_posts/Java开发过程中异常汇总及解决办法/5366d0160924ab1893c50c2036fae6cd7a890bd1.jpg","hash":"544ebd7e3c11c1fdcec502a21256a5de26120352","modified":1463213964061},{"_id":"source/_posts/虚拟机联网方式设置/241f95cad1c8a786c6c1d77d6409c93d71cf50dd.jpg","hash":"43cf32137fcc419f147b0d049a032dad787a9604","modified":1463213081812},{"_id":"source/_posts/虚拟机联网方式设置/6c224f4a20a4462399c138119b22720e0cf3d7be.jpg","hash":"1e0406b4457b541e0be60b4df04a2ff5240a2159","modified":1463212961391},{"_id":"source/_posts/虚拟机联网方式设置/a6efce1b9d16fdfa3265015bb48f8c5494ee7b7e.jpg","hash":"405d1db86abc8489cfc65ef738aa9d3241044df4","modified":1463213368182},{"_id":"source/_posts/虚拟机联网方式设置/aec379310a55b31966f8dc0140a98226cffc1744.jpg","hash":"a29fb4d84b8d820612f68e42f19ca2e3e960fba7","modified":1463213276892},{"_id":"source/_posts/虚拟机联网方式设置/d31b0ef41bd5ad6ef751f89982cb39dbb6fd3c1c.jpg","hash":"0add76eff6ca58267c1294209d110d1557d47a12","modified":1463213145902},{"_id":"source/_posts/虚拟机联网方式设置/d8f9d72a6059252d3cf04e70379b033b5ab5b9db.jpg","hash":"16979cb24298216624b6646261b1edc5336224b5","modified":1463213250512},{"_id":"source/_posts/Jar转exe/023b5bb5c9ea15ce68f52d08b4003af33a87b29c.jpg","hash":"c8d5a13e4654137460328513aa9cf7dd8665ed61","modified":1463217725175},{"_id":"source/_posts/Java开发过程中异常汇总及解决办法/7aec54e736d12f2e1dbd40774cc2d56285356869.jpg","hash":"60241276433a3c1e127eb73cdee8dab31683e66c","modified":1463214366712},{"_id":"source/_posts/Java开发过程中异常汇总及解决办法/b03533fa828ba61e7fad2a384234970a304e5962.jpg","hash":"2b844c6fe1379ca077ae6d4af88fddf2bc44ebb2","modified":1463213887901},{"_id":"source/_posts/Java开发过程中异常汇总及解决办法/cdbf6c81800a19d86e32661230fa828ba61e46f0.jpg","hash":"69cb430bdfd7ca9e049d754a600a56b4f97d840d","modified":1463213723201},{"_id":"source/_posts/中间件远程调试设置/b2de9c82d158ccbfbe89542d1ad8bc3eb13541f4.jpg","hash":"b9d501fb21f41a4b541537af536c8ae86b59b763","modified":1463215160002},{"_id":"source/_posts/虚拟机联网方式设置/203fb80e7bec54e72f564b6aba389b504fc26a0f.jpg","hash":"4cdcf9272c1b12b0fa82263420501869f71f49dd","modified":1463213175712},{"_id":"source/_posts/虚拟机联网方式设置/e7cd7b899e510fb3728324e3da33c895d1430c2f.jpg","hash":"f5474345f64ced1060d8dcfd327468b8ce42fb69","modified":1463213234472},{"_id":"source/_posts/Java开发过程中异常汇总及解决办法/58ee3d6d55fbb2fb1bceb6054c4a20a44723dcc4.jpg","hash":"38f2a87ff83248993d89e4773f23ce3c4572f373","modified":1463214461723},{"_id":"public/2014/09/04/中间件远程调试设置/index.html","hash":"fc296706115c38838da0c683d7649c2b9594a207","modified":1463219468402},{"_id":"public/2013/10/15/为什么寄存器比内存快/index.html","hash":"ce30c4388a663fa2a2b6531bc010b66b4606f366","modified":1463219468402},{"_id":"public/2013/07/17/JavaScript闭包/index.html","hash":"513648a9305ee0bde87737495fcc354f1abeadc5","modified":1463219468402},{"_id":"public/archives/page/3/index.html","hash":"3c749b615fce7986c3b9b3a969f609c13fd011be","modified":1463219468402},{"_id":"public/archives/2013/07/index.html","hash":"85fe766ea1076eb2dbcbb168b804e37ec1824403","modified":1463219468402},{"_id":"public/archives/2013/10/index.html","hash":"0c5daee75e7302c3336db42fba7d1645673b5361","modified":1463219468402},{"_id":"public/archives/2013/11/index.html","hash":"9e7f2f5c00ea2c9e5ef3f62a89336a7167fcbb1c","modified":1463219468402},{"_id":"public/archives/2014/02/index.html","hash":"a4788298434a0182d7849d9f7b4e281020cd1c33","modified":1463219468402},{"_id":"public/archives/2014/09/index.html","hash":"989168c563f823a9c6e276928619d9d75809c3c0","modified":1463219468402},{"_id":"public/archives/2014/10/index.html","hash":"54cedbad0926ef4674657695e5b86286bdc44415","modified":1463219468402},{"_id":"public/categories/VMware/index.html","hash":"b7c8ba16f6a48e2c147119021faaf64ba82d4c64","modified":1463219468402},{"_id":"public/categories/Eclipse/index.html","hash":"bb7cd710f5c47c724d17c742c1b06f5bab49b4f0","modified":1463219468402},{"_id":"public/categories/EXE4J/index.html","hash":"c14fec18f990f9fda5af5a49dd422d97a95ff1e5","modified":1463219468402},{"_id":"public/categories/Other/index.html","hash":"6002ae345121a909f71ddb760d03c8073735f085","modified":1463219468402},{"_id":"public/page/3/index.html","hash":"46466c09e2fbc5f605af396abee8999f5fa1d3bd","modified":1463219468402},{"_id":"public/2014/10/08/虚拟机联网方式设置/index.html","hash":"7a29ed4a001d35e2a3bdd0d295a278ff641230fd","modified":1463219468402},{"_id":"public/2014/09/04/Java开发过程中异常汇总及解决办法/index.html","hash":"cf288603ed58949cc362b7a381aba794b7174754","modified":1463219468402},{"_id":"public/2014/02/13/JavaScript常用脚本/index.html","hash":"91ae2fd2f1585a2044d812b28e4a7ef20b500da7","modified":1463219468402},{"_id":"public/2013/11/24/Jar转exe/index.html","hash":"82fa38e32cd50bdd5a7c35dced3eea2b49c339b8","modified":1463219468402},{"_id":"public/2013/07/18/JavaScript函数/index.html","hash":"101a5ac6755d093127aa5364a92829101a3bddac","modified":1463219468402},{"_id":"public/2013/07/17/JavaScript模仿块级作用域/index.html","hash":"cdd11c621a17ab2db94f6a910079b8d6f22c442e","modified":1463219468402},{"_id":"public/2014/10/08/虚拟机联网方式设置/6c224f4a20a4462399c138119b22720e0cf3d7be.jpg","hash":"1e0406b4457b541e0be60b4df04a2ff5240a2159","modified":1463219468442},{"_id":"public/2014/10/08/虚拟机联网方式设置/241f95cad1c8a786c6c1d77d6409c93d71cf50dd.jpg","hash":"43cf32137fcc419f147b0d049a032dad787a9604","modified":1463219468442},{"_id":"public/2014/10/08/虚拟机联网方式设置/d31b0ef41bd5ad6ef751f89982cb39dbb6fd3c1c.jpg","hash":"0add76eff6ca58267c1294209d110d1557d47a12","modified":1463219468442},{"_id":"public/2014/10/08/虚拟机联网方式设置/d8f9d72a6059252d3cf04e70379b033b5ab5b9db.jpg","hash":"16979cb24298216624b6646261b1edc5336224b5","modified":1463219468442},{"_id":"public/2014/10/08/虚拟机联网方式设置/aec379310a55b31966f8dc0140a98226cffc1744.jpg","hash":"a29fb4d84b8d820612f68e42f19ca2e3e960fba7","modified":1463219468442},{"_id":"public/2014/10/08/虚拟机联网方式设置/a6efce1b9d16fdfa3265015bb48f8c5494ee7b7e.jpg","hash":"405d1db86abc8489cfc65ef738aa9d3241044df4","modified":1463219468442},{"_id":"public/2014/09/04/Java开发过程中异常汇总及解决办法/5366d0160924ab1893c50c2036fae6cd7a890bd1.jpg","hash":"544ebd7e3c11c1fdcec502a21256a5de26120352","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/d0c8a786c9177f3ea3573f0c72cf3bc79f3d5654.jpg","hash":"15651be01628a880a7df9528a71a963d8699cd74","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/a686c9177f3e67090c1786fe39c79f3df8dc5598.jpg","hash":"fbab0904eea4bf9e779d3cd5234e2ebe1fd428ee","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/f2deb48f8c5494ee6c91cc182ff5e0fe99257e04.jpg","hash":"390e25a4058d0857b0e327ed65687944b3f26b35","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/ac6eddc451da81cbd80640cc5066d016082431cb.jpg","hash":"d209f91210a7b2235d5bb874a0bd3757de6e2443","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/d0c8a786c9177f3ea39a3f0c72cf3bc79f3d5601.jpg","hash":"a4a39f43603af6c485ab8072cec2ac51c33cffc7","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/4610b912c8fcc3ce12f40b329045d688d43f20ff.jpg","hash":"90c8d3aa709f12e502897370a25617f97c4bda55","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/c83d70cf3bc79f3d30562631b8a1cd11728b2978.jpg","hash":"726b7b33f8f8cc9c30a3802ad5feb6b502b28857","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/0df431adcbef760930385b9e2cdda3cc7cd99e84.jpg","hash":"d96a4aa6c2e4502b591654ea28871ec06544a980","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/2e2eb9389b504fc259ec7204e7dde71190ef6d04.jpg","hash":"04973de684743286b16f91b3be506defc631fa35","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/4d086e061d950a7b2a1a8cc508d162d9f2d3c980.jpg","hash":"e3c1d2db7d13601871af30d073e5458aad2a793c","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/7a899e510fb30f24acb42e02ca95d143ad4b0381.jpg","hash":"4cb49a0ee377e670b2154fce41ecb52272290995","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/b151f8198618367acea2bddc2c738bd4b31ce58c.jpg","hash":"d01fa8984206e949d7e0f2dd8b310a8328ae96fd","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/96dda144ad345982c72127930ef431adcbef840c.jpg","hash":"efff7fc1b1c259617e0ce73fee76bd80e84c0ae5","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/e4dde71190ef76c63577392a9f16fdfaaf51670e.jpg","hash":"bcaddb1d3f1ae975d5ee7257415b4579dc74aa7c","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/96dda144ad345982c7ab27930ef431adcbef848a.jpg","hash":"6765efacb7a2d04e413f3ccdf4e088b4013acf5c","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/c8ea15ce36d3d539d610c2c23887e950352ab086.jpg","hash":"982ad9dae31d8af1675b5bf02ca723da7048da6d","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/c8ea15ce36d3d539d7c2cdc23887e950352ab030.jpg","hash":"d179d688f38aafb8bd9b66eeeae0ee90898cf9bf","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/5bafa40f4bfbfbed5277fb7e7af0f736afc31f81.jpg","hash":"11d8c97117adddc34cae39c6811915f4881f3c60","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/1e30e924b899a90168ce99371f950a7b0208f53c.jpg","hash":"95b5359af718bf9a02e98a7c05a6c452e7f43848","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/4ec2d5628535e5dd690b68de74c6a7efce1b6288.jpg","hash":"6bde22b1c4e089395612e7520ff98af2b807babd","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/3b87e950352ac65c7624ab72f9f2b21193138a8a.jpg","hash":"be06a73e0408b58e0f47003a97eb1da894cce4ff","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/42166d224f4a20a4063cf1c692529822720ed095.jpg","hash":"3b00acf2a9846d3c3503fddb3b9a9a9949185573","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/caef76094b36acaf525e5bfd7ed98d1001e99c71.jpg","hash":"cb24a77cda3b1638f59ced73547189da7224f7dd","modified":1463219468442},{"_id":"public/2013/11/24/Jar转exe/c8ea15ce36d3d539d688c2c23887e950352ab07e.jpg","hash":"e77c32c7da2d24ac230d291eb64ad3de75c490b3","modified":1463219468442},{"_id":"public/2014/10/08/虚拟机联网方式设置/203fb80e7bec54e72f564b6aba389b504fc26a0f.jpg","hash":"4cdcf9272c1b12b0fa82263420501869f71f49dd","modified":1463219468492},{"_id":"public/2014/10/08/虚拟机联网方式设置/e7cd7b899e510fb3728324e3da33c895d1430c2f.jpg","hash":"f5474345f64ced1060d8dcfd327468b8ce42fb69","modified":1463219468492},{"_id":"public/2014/09/04/Java开发过程中异常汇总及解决办法/cdbf6c81800a19d86e32661230fa828ba61e46f0.jpg","hash":"69cb430bdfd7ca9e049d754a600a56b4f97d840d","modified":1463219468492},{"_id":"public/2014/09/04/Java开发过程中异常汇总及解决办法/b03533fa828ba61e7fad2a384234970a304e5962.jpg","hash":"2b844c6fe1379ca077ae6d4af88fddf2bc44ebb2","modified":1463219468492},{"_id":"public/2014/09/04/Java开发过程中异常汇总及解决办法/7aec54e736d12f2e1dbd40774cc2d56285356869.jpg","hash":"60241276433a3c1e127eb73cdee8dab31683e66c","modified":1463219468492},{"_id":"public/2014/09/04/中间件远程调试设置/b2de9c82d158ccbfbe89542d1ad8bc3eb13541f4.jpg","hash":"b9d501fb21f41a4b541537af536c8ae86b59b763","modified":1463219468492},{"_id":"public/2013/11/24/Jar转exe/023b5bb5c9ea15ce68f52d08b4003af33a87b29c.jpg","hash":"c8d5a13e4654137460328513aa9cf7dd8665ed61","modified":1463219468492},{"_id":"public/2014/09/04/Java开发过程中异常汇总及解决办法/58ee3d6d55fbb2fb1bceb6054c4a20a44723dcc4.jpg","hash":"38f2a87ff83248993d89e4773f23ce3c4572f373","modified":1463219468502}],"Category":[{"name":"JavaScript","_id":"cio5q2lig00027oyb7hqytk4c"},{"name":"Hadoop","_id":"cio5q2liv00067oyboky4b2rk"},{"name":"Linux","_id":"cio5q2liv00097oyb09lmhzyj"},{"name":"Java","_id":"cio5q2liv000b7oyb0bqqc5t2"},{"name":"Tomcat","_id":"cio5uhgmn0002o0yba26ei45b"},{"name":"Oracle","_id":"cio5uhgn30006o0ybel9wspvp"},{"name":"BSF","_id":"cio5uhgn3000bo0ybv6oy15t6"},{"name":"心得体会","_id":"cio5uhgnj000do0yb17ghm3b0"},{"name":"VMware","_id":"cio6v6x9u00034kybmaaad45r"},{"name":"中间件","_id":"cio6wb5wn00084kybrp9uakne"},{"name":"Jboss Tomcat","_id":"cio6we8qo000a4kyblxi9pd6c"},{"name":"Jboss,Tomcat","_id":"cio6wefee000c4kybgrgxopbk"},{"name":"Eclipse","_id":"cio6wfnl8000e4kybdcpzvv78"},{"name":"exe4j","_id":"cio6wx4es000j4kybow0e9786"},{"name":"EXE4J","_id":"cio6y4g8w000l4kybowdxh6d5"},{"name":"其他","_id":"cio6yv0gj000v4kyb96nk6dm0"},{"name":"Other","_id":"cio6yv4p0000x4kyb2uvdwat4"}],"Data":[],"Page":[],"Post":[{"title":"JavaScript面向对象编程","date":"2016-05-11T03:05:20.000Z","comments":1,"toc":true,"_content":"\n## this\njavascript中的this和java一样都是表示当前对象，但需要注意的是同一个函数调用的方式不一样this指向的对象也不一样如下：\n\n```javascript\nfunction Test(){\n  alert(this);\n}\n//此时的this，是window弹出[object Window]\nTest();\n//此时的this，是当前对象的的object 弹出[object Object]\nvar t = new Test();\n```\n<!-- more -->\n会出现前后不一样的原因其实很简单，因为我们直接在调用Test函数浏览器会把这个函数当成window中的一个函数，此时的this当然指向的是window。在后面我们通过new 实例化了Test此时浏览器会吧Test当做成了一个对象此时的this肯定是指向当前对象。\n\n## Prototype\njavascript规定，每一个构造函数都有一个prototype属性，指向另一个对象。这个对象的所有属性和方法，都会被构造函数的实例继承。\n这意味着。我们可以把那些不变的属性和方法，直接定义在prototype对象上。这样带来的好处就是再实例多一个对象的时候减少了内存开销，因为多个对象指向的是同一个内存地址，提高了允许的效率。类似于java中的静态方法（被static修饰的变量和方法）。\n\n## 对于对象常用的操作\n\n### constructor\n每一个对象都会自动包含一个constructor属性，指向他们的构造函数。obj.constructor == Object\n### instanceof\n用于验证原型对象与实例对象之间的关系 obj  instanceof Object\n\n### isPrototypeOf \n判断某个prototype对象和某个实例之间的关系 Object.prototype.isPrototypeOf(obj)\n\n### hasOwnProperty\n用于判断某一个属性到底是本地属性，还是继承自prototype对象的属性  obj.hasOwnProerty(\"name\")\n\n\n ### in\n某个实例是否含有某个属性，不管是不是本地属性。 “name” in Obj\nin运算符还可以用来遍历某个对象的所有属性\n```javascript\nfor(var prop in cat1) {\n  alert(\"cat1[\"+prop+\"]=\"+cat1[prop]); \n}\n```\n\n","source":"_posts/JavaScript面向对象编程.md","raw":"---\ntitle: JavaScript面向对象编程\ndate: 2016-05-11 11:05:20\ncomments: true \ncategories: JavaScript\ntoc: true\n---\n\n## this\njavascript中的this和java一样都是表示当前对象，但需要注意的是同一个函数调用的方式不一样this指向的对象也不一样如下：\n\n```javascript\nfunction Test(){\n  alert(this);\n}\n//此时的this，是window弹出[object Window]\nTest();\n//此时的this，是当前对象的的object 弹出[object Object]\nvar t = new Test();\n```\n<!-- more -->\n会出现前后不一样的原因其实很简单，因为我们直接在调用Test函数浏览器会把这个函数当成window中的一个函数，此时的this当然指向的是window。在后面我们通过new 实例化了Test此时浏览器会吧Test当做成了一个对象此时的this肯定是指向当前对象。\n\n## Prototype\njavascript规定，每一个构造函数都有一个prototype属性，指向另一个对象。这个对象的所有属性和方法，都会被构造函数的实例继承。\n这意味着。我们可以把那些不变的属性和方法，直接定义在prototype对象上。这样带来的好处就是再实例多一个对象的时候减少了内存开销，因为多个对象指向的是同一个内存地址，提高了允许的效率。类似于java中的静态方法（被static修饰的变量和方法）。\n\n## 对于对象常用的操作\n\n### constructor\n每一个对象都会自动包含一个constructor属性，指向他们的构造函数。obj.constructor == Object\n### instanceof\n用于验证原型对象与实例对象之间的关系 obj  instanceof Object\n\n### isPrototypeOf \n判断某个prototype对象和某个实例之间的关系 Object.prototype.isPrototypeOf(obj)\n\n### hasOwnProperty\n用于判断某一个属性到底是本地属性，还是继承自prototype对象的属性  obj.hasOwnProerty(\"name\")\n\n\n ### in\n某个实例是否含有某个属性，不管是不是本地属性。 “name” in Obj\nin运算符还可以用来遍历某个对象的所有属性\n```javascript\nfor(var prop in cat1) {\n  alert(\"cat1[\"+prop+\"]=\"+cat1[prop]); \n}\n```\n\n","slug":"JavaScript面向对象编程","published":1,"updated":"2016-05-13T15:30:48.805Z","_id":"cio5q2lig00007oybozbqg9eo","layout":"post","photos":[],"link":"","content":"<h2 id=\"this\"><a href=\"#this\" class=\"headerlink\" title=\"this\"></a>this</h2><p>javascript中的this和java一样都是表示当前对象，但需要注意的是同一个函数调用的方式不一样this指向的对象也不一样如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Test</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  alert(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//此时的this，是window弹出[object Window]</span></span><br><span class=\"line\">Test();</span><br><span class=\"line\"><span class=\"comment\">//此时的this，是当前对象的的object 弹出[object Object]</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> t = <span class=\"keyword\">new</span> Test();</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>会出现前后不一样的原因其实很简单，因为我们直接在调用Test函数浏览器会把这个函数当成window中的一个函数，此时的this当然指向的是window。在后面我们通过new 实例化了Test此时浏览器会吧Test当做成了一个对象此时的this肯定是指向当前对象。</p>\n<h2 id=\"Prototype\"><a href=\"#Prototype\" class=\"headerlink\" title=\"Prototype\"></a>Prototype</h2><p>javascript规定，每一个构造函数都有一个prototype属性，指向另一个对象。这个对象的所有属性和方法，都会被构造函数的实例继承。<br>这意味着。我们可以把那些不变的属性和方法，直接定义在prototype对象上。这样带来的好处就是再实例多一个对象的时候减少了内存开销，因为多个对象指向的是同一个内存地址，提高了允许的效率。类似于java中的静态方法（被static修饰的变量和方法）。</p>\n<h2 id=\"对于对象常用的操作\"><a href=\"#对于对象常用的操作\" class=\"headerlink\" title=\"对于对象常用的操作\"></a>对于对象常用的操作</h2><h3 id=\"constructor-NaN\"><a href=\"#constructor-NaN\" class=\"headerlink\" title=\"constructor\"></a>constructor</h3><p>每一个对象都会自动包含一个constructor属性，指向他们的构造函数。obj.constructor == Object</p>\n<h3 id=\"instanceof\"><a href=\"#instanceof\" class=\"headerlink\" title=\"instanceof\"></a>instanceof</h3><p>用于验证原型对象与实例对象之间的关系 obj  instanceof Object</p>\n<h3 id=\"isPrototypeOf-NaN\"><a href=\"#isPrototypeOf-NaN\" class=\"headerlink\" title=\"isPrototypeOf\"></a>isPrototypeOf</h3><p>判断某个prototype对象和某个实例之间的关系 Object.prototype.isPrototypeOf(obj)</p>\n<h3 id=\"hasOwnProperty-NaN\"><a href=\"#hasOwnProperty-NaN\" class=\"headerlink\" title=\"hasOwnProperty\"></a>hasOwnProperty</h3><p>用于判断某一个属性到底是本地属性，还是继承自prototype对象的属性  obj.hasOwnProerty(“name”)</p>\n<h3 id=\"in\"><a href=\"#in\" class=\"headerlink\" title=\"in\"></a>in</h3><p>某个实例是否含有某个属性，不管是不是本地属性。 “name” in Obj<br>in运算符还可以用来遍历某个对象的所有属性<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> prop <span class=\"keyword\">in</span> cat1) &#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"cat1[\"</span>+prop+<span class=\"string\">\"]=\"</span>+cat1[prop]); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","excerpt":"<h2 id=\"this\"><a href=\"#this\" class=\"headerlink\" title=\"this\"></a>this</h2><p>javascript中的this和java一样都是表示当前对象，但需要注意的是同一个函数调用的方式不一样this指向的对象也不一样如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Test</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  alert(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//此时的this，是window弹出[object Window]</span></span><br><span class=\"line\">Test();</span><br><span class=\"line\"><span class=\"comment\">//此时的this，是当前对象的的object 弹出[object Object]</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> t = <span class=\"keyword\">new</span> Test();</span><br></pre></td></tr></table></figure>","more":"<p>会出现前后不一样的原因其实很简单，因为我们直接在调用Test函数浏览器会把这个函数当成window中的一个函数，此时的this当然指向的是window。在后面我们通过new 实例化了Test此时浏览器会吧Test当做成了一个对象此时的this肯定是指向当前对象。</p>\n<h2 id=\"Prototype\"><a href=\"#Prototype\" class=\"headerlink\" title=\"Prototype\"></a>Prototype</h2><p>javascript规定，每一个构造函数都有一个prototype属性，指向另一个对象。这个对象的所有属性和方法，都会被构造函数的实例继承。<br>这意味着。我们可以把那些不变的属性和方法，直接定义在prototype对象上。这样带来的好处就是再实例多一个对象的时候减少了内存开销，因为多个对象指向的是同一个内存地址，提高了允许的效率。类似于java中的静态方法（被static修饰的变量和方法）。</p>\n<h2 id=\"对于对象常用的操作\"><a href=\"#对于对象常用的操作\" class=\"headerlink\" title=\"对于对象常用的操作\"></a>对于对象常用的操作</h2><h3 id=\"constructor-NaN\"><a href=\"#constructor-NaN\" class=\"headerlink\" title=\"constructor\"></a>constructor</h3><p>每一个对象都会自动包含一个constructor属性，指向他们的构造函数。obj.constructor == Object</p>\n<h3 id=\"instanceof\"><a href=\"#instanceof\" class=\"headerlink\" title=\"instanceof\"></a>instanceof</h3><p>用于验证原型对象与实例对象之间的关系 obj  instanceof Object</p>\n<h3 id=\"isPrototypeOf-NaN\"><a href=\"#isPrototypeOf-NaN\" class=\"headerlink\" title=\"isPrototypeOf\"></a>isPrototypeOf</h3><p>判断某个prototype对象和某个实例之间的关系 Object.prototype.isPrototypeOf(obj)</p>\n<h3 id=\"hasOwnProperty-NaN\"><a href=\"#hasOwnProperty-NaN\" class=\"headerlink\" title=\"hasOwnProperty\"></a>hasOwnProperty</h3><p>用于判断某一个属性到底是本地属性，还是继承自prototype对象的属性  obj.hasOwnProerty(“name”)</p>\n<h3 id=\"in\"><a href=\"#in\" class=\"headerlink\" title=\"in\"></a>in</h3><p>某个实例是否含有某个属性，不管是不是本地属性。 “name” in Obj<br>in运算符还可以用来遍历某个对象的所有属性<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> prop <span class=\"keyword\">in</span> cat1) &#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"cat1[\"</span>+prop+<span class=\"string\">\"]=\"</span>+cat1[prop]); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"Hadoop集群完全分布式部署","date":"2015-01-08T15:45:20.000Z","comments":1,"toc":true,"_content":"\n## 准备环境\n|IP       \t\t | 主机名称    | 角色                  |操作系统   |\n|:--------------:|:-----------:|:---------------------:|:---------:|\n|192.168.131.129 |HadoopMaster | NameNode JobTracker   | CentOS 6.6|\n|192.168.131.128 |HadoopSlave1 | DataNode TaskTracker  | CentOS 6.6|\n\n<!-- more --> \n## hadoop版本\n***hadoop-2.6.0***\n***hadoop目录结构***\n![hadoop目录结构](003vMReezy6P1MG9JTO50&690.png)\n\n## 修改主机名称\n***将192.168.131.129修改为HadoopMaster***\n```\nshell vi /etc/sysconfig/network\nNETWORKING=yes\nHOSTNAME=HadoopMaster\n```\n***将192.168.131.128修改为HadoopSlave1***\n\n```\nshell vi /etc/sysconfig/network\nHOSTNAME=HadoopSlave\n```\n***通过命令hostname输出主机名称验证是否修改成功***\n\n```\nshell hostname\nHadoopMaster\n```\n\n## 配置hosts\n```\nshell vi /etc/hosts\n192.168.131.129 HadoopMaster\n192.168.131.128 HadoopSlave1\n```\n***在hosts文件添加如上两行 必须保证所有节点的host一样***\n\n\n## 安装jdk\n第一步：检查是否已经安装了jdk 存在就卸载 rpm -e 包名\n```\nshell rpm -qa|grep java\n```\n第二步：查看yum库是否有java安装包\n```\nshell yum -y list java*\n```\n第三步：选择一个进行安装\n```\nshell yum -y install java-1.6.0-openjdk*\n```\n第四步：确定是否安装成功\n```\nshell java -version\njava version \"1.6.0_20\"\nOpenJDK Runtime Environment (IcedTea6 1.9.10) (rhel-1.23.1.9.10.el5_7-i386)\nOpenJDK Client VM (build 19.0-b09, mixed mode)\n```\n显示如上信息表示安装成功\n\n## 安装软件（系统一般都自带）\n```\nshell yum install ssh\nshell yum install rsync\n```\n## 创建hadoop用户\n所有节点的用户名称和密码多必须保持一致相同\n\n## 切换到Hadoop用户配置ssh免密码登录\n1、在Master节点上执行\n```\nshell ssh-keygen -t dsa -P '' -f ~/.ssh/id_dsa \nshell cat ~/.ssh/id_dsa.pub >> ~/.ssh/authorized_keys \n```\n2、对authorized_keys 授权\n```\nshell chmod 744 authorized_keys \nshell ls ~/.ssh/\n```\n3、验证是否密码登录\n```\nshell ssh HadoopMaster\n```\n4、将id_dsa.pub 复制其他Slave节点hadoop用户~/.ssh/目录下\n```\nshell scp  ~/.ssh/id_dsa.pub hadoop@192.168.1.128:~/.ssh/\n```\n5、在Slave节点上通过\n```\nshell cat ~/.ssh/id_dsa.pub >> ~/.ssh/authorized_keys \n```\n生成authorized_keys并授权\n6、在Master节点上验证是否能密码了登录Slave节点\n```\nshell ssh HadoopSlave1\n```\n\n## 切换到root用户下载hadoop\n\n```\nshell http://apache.fayea.com/hadoop/common/hadoop-2.6.0/hadoop-2.6.0.tar.gz\n```\n[hadoop所有版本地址](http://apache.fayea.com/hadoop/common/)\n\n## 解压hadoop\n```\nshell tar -zxvf hadoop-2.6.0.tar.gz\n```\n将hadoop移动到/home/hadoop/目录下\n把hadoop-2.6.0目录操作权限分配给hadoop用户\n```\nshell chown hadoop hadoop-2.6.0/*\nshell chmod 700 hadoop-2.6.0/*\n```\n查看文件操作操作用户权限\n![文件权限](003vMReezy6P1KnAQkx19&690.png)\n\n## 设置hadoop启动参数\n### 设置java安装路径\n```\nshell vi etc/hadoop/hadoop-env.sh\nexport JAVA_HOME=java的安装路径\n```\n如果通过yum安装的jdk不知道java安装路径可以通过如下命令查找\n```\nshell which java\n/use/bin/java\n```\n得到的路径是/use/bin/java只需要将JAVE_HOME=/use即可\n![java环境配置](003vMReezy6P1KHLwtFe7&690.png)\n\n## 配置core-site.xml\n```xml\nshell /home/hadoop/hadoop-2.6.0/etc/hadoop/core-site.xml\n\n<configuration>\n\t<property>  \n        <name>hadoop.tmp.dir</name>  \n        <value>/home/hadoop/tmp</value>  \n        <description>Abase for other temporary directories.</description>  \n    </property>\n\t<property>\n      <name>fs.default.name</name>\n      <value>hdfs://HadoopMaster:9000</value>         \n  </property>          \n  <property>            \n       <name>mapred.job.tracker</name>           \n       <value>hdfs://HadoopMaster:9001</value>     \n  </property>                      \n  <property>  \n        <name>io.file.buffer.size</name>  \n        <value>4096</value>  \n  </property>\n</configuration>\n```\n\n## 配置hdfs-site.xml\n```xml\nshell vi /home/hadoop/hadoop-2.6.0/etc/hadoop/hdfs-site.xml\n\n<configuration>\n\t<property>  \n        <name>dfs.nameservices</name>  \n        <value>hadoop-cluster1</value>  \n    </property>  \n    <property>  \n        <name>dfs.namenode.secondary.http-address</name>  \n        <value>HadoopMaster:50090</value>  \n    </property>  \n    <property>  \n        <name>dfs.namenode.name.dir</name>  \n        <value>file:///home/hadoop/dfs/name</value>  \n    </property>  \n    <property>  \n        <name>dfs.datanode.data.dir</name>  \n        <value>file:///home/hadoop/dfs/data</value>  \n    </property>  \n    <property>  \n        <name>dfs.replication</name>  \n        <value>2</value>  \n    </property>  \n    <property>  \n        <name>dfs.webhdfs.enabled</name>  \n        <value>true</value>  \n    </property> \n</configuration>\n```\n\n## 配置slaves\n```\nshell vi /home/hadoop/hadoop-2.6.0/etc/hadoop/slaves\n```\n***集群中所有slave节点的配置文件HadoopSlave1是Slave节点主机名称***\n```\nshell cat etc/hadoop/slaves\nlocalhost\n```\n***将localhost修改为HadoopSlave1***\n\n## 配置hadoop安装目录\n```\nshell vi /etc/profile\n\nexport HADOOP_HOME=/home/hadoop/hadoop-2.6.0\nexport HADOOP_COMMON_HOME=$HADOOP_HOME\nexport HADOOP_HDFS_HOME=$HADOOP_HOME\nexport HADOOP_MAPRED_HOME=$HADOOP_HOME\nexport HADOOP_YARN_HOME=$HADOOP_HOME\nexport HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop\nexport PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOOME/sbin:$HADOOP_HOME/lib\nexport HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native\nexport HADOOP_OPTS=\"-Djava.library.path=$HADOOP_HOME/lib\"\n\n#使修改立即生效\nshell source /etc/profile \n```\n\n***注意：如果不添加上面配置可能会报如下错误***\n```\n15/01/07 23:52:35 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\nStarting namenodes on [OpenJDK Client VM warning: You have loaded library /home/hadoop/hadoop-2.6.0/lib/native/libhadoop.so.1.0.0 which might have disabled stack guard. The VM will try to fix the stack guard now.\nIt's highly recommended that you fix the library with 'execstack -c ', or link it with '-z noexecstack'.\n```\n\n## 格式化hadoop\n```\nshell bin/hadoop namenode -format\n```\n![格式化hadoop](003vMReezy6P1LyH3gqae&690.jpg)\n格式化成功\n\n## 同步节点\n将hadoop分别复制到其他节点的相同目录下（例如Master节点hadoop目录是/home/hadoop/hadoop-2.6.0其他节点也是这个目录）\n```\nshell scp -r hadoop-2.6.0 hadoop@192.168.131.128:/home/hadoop/\n```\n\n## 启动hadoop\n```\nshell sbin/start-all.sh\n```\n\n通过http://192.168.131.129:50070查看hadoop相关信息\n![启动成功](003vMReezy6P1MlAy3H5d&690.jpg)\n如果没有启动成功或者live noades为0查看hadoop启动日志就能很快解决问题\n![启动失败](003vMReezy6P1Mzjamje7&690.jpg)\n\n查看日志看到如异常（日志文件在 hadoop logs目录下）\n![查看日志](003vMReezy6P1O1zJBg32&690.jpg)\n这个问题主要是因为Master节点clusterID 和Slave节点clusterID 号不一致导致解决办法就是删除在core-site.xml中配置的hadoop.tmp.dir 的/home/hadoop/tmp目录下所有文件重新启动就ok了","source":"_posts/Hadoop集群完全分布式部署.md","raw":"---\ntitle: Hadoop集群完全分布式部署\ndate: 2015-01-08 23:45:20 \ncomments: true \ncategories: Hadoop\ntoc: true\n---\n\n## 准备环境\n|IP       \t\t | 主机名称    | 角色                  |操作系统   |\n|:--------------:|:-----------:|:---------------------:|:---------:|\n|192.168.131.129 |HadoopMaster | NameNode JobTracker   | CentOS 6.6|\n|192.168.131.128 |HadoopSlave1 | DataNode TaskTracker  | CentOS 6.6|\n\n<!-- more --> \n## hadoop版本\n***hadoop-2.6.0***\n***hadoop目录结构***\n![hadoop目录结构](003vMReezy6P1MG9JTO50&690.png)\n\n## 修改主机名称\n***将192.168.131.129修改为HadoopMaster***\n```\nshell vi /etc/sysconfig/network\nNETWORKING=yes\nHOSTNAME=HadoopMaster\n```\n***将192.168.131.128修改为HadoopSlave1***\n\n```\nshell vi /etc/sysconfig/network\nHOSTNAME=HadoopSlave\n```\n***通过命令hostname输出主机名称验证是否修改成功***\n\n```\nshell hostname\nHadoopMaster\n```\n\n## 配置hosts\n```\nshell vi /etc/hosts\n192.168.131.129 HadoopMaster\n192.168.131.128 HadoopSlave1\n```\n***在hosts文件添加如上两行 必须保证所有节点的host一样***\n\n\n## 安装jdk\n第一步：检查是否已经安装了jdk 存在就卸载 rpm -e 包名\n```\nshell rpm -qa|grep java\n```\n第二步：查看yum库是否有java安装包\n```\nshell yum -y list java*\n```\n第三步：选择一个进行安装\n```\nshell yum -y install java-1.6.0-openjdk*\n```\n第四步：确定是否安装成功\n```\nshell java -version\njava version \"1.6.0_20\"\nOpenJDK Runtime Environment (IcedTea6 1.9.10) (rhel-1.23.1.9.10.el5_7-i386)\nOpenJDK Client VM (build 19.0-b09, mixed mode)\n```\n显示如上信息表示安装成功\n\n## 安装软件（系统一般都自带）\n```\nshell yum install ssh\nshell yum install rsync\n```\n## 创建hadoop用户\n所有节点的用户名称和密码多必须保持一致相同\n\n## 切换到Hadoop用户配置ssh免密码登录\n1、在Master节点上执行\n```\nshell ssh-keygen -t dsa -P '' -f ~/.ssh/id_dsa \nshell cat ~/.ssh/id_dsa.pub >> ~/.ssh/authorized_keys \n```\n2、对authorized_keys 授权\n```\nshell chmod 744 authorized_keys \nshell ls ~/.ssh/\n```\n3、验证是否密码登录\n```\nshell ssh HadoopMaster\n```\n4、将id_dsa.pub 复制其他Slave节点hadoop用户~/.ssh/目录下\n```\nshell scp  ~/.ssh/id_dsa.pub hadoop@192.168.1.128:~/.ssh/\n```\n5、在Slave节点上通过\n```\nshell cat ~/.ssh/id_dsa.pub >> ~/.ssh/authorized_keys \n```\n生成authorized_keys并授权\n6、在Master节点上验证是否能密码了登录Slave节点\n```\nshell ssh HadoopSlave1\n```\n\n## 切换到root用户下载hadoop\n\n```\nshell http://apache.fayea.com/hadoop/common/hadoop-2.6.0/hadoop-2.6.0.tar.gz\n```\n[hadoop所有版本地址](http://apache.fayea.com/hadoop/common/)\n\n## 解压hadoop\n```\nshell tar -zxvf hadoop-2.6.0.tar.gz\n```\n将hadoop移动到/home/hadoop/目录下\n把hadoop-2.6.0目录操作权限分配给hadoop用户\n```\nshell chown hadoop hadoop-2.6.0/*\nshell chmod 700 hadoop-2.6.0/*\n```\n查看文件操作操作用户权限\n![文件权限](003vMReezy6P1KnAQkx19&690.png)\n\n## 设置hadoop启动参数\n### 设置java安装路径\n```\nshell vi etc/hadoop/hadoop-env.sh\nexport JAVA_HOME=java的安装路径\n```\n如果通过yum安装的jdk不知道java安装路径可以通过如下命令查找\n```\nshell which java\n/use/bin/java\n```\n得到的路径是/use/bin/java只需要将JAVE_HOME=/use即可\n![java环境配置](003vMReezy6P1KHLwtFe7&690.png)\n\n## 配置core-site.xml\n```xml\nshell /home/hadoop/hadoop-2.6.0/etc/hadoop/core-site.xml\n\n<configuration>\n\t<property>  \n        <name>hadoop.tmp.dir</name>  \n        <value>/home/hadoop/tmp</value>  \n        <description>Abase for other temporary directories.</description>  \n    </property>\n\t<property>\n      <name>fs.default.name</name>\n      <value>hdfs://HadoopMaster:9000</value>         \n  </property>          \n  <property>            \n       <name>mapred.job.tracker</name>           \n       <value>hdfs://HadoopMaster:9001</value>     \n  </property>                      \n  <property>  \n        <name>io.file.buffer.size</name>  \n        <value>4096</value>  \n  </property>\n</configuration>\n```\n\n## 配置hdfs-site.xml\n```xml\nshell vi /home/hadoop/hadoop-2.6.0/etc/hadoop/hdfs-site.xml\n\n<configuration>\n\t<property>  \n        <name>dfs.nameservices</name>  \n        <value>hadoop-cluster1</value>  \n    </property>  \n    <property>  \n        <name>dfs.namenode.secondary.http-address</name>  \n        <value>HadoopMaster:50090</value>  \n    </property>  \n    <property>  \n        <name>dfs.namenode.name.dir</name>  \n        <value>file:///home/hadoop/dfs/name</value>  \n    </property>  \n    <property>  \n        <name>dfs.datanode.data.dir</name>  \n        <value>file:///home/hadoop/dfs/data</value>  \n    </property>  \n    <property>  \n        <name>dfs.replication</name>  \n        <value>2</value>  \n    </property>  \n    <property>  \n        <name>dfs.webhdfs.enabled</name>  \n        <value>true</value>  \n    </property> \n</configuration>\n```\n\n## 配置slaves\n```\nshell vi /home/hadoop/hadoop-2.6.0/etc/hadoop/slaves\n```\n***集群中所有slave节点的配置文件HadoopSlave1是Slave节点主机名称***\n```\nshell cat etc/hadoop/slaves\nlocalhost\n```\n***将localhost修改为HadoopSlave1***\n\n## 配置hadoop安装目录\n```\nshell vi /etc/profile\n\nexport HADOOP_HOME=/home/hadoop/hadoop-2.6.0\nexport HADOOP_COMMON_HOME=$HADOOP_HOME\nexport HADOOP_HDFS_HOME=$HADOOP_HOME\nexport HADOOP_MAPRED_HOME=$HADOOP_HOME\nexport HADOOP_YARN_HOME=$HADOOP_HOME\nexport HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop\nexport PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOOME/sbin:$HADOOP_HOME/lib\nexport HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native\nexport HADOOP_OPTS=\"-Djava.library.path=$HADOOP_HOME/lib\"\n\n#使修改立即生效\nshell source /etc/profile \n```\n\n***注意：如果不添加上面配置可能会报如下错误***\n```\n15/01/07 23:52:35 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\nStarting namenodes on [OpenJDK Client VM warning: You have loaded library /home/hadoop/hadoop-2.6.0/lib/native/libhadoop.so.1.0.0 which might have disabled stack guard. The VM will try to fix the stack guard now.\nIt's highly recommended that you fix the library with 'execstack -c ', or link it with '-z noexecstack'.\n```\n\n## 格式化hadoop\n```\nshell bin/hadoop namenode -format\n```\n![格式化hadoop](003vMReezy6P1LyH3gqae&690.jpg)\n格式化成功\n\n## 同步节点\n将hadoop分别复制到其他节点的相同目录下（例如Master节点hadoop目录是/home/hadoop/hadoop-2.6.0其他节点也是这个目录）\n```\nshell scp -r hadoop-2.6.0 hadoop@192.168.131.128:/home/hadoop/\n```\n\n## 启动hadoop\n```\nshell sbin/start-all.sh\n```\n\n通过http://192.168.131.129:50070查看hadoop相关信息\n![启动成功](003vMReezy6P1MlAy3H5d&690.jpg)\n如果没有启动成功或者live noades为0查看hadoop启动日志就能很快解决问题\n![启动失败](003vMReezy6P1Mzjamje7&690.jpg)\n\n查看日志看到如异常（日志文件在 hadoop logs目录下）\n![查看日志](003vMReezy6P1O1zJBg32&690.jpg)\n这个问题主要是因为Master节点clusterID 和Slave节点clusterID 号不一致导致解决办法就是删除在core-site.xml中配置的hadoop.tmp.dir 的/home/hadoop/tmp目录下所有文件重新启动就ok了","slug":"Hadoop集群完全分布式部署","published":1,"updated":"2016-05-11T13:43:44.383Z","layout":"post","photos":[],"link":"","_id":"cio5q2lig00017oyb696tvb8p","content":"<h2 id=\"准备环境\"><a href=\"#准备环境\" class=\"headerlink\" title=\"准备环境\"></a>准备环境</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">IP</th>\n<th style=\"text-align:center\">主机名称</th>\n<th style=\"text-align:center\">角色</th>\n<th style=\"text-align:center\">操作系统</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">192.168.131.129</td>\n<td style=\"text-align:center\">HadoopMaster</td>\n<td style=\"text-align:center\">NameNode JobTracker</td>\n<td style=\"text-align:center\">CentOS 6.6</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">192.168.131.128</td>\n<td style=\"text-align:center\">HadoopSlave1</td>\n<td style=\"text-align:center\">DataNode TaskTracker</td>\n<td style=\"text-align:center\">CentOS 6.6</td>\n</tr>\n</tbody>\n</table>\n<a id=\"more\"></a> \n<h2 id=\"hadoop版本\"><a href=\"#hadoop版本\" class=\"headerlink\" title=\"hadoop版本\"></a>hadoop版本</h2><p><strong><em>hadoop-2.6.0</em></strong><br><strong><em>hadoop目录结构</em></strong><br><img src=\"003vMReezy6P1MG9JTO50&amp;690.png\" alt=\"hadoop目录结构\"></p>\n<h2 id=\"修改主机名称\"><a href=\"#修改主机名称\" class=\"headerlink\" title=\"修改主机名称\"></a>修改主机名称</h2><p><strong><em>将192.168.131.129修改为HadoopMaster</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /etc/sysconfig/network</span><br><span class=\"line\">NETWORKING=yes</span><br><span class=\"line\">HOSTNAME=HadoopMaster</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>将192.168.131.128修改为HadoopSlave1</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /etc/sysconfig/network</span><br><span class=\"line\">HOSTNAME=HadoopSlave</span><br></pre></td></tr></table></figure>\n<p><strong><em>通过命令hostname输出主机名称验证是否修改成功</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell hostname</span><br><span class=\"line\">HadoopMaster</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置hosts\"><a href=\"#配置hosts\" class=\"headerlink\" title=\"配置hosts\"></a>配置hosts</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /etc/hosts</span><br><span class=\"line\">192.168.131.129 HadoopMaster</span><br><span class=\"line\">192.168.131.128 HadoopSlave1</span><br></pre></td></tr></table></figure>\n<p><strong><em>在hosts文件添加如上两行 必须保证所有节点的host一样</em></strong></p>\n<h2 id=\"安装jdk\"><a href=\"#安装jdk\" class=\"headerlink\" title=\"安装jdk\"></a>安装jdk</h2><p>第一步：检查是否已经安装了jdk 存在就卸载 rpm -e 包名<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell rpm -qa|grep java</span><br></pre></td></tr></table></figure></p>\n<p>第二步：查看yum库是否有java安装包<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell yum -y list java*</span><br></pre></td></tr></table></figure></p>\n<p>第三步：选择一个进行安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell yum -y install java-1.6.0-openjdk*</span><br></pre></td></tr></table></figure></p>\n<p>第四步：确定是否安装成功<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell java -version</span><br><span class=\"line\">java version &quot;1.6.0_20&quot;</span><br><span class=\"line\">OpenJDK Runtime Environment (IcedTea6 1.9.10) (rhel-1.23.1.9.10.el5_7-i386)</span><br><span class=\"line\">OpenJDK Client VM (build 19.0-b09, mixed mode)</span><br></pre></td></tr></table></figure></p>\n<p>显示如上信息表示安装成功</p>\n<h2 id=\"安装软件（系统一般都自带）\"><a href=\"#安装软件（系统一般都自带）\" class=\"headerlink\" title=\"安装软件（系统一般都自带）\"></a>安装软件（系统一般都自带）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell yum install ssh</span><br><span class=\"line\">shell yum install rsync</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建hadoop用户\"><a href=\"#创建hadoop用户\" class=\"headerlink\" title=\"创建hadoop用户\"></a>创建hadoop用户</h2><p>所有节点的用户名称和密码多必须保持一致相同</p>\n<h2 id=\"切换到Hadoop用户配置ssh免密码登录\"><a href=\"#切换到Hadoop用户配置ssh免密码登录\" class=\"headerlink\" title=\"切换到Hadoop用户配置ssh免密码登录\"></a>切换到Hadoop用户配置ssh免密码登录</h2><p>1、在Master节点上执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell ssh-keygen -t dsa -P &apos;&apos; -f ~/.ssh/id_dsa </span><br><span class=\"line\">shell cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></p>\n<p>2、对authorized_keys 授权<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell chmod 744 authorized_keys </span><br><span class=\"line\">shell ls ~/.ssh/</span><br></pre></td></tr></table></figure></p>\n<p>3、验证是否密码登录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell ssh HadoopMaster</span><br></pre></td></tr></table></figure></p>\n<p>4、将id_dsa.pub 复制其他Slave节点hadoop用户~/.ssh/目录下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell scp  ~/.ssh/id_dsa.pub hadoop@192.168.1.128:~/.ssh/</span><br></pre></td></tr></table></figure></p>\n<p>5、在Slave节点上通过<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></p>\n<p>生成authorized_keys并授权<br>6、在Master节点上验证是否能密码了登录Slave节点<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell ssh HadoopSlave1</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"切换到root用户下载hadoop\"><a href=\"#切换到root用户下载hadoop\" class=\"headerlink\" title=\"切换到root用户下载hadoop\"></a>切换到root用户下载hadoop</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell http://apache.fayea.com/hadoop/common/hadoop-2.6.0/hadoop-2.6.0.tar.gz</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://apache.fayea.com/hadoop/common/\" target=\"_blank\" rel=\"external\">hadoop所有版本地址</a></p>\n<h2 id=\"解压hadoop\"><a href=\"#解压hadoop\" class=\"headerlink\" title=\"解压hadoop\"></a>解压hadoop</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell tar -zxvf hadoop-2.6.0.tar.gz</span><br></pre></td></tr></table></figure>\n<p>将hadoop移动到/home/hadoop/目录下<br>把hadoop-2.6.0目录操作权限分配给hadoop用户<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell chown hadoop hadoop-2.6.0/*</span><br><span class=\"line\">shell chmod 700 hadoop-2.6.0/*</span><br></pre></td></tr></table></figure></p>\n<p>查看文件操作操作用户权限<br><img src=\"003vMReezy6P1KnAQkx19&amp;690.png\" alt=\"文件权限\"></p>\n<h2 id=\"设置hadoop启动参数\"><a href=\"#设置hadoop启动参数\" class=\"headerlink\" title=\"设置hadoop启动参数\"></a>设置hadoop启动参数</h2><h3 id=\"设置java安装路径\"><a href=\"#设置java安装路径\" class=\"headerlink\" title=\"设置java安装路径\"></a>设置java安装路径</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi etc/hadoop/hadoop-env.sh</span><br><span class=\"line\">export JAVA_HOME=java的安装路径</span><br></pre></td></tr></table></figure>\n<p>如果通过yum安装的jdk不知道java安装路径可以通过如下命令查找<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell which java</span><br><span class=\"line\">/use/bin/java</span><br></pre></td></tr></table></figure></p>\n<p>得到的路径是/use/bin/java只需要将JAVE_HOME=/use即可<br><img src=\"003vMReezy6P1KHLwtFe7&amp;690.png\" alt=\"java环境配置\"></p>\n<h2 id=\"配置core-site-xml\"><a href=\"#配置core-site-xml\" class=\"headerlink\" title=\"配置core-site.xml\"></a>配置core-site.xml</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell /home/hadoop/hadoop-2.6.0/etc/hadoop/core-site.xml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>hadoop.tmp.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>/home/hadoop/tmp<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Abase for other temporary directories.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>fs.default.name<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>hdfs://HadoopMaster:9000<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>         </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>          </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>            </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>mapred.job.tracker<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>           </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>hdfs://HadoopMaster:9001<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>                      </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>io.file.buffer.size<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>4096<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"配置hdfs-site-xml\"><a href=\"#配置hdfs-site-xml\" class=\"headerlink\" title=\"配置hdfs-site.xml\"></a>配置hdfs-site.xml</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /home/hadoop/hadoop-2.6.0/etc/hadoop/hdfs-site.xml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.nameservices<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>hadoop-cluster1<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>HadoopMaster:50090<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.name.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///home/hadoop/dfs/name<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.datanode.data.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///home/hadoop/dfs/data<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.replication<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.webhdfs.enabled<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"配置slaves\"><a href=\"#配置slaves\" class=\"headerlink\" title=\"配置slaves\"></a>配置slaves</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /home/hadoop/hadoop-2.6.0/etc/hadoop/slaves</span><br></pre></td></tr></table></figure>\n<p><strong><em>集群中所有slave节点的配置文件HadoopSlave1是Slave节点主机名称</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell cat etc/hadoop/slaves</span><br><span class=\"line\">localhost</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>将localhost修改为HadoopSlave1</em></strong></p>\n<h2 id=\"配置hadoop安装目录\"><a href=\"#配置hadoop安装目录\" class=\"headerlink\" title=\"配置hadoop安装目录\"></a>配置hadoop安装目录</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">export HADOOP_HOME=/home/hadoop/hadoop-2.6.0</span><br><span class=\"line\">export HADOOP_COMMON_HOME=$HADOOP_HOME</span><br><span class=\"line\">export HADOOP_HDFS_HOME=$HADOOP_HOME</span><br><span class=\"line\">export HADOOP_MAPRED_HOME=$HADOOP_HOME</span><br><span class=\"line\">export HADOOP_YARN_HOME=$HADOOP_HOME</span><br><span class=\"line\">export HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop</span><br><span class=\"line\">export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOOME/sbin:$HADOOP_HOME/lib</span><br><span class=\"line\">export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native</span><br><span class=\"line\">export HADOOP_OPTS=&quot;-Djava.library.path=$HADOOP_HOME/lib&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">#使修改立即生效</span><br><span class=\"line\">shell source /etc/profile</span><br></pre></td></tr></table></figure>\n<p><strong><em>注意：如果不添加上面配置可能会报如下错误</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">15/01/07 23:52:35 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable</span><br><span class=\"line\">Starting namenodes on [OpenJDK Client VM warning: You have loaded library /home/hadoop/hadoop-2.6.0/lib/native/libhadoop.so.1.0.0 which might have disabled stack guard. The VM will try to fix the stack guard now.</span><br><span class=\"line\">It&apos;s highly recommended that you fix the library with &apos;execstack -c &apos;, or link it with &apos;-z noexecstack&apos;.</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"格式化hadoop\"><a href=\"#格式化hadoop\" class=\"headerlink\" title=\"格式化hadoop\"></a>格式化hadoop</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell bin/hadoop namenode -format</span><br></pre></td></tr></table></figure>\n<p><img src=\"003vMReezy6P1LyH3gqae&amp;690.jpg\" alt=\"格式化hadoop\"><br>格式化成功</p>\n<h2 id=\"同步节点\"><a href=\"#同步节点\" class=\"headerlink\" title=\"同步节点\"></a>同步节点</h2><p>将hadoop分别复制到其他节点的相同目录下（例如Master节点hadoop目录是/home/hadoop/hadoop-2.6.0其他节点也是这个目录）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell scp -r hadoop-2.6.0 hadoop@192.168.131.128:/home/hadoop/</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"启动hadoop\"><a href=\"#启动hadoop\" class=\"headerlink\" title=\"启动hadoop\"></a>启动hadoop</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell sbin/start-all.sh</span><br></pre></td></tr></table></figure>\n<p>通过<a href=\"http://192.168.131.129:50070查看hadoop相关信息\" target=\"_blank\" rel=\"external\">http://192.168.131.129:50070查看hadoop相关信息</a><br><img src=\"003vMReezy6P1MlAy3H5d&amp;690.jpg\" alt=\"启动成功\"><br>如果没有启动成功或者live noades为0查看hadoop启动日志就能很快解决问题<br><img src=\"003vMReezy6P1Mzjamje7&amp;690.jpg\" alt=\"启动失败\"></p>\n<p>查看日志看到如异常（日志文件在 hadoop logs目录下）<br><img src=\"003vMReezy6P1O1zJBg32&amp;690.jpg\" alt=\"查看日志\"><br>这个问题主要是因为Master节点clusterID 和Slave节点clusterID 号不一致导致解决办法就是删除在core-site.xml中配置的hadoop.tmp.dir 的/home/hadoop/tmp目录下所有文件重新启动就ok了</p>\n","excerpt":"<h2 id=\"准备环境\"><a href=\"#准备环境\" class=\"headerlink\" title=\"准备环境\"></a>准备环境</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">IP</th>\n<th style=\"text-align:center\">主机名称</th>\n<th style=\"text-align:center\">角色</th>\n<th style=\"text-align:center\">操作系统</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">192.168.131.129</td>\n<td style=\"text-align:center\">HadoopMaster</td>\n<td style=\"text-align:center\">NameNode JobTracker</td>\n<td style=\"text-align:center\">CentOS 6.6</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">192.168.131.128</td>\n<td style=\"text-align:center\">HadoopSlave1</td>\n<td style=\"text-align:center\">DataNode TaskTracker</td>\n<td style=\"text-align:center\">CentOS 6.6</td>\n</tr>\n</tbody>\n</table>","more":"<h2 id=\"hadoop版本\"><a href=\"#hadoop版本\" class=\"headerlink\" title=\"hadoop版本\"></a>hadoop版本</h2><p><strong><em>hadoop-2.6.0</em></strong><br><strong><em>hadoop目录结构</em></strong><br><img src=\"003vMReezy6P1MG9JTO50&amp;690.png\" alt=\"hadoop目录结构\"></p>\n<h2 id=\"修改主机名称\"><a href=\"#修改主机名称\" class=\"headerlink\" title=\"修改主机名称\"></a>修改主机名称</h2><p><strong><em>将192.168.131.129修改为HadoopMaster</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /etc/sysconfig/network</span><br><span class=\"line\">NETWORKING=yes</span><br><span class=\"line\">HOSTNAME=HadoopMaster</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>将192.168.131.128修改为HadoopSlave1</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /etc/sysconfig/network</span><br><span class=\"line\">HOSTNAME=HadoopSlave</span><br></pre></td></tr></table></figure>\n<p><strong><em>通过命令hostname输出主机名称验证是否修改成功</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell hostname</span><br><span class=\"line\">HadoopMaster</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置hosts\"><a href=\"#配置hosts\" class=\"headerlink\" title=\"配置hosts\"></a>配置hosts</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /etc/hosts</span><br><span class=\"line\">192.168.131.129 HadoopMaster</span><br><span class=\"line\">192.168.131.128 HadoopSlave1</span><br></pre></td></tr></table></figure>\n<p><strong><em>在hosts文件添加如上两行 必须保证所有节点的host一样</em></strong></p>\n<h2 id=\"安装jdk\"><a href=\"#安装jdk\" class=\"headerlink\" title=\"安装jdk\"></a>安装jdk</h2><p>第一步：检查是否已经安装了jdk 存在就卸载 rpm -e 包名<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell rpm -qa|grep java</span><br></pre></td></tr></table></figure></p>\n<p>第二步：查看yum库是否有java安装包<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell yum -y list java*</span><br></pre></td></tr></table></figure></p>\n<p>第三步：选择一个进行安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell yum -y install java-1.6.0-openjdk*</span><br></pre></td></tr></table></figure></p>\n<p>第四步：确定是否安装成功<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell java -version</span><br><span class=\"line\">java version &quot;1.6.0_20&quot;</span><br><span class=\"line\">OpenJDK Runtime Environment (IcedTea6 1.9.10) (rhel-1.23.1.9.10.el5_7-i386)</span><br><span class=\"line\">OpenJDK Client VM (build 19.0-b09, mixed mode)</span><br></pre></td></tr></table></figure></p>\n<p>显示如上信息表示安装成功</p>\n<h2 id=\"安装软件（系统一般都自带）\"><a href=\"#安装软件（系统一般都自带）\" class=\"headerlink\" title=\"安装软件（系统一般都自带）\"></a>安装软件（系统一般都自带）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell yum install ssh</span><br><span class=\"line\">shell yum install rsync</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建hadoop用户\"><a href=\"#创建hadoop用户\" class=\"headerlink\" title=\"创建hadoop用户\"></a>创建hadoop用户</h2><p>所有节点的用户名称和密码多必须保持一致相同</p>\n<h2 id=\"切换到Hadoop用户配置ssh免密码登录\"><a href=\"#切换到Hadoop用户配置ssh免密码登录\" class=\"headerlink\" title=\"切换到Hadoop用户配置ssh免密码登录\"></a>切换到Hadoop用户配置ssh免密码登录</h2><p>1、在Master节点上执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell ssh-keygen -t dsa -P &apos;&apos; -f ~/.ssh/id_dsa </span><br><span class=\"line\">shell cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></p>\n<p>2、对authorized_keys 授权<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell chmod 744 authorized_keys </span><br><span class=\"line\">shell ls ~/.ssh/</span><br></pre></td></tr></table></figure></p>\n<p>3、验证是否密码登录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell ssh HadoopMaster</span><br></pre></td></tr></table></figure></p>\n<p>4、将id_dsa.pub 复制其他Slave节点hadoop用户~/.ssh/目录下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell scp  ~/.ssh/id_dsa.pub hadoop@192.168.1.128:~/.ssh/</span><br></pre></td></tr></table></figure></p>\n<p>5、在Slave节点上通过<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></p>\n<p>生成authorized_keys并授权<br>6、在Master节点上验证是否能密码了登录Slave节点<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell ssh HadoopSlave1</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"切换到root用户下载hadoop\"><a href=\"#切换到root用户下载hadoop\" class=\"headerlink\" title=\"切换到root用户下载hadoop\"></a>切换到root用户下载hadoop</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell http://apache.fayea.com/hadoop/common/hadoop-2.6.0/hadoop-2.6.0.tar.gz</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://apache.fayea.com/hadoop/common/\">hadoop所有版本地址</a></p>\n<h2 id=\"解压hadoop\"><a href=\"#解压hadoop\" class=\"headerlink\" title=\"解压hadoop\"></a>解压hadoop</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell tar -zxvf hadoop-2.6.0.tar.gz</span><br></pre></td></tr></table></figure>\n<p>将hadoop移动到/home/hadoop/目录下<br>把hadoop-2.6.0目录操作权限分配给hadoop用户<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell chown hadoop hadoop-2.6.0/*</span><br><span class=\"line\">shell chmod 700 hadoop-2.6.0/*</span><br></pre></td></tr></table></figure></p>\n<p>查看文件操作操作用户权限<br><img src=\"003vMReezy6P1KnAQkx19&amp;690.png\" alt=\"文件权限\"></p>\n<h2 id=\"设置hadoop启动参数\"><a href=\"#设置hadoop启动参数\" class=\"headerlink\" title=\"设置hadoop启动参数\"></a>设置hadoop启动参数</h2><h3 id=\"设置java安装路径\"><a href=\"#设置java安装路径\" class=\"headerlink\" title=\"设置java安装路径\"></a>设置java安装路径</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi etc/hadoop/hadoop-env.sh</span><br><span class=\"line\">export JAVA_HOME=java的安装路径</span><br></pre></td></tr></table></figure>\n<p>如果通过yum安装的jdk不知道java安装路径可以通过如下命令查找<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell which java</span><br><span class=\"line\">/use/bin/java</span><br></pre></td></tr></table></figure></p>\n<p>得到的路径是/use/bin/java只需要将JAVE_HOME=/use即可<br><img src=\"003vMReezy6P1KHLwtFe7&amp;690.png\" alt=\"java环境配置\"></p>\n<h2 id=\"配置core-site-xml\"><a href=\"#配置core-site-xml\" class=\"headerlink\" title=\"配置core-site.xml\"></a>配置core-site.xml</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell /home/hadoop/hadoop-2.6.0/etc/hadoop/core-site.xml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>hadoop.tmp.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>/home/hadoop/tmp<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Abase for other temporary directories.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>fs.default.name<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>hdfs://HadoopMaster:9000<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>         </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>          </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>            </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>mapred.job.tracker<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>           </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>hdfs://HadoopMaster:9001<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>                      </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>io.file.buffer.size<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>4096<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"配置hdfs-site-xml\"><a href=\"#配置hdfs-site-xml\" class=\"headerlink\" title=\"配置hdfs-site.xml\"></a>配置hdfs-site.xml</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /home/hadoop/hadoop-2.6.0/etc/hadoop/hdfs-site.xml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.nameservices<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>hadoop-cluster1<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>HadoopMaster:50090<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.name.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///home/hadoop/dfs/name<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.datanode.data.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///home/hadoop/dfs/data<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.replication<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.webhdfs.enabled<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"配置slaves\"><a href=\"#配置slaves\" class=\"headerlink\" title=\"配置slaves\"></a>配置slaves</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /home/hadoop/hadoop-2.6.0/etc/hadoop/slaves</span><br></pre></td></tr></table></figure>\n<p><strong><em>集群中所有slave节点的配置文件HadoopSlave1是Slave节点主机名称</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell cat etc/hadoop/slaves</span><br><span class=\"line\">localhost</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>将localhost修改为HadoopSlave1</em></strong></p>\n<h2 id=\"配置hadoop安装目录\"><a href=\"#配置hadoop安装目录\" class=\"headerlink\" title=\"配置hadoop安装目录\"></a>配置hadoop安装目录</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">export HADOOP_HOME=/home/hadoop/hadoop-2.6.0</span><br><span class=\"line\">export HADOOP_COMMON_HOME=$HADOOP_HOME</span><br><span class=\"line\">export HADOOP_HDFS_HOME=$HADOOP_HOME</span><br><span class=\"line\">export HADOOP_MAPRED_HOME=$HADOOP_HOME</span><br><span class=\"line\">export HADOOP_YARN_HOME=$HADOOP_HOME</span><br><span class=\"line\">export HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop</span><br><span class=\"line\">export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOOME/sbin:$HADOOP_HOME/lib</span><br><span class=\"line\">export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native</span><br><span class=\"line\">export HADOOP_OPTS=&quot;-Djava.library.path=$HADOOP_HOME/lib&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">#使修改立即生效</span><br><span class=\"line\">shell source /etc/profile</span><br></pre></td></tr></table></figure>\n<p><strong><em>注意：如果不添加上面配置可能会报如下错误</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">15/01/07 23:52:35 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable</span><br><span class=\"line\">Starting namenodes on [OpenJDK Client VM warning: You have loaded library /home/hadoop/hadoop-2.6.0/lib/native/libhadoop.so.1.0.0 which might have disabled stack guard. The VM will try to fix the stack guard now.</span><br><span class=\"line\">It&apos;s highly recommended that you fix the library with &apos;execstack -c &apos;, or link it with &apos;-z noexecstack&apos;.</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"格式化hadoop\"><a href=\"#格式化hadoop\" class=\"headerlink\" title=\"格式化hadoop\"></a>格式化hadoop</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell bin/hadoop namenode -format</span><br></pre></td></tr></table></figure>\n<p><img src=\"003vMReezy6P1LyH3gqae&amp;690.jpg\" alt=\"格式化hadoop\"><br>格式化成功</p>\n<h2 id=\"同步节点\"><a href=\"#同步节点\" class=\"headerlink\" title=\"同步节点\"></a>同步节点</h2><p>将hadoop分别复制到其他节点的相同目录下（例如Master节点hadoop目录是/home/hadoop/hadoop-2.6.0其他节点也是这个目录）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell scp -r hadoop-2.6.0 hadoop@192.168.131.128:/home/hadoop/</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"启动hadoop\"><a href=\"#启动hadoop\" class=\"headerlink\" title=\"启动hadoop\"></a>启动hadoop</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell sbin/start-all.sh</span><br></pre></td></tr></table></figure>\n<p>通过<a href=\"http://192.168.131.129:50070查看hadoop相关信息\">http://192.168.131.129:50070查看hadoop相关信息</a><br><img src=\"003vMReezy6P1MlAy3H5d&amp;690.jpg\" alt=\"启动成功\"><br>如果没有启动成功或者live noades为0查看hadoop启动日志就能很快解决问题<br><img src=\"003vMReezy6P1Mzjamje7&amp;690.jpg\" alt=\"启动失败\"></p>\n<p>查看日志看到如异常（日志文件在 hadoop logs目录下）<br><img src=\"003vMReezy6P1O1zJBg32&amp;690.jpg\" alt=\"查看日志\"><br>这个问题主要是因为Master节点clusterID 和Slave节点clusterID 号不一致导致解决办法就是删除在core-site.xml中配置的hadoop.tmp.dir 的/home/hadoop/tmp目录下所有文件重新启动就ok了</p>"},{"title":"Linux常见问题解决方法","date":"2016-05-10T12:05:33.000Z","comments":1,"_content":"\n### 使用SSH登陆Linux的时候提示\n 1. 问题描述\n```shell\nThe host '192.168.1.240' is unreachable.\nthe host may be down,or there may be a problem with the network connection.Sometimes such problems can also be caused by a misconfigured firewall\n```\n**解决办法**\n<!-- more -->\n 1. 关闭防火墙\n```shell\nservice iptables stop(重启生效)\niptables -F(立即生效)\n```\n***如果通过上面的方法还是无法连接那就是sshd服务没有启动***\n\n 2. 启动服务就可以正常访问。\n```shell\n service sshd start\n```\n\n\n----------\n### connect network is unreachable\n原因是没有正确设置IP地址\n**解决办法**\n 1. 修改ifcfg-eth0\n```shell\nvi /etc/sysconfig/network-scripts/ifcfg-eth0\n\nservice network restart\nroute add default  gw 192.168.1.1(设置网关)\nservice network restart\n```\n----------\n\n### linux从一台主机复杂文件目录到另一台\n\n 1. 复制文件\n```shell\nscp conf.xml root@192.168.1.240:/usr/conf\n\n说明：scp 文件名 用户名@计算机IP或者计算机名称 :远程路径\n```\n\n 2. 复制目录\n```shell\nscp -r apache-tomcat-6.0.41 root@192.168.1.240:/usr/tomcat\n\n说明：scp -r 目录名 用户名@计算机IP或者计算机名称 :远程路径\n```\n\n\n----------\n### make：cc：命令未找到\n**解决办法**\n 1. 安装gcc\n```shell\nyum -y install gcc automake autoconf libtool make\n```\n\n\n----------\n\n### /bin/sh:ctags:command not found\n**解决办法**\n 1. 安装ctags\n```shell\nyum install ctags\n```\n\n\n\n\n","source":"_posts/Linux常见问题解决方法.md","raw":"---\ntitle: Linux常见问题解决方法\ndate: 2016-05-10 20:05:33 \ncomments: true \ncategories: Linux\n---\n\n### 使用SSH登陆Linux的时候提示\n 1. 问题描述\n```shell\nThe host '192.168.1.240' is unreachable.\nthe host may be down,or there may be a problem with the network connection.Sometimes such problems can also be caused by a misconfigured firewall\n```\n**解决办法**\n<!-- more -->\n 1. 关闭防火墙\n```shell\nservice iptables stop(重启生效)\niptables -F(立即生效)\n```\n***如果通过上面的方法还是无法连接那就是sshd服务没有启动***\n\n 2. 启动服务就可以正常访问。\n```shell\n service sshd start\n```\n\n\n----------\n### connect network is unreachable\n原因是没有正确设置IP地址\n**解决办法**\n 1. 修改ifcfg-eth0\n```shell\nvi /etc/sysconfig/network-scripts/ifcfg-eth0\n\nservice network restart\nroute add default  gw 192.168.1.1(设置网关)\nservice network restart\n```\n----------\n\n### linux从一台主机复杂文件目录到另一台\n\n 1. 复制文件\n```shell\nscp conf.xml root@192.168.1.240:/usr/conf\n\n说明：scp 文件名 用户名@计算机IP或者计算机名称 :远程路径\n```\n\n 2. 复制目录\n```shell\nscp -r apache-tomcat-6.0.41 root@192.168.1.240:/usr/tomcat\n\n说明：scp -r 目录名 用户名@计算机IP或者计算机名称 :远程路径\n```\n\n\n----------\n### make：cc：命令未找到\n**解决办法**\n 1. 安装gcc\n```shell\nyum -y install gcc automake autoconf libtool make\n```\n\n\n----------\n\n### /bin/sh:ctags:command not found\n**解决办法**\n 1. 安装ctags\n```shell\nyum install ctags\n```\n\n\n\n\n","slug":"Linux常见问题解决方法","published":1,"updated":"2016-05-11T11:54:03.519Z","layout":"post","photos":[],"link":"","_id":"cio5q2liv00037oyb1pgvab2o","content":"<h3 id=\"使用SSH登陆Linux的时候提示\"><a href=\"#使用SSH登陆Linux的时候提示\" class=\"headerlink\" title=\"使用SSH登陆Linux的时候提示\"></a>使用SSH登陆Linux的时候提示</h3><ol>\n<li>问题描述<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The host &apos;192.168.1.240&apos; is unreachable.</span><br><span class=\"line\">the host may be down,or there may be a problem with the network connection.Sometimes such problems can also be caused by a misconfigured firewall</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>解决办法</strong><br><a id=\"more\"></a></p>\n<ol>\n<li>关闭防火墙<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service iptables stop(重启生效)</span><br><span class=\"line\">iptables -F(立即生效)</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong><em>如果通过上面的方法还是无法连接那就是sshd服务没有启动</em></strong></p>\n<ol>\n<li>启动服务就可以正常访问。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service sshd start</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h3 id=\"connect-network-is-unreachable\"><a href=\"#connect-network-is-unreachable\" class=\"headerlink\" title=\"connect network is unreachable\"></a>connect network is unreachable</h3><p>原因是没有正确设置IP地址<br><strong>解决办法</strong></p>\n<ol>\n<li>修改ifcfg-eth0<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class=\"line\"></span><br><span class=\"line\">service network restart</span><br><span class=\"line\">route add default  gw 192.168.1.1(设置网关)</span><br><span class=\"line\">service network restart</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h3 id=\"linux从一台主机复杂文件目录到另一台\"><a href=\"#linux从一台主机复杂文件目录到另一台\" class=\"headerlink\" title=\"linux从一台主机复杂文件目录到另一台\"></a>linux从一台主机复杂文件目录到另一台</h3><ol>\n<li><p>复制文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp conf.xml root@192.168.1.240:/usr/conf</span><br><span class=\"line\"></span><br><span class=\"line\">说明：scp 文件名 用户名@计算机IP或者计算机名称 :远程路径</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>复制目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r apache-tomcat-6.0.41 root@192.168.1.240:/usr/tomcat</span><br><span class=\"line\"></span><br><span class=\"line\">说明：scp -r 目录名 用户名@计算机IP或者计算机名称 :远程路径</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h3 id=\"make：cc：命令未找到\"><a href=\"#make：cc：命令未找到\" class=\"headerlink\" title=\"make：cc：命令未找到\"></a>make：cc：命令未找到</h3><p><strong>解决办法</strong></p>\n<ol>\n<li>安装gcc<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install gcc automake autoconf libtool make</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h3 id=\"bin-sh-ctags-command-not-found\"><a href=\"#bin-sh-ctags-command-not-found\" class=\"headerlink\" title=\"/bin/sh:ctags:command not found\"></a>/bin/sh:ctags:command not found</h3><p><strong>解决办法</strong></p>\n<ol>\n<li>安装ctags<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install ctags</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","excerpt":"<h3 id=\"使用SSH登陆Linux的时候提示\"><a href=\"#使用SSH登陆Linux的时候提示\" class=\"headerlink\" title=\"使用SSH登陆Linux的时候提示\"></a>使用SSH登陆Linux的时候提示</h3><ol>\n<li>问题描述<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The host &apos;192.168.1.240&apos; is unreachable.</span><br><span class=\"line\">the host may be down,or there may be a problem with the network connection.Sometimes such problems can also be caused by a misconfigured firewall</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>解决办法</strong><br>","more":"</p>\n<ol>\n<li>关闭防火墙<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service iptables stop(重启生效)</span><br><span class=\"line\">iptables -F(立即生效)</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong><em>如果通过上面的方法还是无法连接那就是sshd服务没有启动</em></strong></p>\n<ol>\n<li>启动服务就可以正常访问。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service sshd start</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h3 id=\"connect-network-is-unreachable\"><a href=\"#connect-network-is-unreachable\" class=\"headerlink\" title=\"connect network is unreachable\"></a>connect network is unreachable</h3><p>原因是没有正确设置IP地址<br><strong>解决办法</strong></p>\n<ol>\n<li>修改ifcfg-eth0<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class=\"line\"></span><br><span class=\"line\">service network restart</span><br><span class=\"line\">route add default  gw 192.168.1.1(设置网关)</span><br><span class=\"line\">service network restart</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h3 id=\"linux从一台主机复杂文件目录到另一台\"><a href=\"#linux从一台主机复杂文件目录到另一台\" class=\"headerlink\" title=\"linux从一台主机复杂文件目录到另一台\"></a>linux从一台主机复杂文件目录到另一台</h3><ol>\n<li><p>复制文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp conf.xml root@192.168.1.240:/usr/conf</span><br><span class=\"line\"></span><br><span class=\"line\">说明：scp 文件名 用户名@计算机IP或者计算机名称 :远程路径</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>复制目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r apache-tomcat-6.0.41 root@192.168.1.240:/usr/tomcat</span><br><span class=\"line\"></span><br><span class=\"line\">说明：scp -r 目录名 用户名@计算机IP或者计算机名称 :远程路径</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h3 id=\"make：cc：命令未找到\"><a href=\"#make：cc：命令未找到\" class=\"headerlink\" title=\"make：cc：命令未找到\"></a>make：cc：命令未找到</h3><p><strong>解决办法</strong></p>\n<ol>\n<li>安装gcc<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install gcc automake autoconf libtool make</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h3 id=\"bin-sh-ctags-command-not-found\"><a href=\"#bin-sh-ctags-command-not-found\" class=\"headerlink\" title=\"/bin/sh:ctags:command not found\"></a>/bin/sh:ctags:command not found</h3><p><strong>解决办法</strong></p>\n<ol>\n<li>安装ctags<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install ctags</span><br></pre></td></tr></table></figure>\n</li>\n</ol>"},{"title":"Java设计模式之观察者模式","date":"2015-01-05T06:43:27.000Z","comments":1,"toc":true,"_content":"\n观察者模式定义了一个一对多的依赖关系，让一个或多个观察者对象监察一个主题对象。这样一个主题对象在状态上的变化能够通知所有的依赖于此对象的那些观察者对象，使这些观察者对象能够自动更新。\n观察者（Observer）模式是对象的行为型模式，又叫做发表-订阅（Publish/Subscribe）模式、模型-视图（Model/View）模式、源-收听者（Source/Listener）模式或从属者（Dependents）模式。\n\t  \n<!-- more --> \n### 类图结构\n![类图结构](class.jpg)\n\n### 抽象主题\n主题把所有的观察者对象引用保存到一个集合中，每个主题都可以有任何数量的观察者。主题提供一个增加、销毁观察者和通知所有观察者的方法。\n\n![抽象主题](003vMReezy6OWsKgs3pa3&690.jpg)\n\n### 抽象观察者\n为所有具体的观察者定义一个接口，再得到通知更新自己。\n\n![抽象观察者](003vMReezy6OWsC8Oogc8&690.jpg)\n\n### 具体主题\n保存对具体观察者对象有用的内部状态；在这种内部状态改变时给其观察者发出一个通知；具体主题角色又叫作具体被观察者角色；\n\n### 具体观察者\n保存一个指向具体主题对象的引用；和一个与主题的状态相符的状态。具体观察者角色实现抽象观察者角色所要求的更新自己的接口，以便使本身的状态与主题的状态同步。\n\n\n下面就使用java.util.Observable 和java.util.Observer 实现观察者模式\n\n***代码清单一：具体主题***\n```java\npackage com.design.mode;\n\nimport java.util.Observable;\npublic class Subject extends Observable{\n  private String str;\n  public void add(String str){\n\tthis.str = str;\n\t//设置change=true\n\tsetChanged();\n\t//通知所有观察者主题有改变\n\tnotifyObservers(str);\n\t//notifyObservers();\n  }\n}\n```\n\n***代码清单二：具体观察者***\n```java\npackage com.design.mode;\nimport java.util.Observable;\nimport java.util.Observer;\npublic class SubjectObserver extends Observer{\n  public SubjectObserver(Observable 0){\n\to.addObserver(this);\n  }\n\t\n  public void update(Observable o,Object arg){\n\tSystem.out.println(arg);\n  }\n}\n```\n\n***代码清单三：测试***\n```java\npackage com.design.mode;\n\npublic class Test{\n  public static void main(String[] args){\n\t//实例化主题\n\tSubject sb = new Subject();\n\t//实例化观察者\n\tSubjectObserver so = new SubjectObserver(sb);\n\tsb.add(\"hello world\");\n  }\n}\n```\n***控制台输出***\n```\nhello world\n```\n\n### 总结\n观察者设计模式降低了系统的耦合度被观察者角色所知道的只是一个具体观察者列表，每一个具体观察者都符合一个抽象观察者的接口。被观察者并不认识任何一个具体观察者，它只知道它们都有一个共同的接口。\n由于被观察者和观察者没有紧密地耦合在一起，因此它们可以属于不同的抽象化层次。如果被观察者和观察者都被扔到一起，那么这个对象必然跨越抽象化和具体化层次。\n\n\n\n","source":"_posts/Java设计模式之观察者模式.md","raw":"---\ntitle: Java设计模式之观察者模式\ndate: 2015-01-05 14:43:27 \ncomments: true \ncategories: Java\ntoc: true\n---\n\n观察者模式定义了一个一对多的依赖关系，让一个或多个观察者对象监察一个主题对象。这样一个主题对象在状态上的变化能够通知所有的依赖于此对象的那些观察者对象，使这些观察者对象能够自动更新。\n观察者（Observer）模式是对象的行为型模式，又叫做发表-订阅（Publish/Subscribe）模式、模型-视图（Model/View）模式、源-收听者（Source/Listener）模式或从属者（Dependents）模式。\n\t  \n<!-- more --> \n### 类图结构\n![类图结构](class.jpg)\n\n### 抽象主题\n主题把所有的观察者对象引用保存到一个集合中，每个主题都可以有任何数量的观察者。主题提供一个增加、销毁观察者和通知所有观察者的方法。\n\n![抽象主题](003vMReezy6OWsKgs3pa3&690.jpg)\n\n### 抽象观察者\n为所有具体的观察者定义一个接口，再得到通知更新自己。\n\n![抽象观察者](003vMReezy6OWsC8Oogc8&690.jpg)\n\n### 具体主题\n保存对具体观察者对象有用的内部状态；在这种内部状态改变时给其观察者发出一个通知；具体主题角色又叫作具体被观察者角色；\n\n### 具体观察者\n保存一个指向具体主题对象的引用；和一个与主题的状态相符的状态。具体观察者角色实现抽象观察者角色所要求的更新自己的接口，以便使本身的状态与主题的状态同步。\n\n\n下面就使用java.util.Observable 和java.util.Observer 实现观察者模式\n\n***代码清单一：具体主题***\n```java\npackage com.design.mode;\n\nimport java.util.Observable;\npublic class Subject extends Observable{\n  private String str;\n  public void add(String str){\n\tthis.str = str;\n\t//设置change=true\n\tsetChanged();\n\t//通知所有观察者主题有改变\n\tnotifyObservers(str);\n\t//notifyObservers();\n  }\n}\n```\n\n***代码清单二：具体观察者***\n```java\npackage com.design.mode;\nimport java.util.Observable;\nimport java.util.Observer;\npublic class SubjectObserver extends Observer{\n  public SubjectObserver(Observable 0){\n\to.addObserver(this);\n  }\n\t\n  public void update(Observable o,Object arg){\n\tSystem.out.println(arg);\n  }\n}\n```\n\n***代码清单三：测试***\n```java\npackage com.design.mode;\n\npublic class Test{\n  public static void main(String[] args){\n\t//实例化主题\n\tSubject sb = new Subject();\n\t//实例化观察者\n\tSubjectObserver so = new SubjectObserver(sb);\n\tsb.add(\"hello world\");\n  }\n}\n```\n***控制台输出***\n```\nhello world\n```\n\n### 总结\n观察者设计模式降低了系统的耦合度被观察者角色所知道的只是一个具体观察者列表，每一个具体观察者都符合一个抽象观察者的接口。被观察者并不认识任何一个具体观察者，它只知道它们都有一个共同的接口。\n由于被观察者和观察者没有紧密地耦合在一起，因此它们可以属于不同的抽象化层次。如果被观察者和观察者都被扔到一起，那么这个对象必然跨越抽象化和具体化层次。\n\n\n\n","slug":"Java设计模式之观察者模式","published":1,"updated":"2016-05-11T12:40:50.499Z","layout":"post","photos":[],"link":"","_id":"cio5q2liv00047oybaem3lmaf","content":"<p>观察者模式定义了一个一对多的依赖关系，让一个或多个观察者对象监察一个主题对象。这样一个主题对象在状态上的变化能够通知所有的依赖于此对象的那些观察者对象，使这些观察者对象能够自动更新。<br>观察者（Observer）模式是对象的行为型模式，又叫做发表-订阅（Publish/Subscribe）模式、模型-视图（Model/View）模式、源-收听者（Source/Listener）模式或从属者（Dependents）模式。</p>\n<a id=\"more\"></a> \n<h3 id=\"类图结构\"><a href=\"#类图结构\" class=\"headerlink\" title=\"类图结构\"></a>类图结构</h3><p><img src=\"class.jpg\" alt=\"类图结构\"></p>\n<h3 id=\"抽象主题\"><a href=\"#抽象主题\" class=\"headerlink\" title=\"抽象主题\"></a>抽象主题</h3><p>主题把所有的观察者对象引用保存到一个集合中，每个主题都可以有任何数量的观察者。主题提供一个增加、销毁观察者和通知所有观察者的方法。</p>\n<p><img src=\"003vMReezy6OWsKgs3pa3&amp;690.jpg\" alt=\"抽象主题\"></p>\n<h3 id=\"抽象观察者\"><a href=\"#抽象观察者\" class=\"headerlink\" title=\"抽象观察者\"></a>抽象观察者</h3><p>为所有具体的观察者定义一个接口，再得到通知更新自己。</p>\n<p><img src=\"003vMReezy6OWsC8Oogc8&amp;690.jpg\" alt=\"抽象观察者\"></p>\n<h3 id=\"具体主题\"><a href=\"#具体主题\" class=\"headerlink\" title=\"具体主题\"></a>具体主题</h3><p>保存对具体观察者对象有用的内部状态；在这种内部状态改变时给其观察者发出一个通知；具体主题角色又叫作具体被观察者角色；</p>\n<h3 id=\"具体观察者\"><a href=\"#具体观察者\" class=\"headerlink\" title=\"具体观察者\"></a>具体观察者</h3><p>保存一个指向具体主题对象的引用；和一个与主题的状态相符的状态。具体观察者角色实现抽象观察者角色所要求的更新自己的接口，以便使本身的状态与主题的状态同步。</p>\n<p>下面就使用java.util.Observable 和java.util.Observer 实现观察者模式</p>\n<p><strong><em>代码清单一：具体主题</em></strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.design.mode;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Observable;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Subject</span> <span class=\"keyword\">extends</span> <span class=\"title\">Observable</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String str;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(String str)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.str = str;</span><br><span class=\"line\">\t<span class=\"comment\">//设置change=true</span></span><br><span class=\"line\">\tsetChanged();</span><br><span class=\"line\">\t<span class=\"comment\">//通知所有观察者主题有改变</span></span><br><span class=\"line\">\tnotifyObservers(str);</span><br><span class=\"line\">\t<span class=\"comment\">//notifyObservers();</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>代码清单二：具体观察者</em></strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.design.mode;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Observable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Observer;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SubjectObserver</span> <span class=\"keyword\">extends</span> <span class=\"title\">Observer</span></span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SubjectObserver</span><span class=\"params\">(Observable <span class=\"number\">0</span>)</span></span>&#123;</span><br><span class=\"line\">\to.addObserver(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(Observable o,Object arg)</span></span>&#123;</span><br><span class=\"line\">\tSystem.out.println(arg);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>代码清单三：测试</em></strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.design.mode;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//实例化主题</span></span><br><span class=\"line\">\tSubject sb = <span class=\"keyword\">new</span> Subject();</span><br><span class=\"line\">\t<span class=\"comment\">//实例化观察者</span></span><br><span class=\"line\">\tSubjectObserver so = <span class=\"keyword\">new</span> SubjectObserver(sb);</span><br><span class=\"line\">\tsb.add(<span class=\"string\">\"hello world\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>控制台输出</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hello world</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>观察者设计模式降低了系统的耦合度被观察者角色所知道的只是一个具体观察者列表，每一个具体观察者都符合一个抽象观察者的接口。被观察者并不认识任何一个具体观察者，它只知道它们都有一个共同的接口。<br>由于被观察者和观察者没有紧密地耦合在一起，因此它们可以属于不同的抽象化层次。如果被观察者和观察者都被扔到一起，那么这个对象必然跨越抽象化和具体化层次。</p>\n","excerpt":"<p>观察者模式定义了一个一对多的依赖关系，让一个或多个观察者对象监察一个主题对象。这样一个主题对象在状态上的变化能够通知所有的依赖于此对象的那些观察者对象，使这些观察者对象能够自动更新。<br>观察者（Observer）模式是对象的行为型模式，又叫做发表-订阅（Publish/Subscribe）模式、模型-视图（Model/View）模式、源-收听者（Source/Listener）模式或从属者（Dependents）模式。</p>","more":"<h3 id=\"类图结构\"><a href=\"#类图结构\" class=\"headerlink\" title=\"类图结构\"></a>类图结构</h3><p><img src=\"class.jpg\" alt=\"类图结构\"></p>\n<h3 id=\"抽象主题\"><a href=\"#抽象主题\" class=\"headerlink\" title=\"抽象主题\"></a>抽象主题</h3><p>主题把所有的观察者对象引用保存到一个集合中，每个主题都可以有任何数量的观察者。主题提供一个增加、销毁观察者和通知所有观察者的方法。</p>\n<p><img src=\"003vMReezy6OWsKgs3pa3&amp;690.jpg\" alt=\"抽象主题\"></p>\n<h3 id=\"抽象观察者\"><a href=\"#抽象观察者\" class=\"headerlink\" title=\"抽象观察者\"></a>抽象观察者</h3><p>为所有具体的观察者定义一个接口，再得到通知更新自己。</p>\n<p><img src=\"003vMReezy6OWsC8Oogc8&amp;690.jpg\" alt=\"抽象观察者\"></p>\n<h3 id=\"具体主题\"><a href=\"#具体主题\" class=\"headerlink\" title=\"具体主题\"></a>具体主题</h3><p>保存对具体观察者对象有用的内部状态；在这种内部状态改变时给其观察者发出一个通知；具体主题角色又叫作具体被观察者角色；</p>\n<h3 id=\"具体观察者\"><a href=\"#具体观察者\" class=\"headerlink\" title=\"具体观察者\"></a>具体观察者</h3><p>保存一个指向具体主题对象的引用；和一个与主题的状态相符的状态。具体观察者角色实现抽象观察者角色所要求的更新自己的接口，以便使本身的状态与主题的状态同步。</p>\n<p>下面就使用java.util.Observable 和java.util.Observer 实现观察者模式</p>\n<p><strong><em>代码清单一：具体主题</em></strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.design.mode;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Observable;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Subject</span> <span class=\"keyword\">extends</span> <span class=\"title\">Observable</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String str;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(String str)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.str = str;</span><br><span class=\"line\">\t<span class=\"comment\">//设置change=true</span></span><br><span class=\"line\">\tsetChanged();</span><br><span class=\"line\">\t<span class=\"comment\">//通知所有观察者主题有改变</span></span><br><span class=\"line\">\tnotifyObservers(str);</span><br><span class=\"line\">\t<span class=\"comment\">//notifyObservers();</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>代码清单二：具体观察者</em></strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.design.mode;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Observable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Observer;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SubjectObserver</span> <span class=\"keyword\">extends</span> <span class=\"title\">Observer</span></span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SubjectObserver</span><span class=\"params\">(Observable <span class=\"number\">0</span>)</span></span>&#123;</span><br><span class=\"line\">\to.addObserver(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(Observable o,Object arg)</span></span>&#123;</span><br><span class=\"line\">\tSystem.out.println(arg);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>代码清单三：测试</em></strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.design.mode;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//实例化主题</span></span><br><span class=\"line\">\tSubject sb = <span class=\"keyword\">new</span> Subject();</span><br><span class=\"line\">\t<span class=\"comment\">//实例化观察者</span></span><br><span class=\"line\">\tSubjectObserver so = <span class=\"keyword\">new</span> SubjectObserver(sb);</span><br><span class=\"line\">\tsb.add(<span class=\"string\">\"hello world\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>控制台输出</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hello world</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>观察者设计模式降低了系统的耦合度被观察者角色所知道的只是一个具体观察者列表，每一个具体观察者都符合一个抽象观察者的接口。被观察者并不认识任何一个具体观察者，它只知道它们都有一个共同的接口。<br>由于被观察者和观察者没有紧密地耦合在一起，因此它们可以属于不同的抽象化层次。如果被观察者和观察者都被扔到一起，那么这个对象必然跨越抽象化和具体化层次。</p>"},{"title":"System.setOut","date":"2016-05-10T12:10:33.000Z","comments":1,"_content":"   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今天一同事问我System.out.println()输出的内容为什么没有输出到日志文件中。他告诉我的是他使用的weblogic中间件。说起这个真的平时没太注意。因为我之前一直使用的是jboss，查看日志也是看的jboss日志文件，通过System.out.println输出的内容也显示在了日志文件中。带着好奇心去看了下自己系统下的日志文件果然没有。于是打开jboss的log4j.xml 与自己系统下的log4j.xml进行了一下对比发现并无不同。于是打开jboss代码看了下发现jboss org.jboss.logging.Log4jService  installSystemAdapters方法中对System.setOut 有设置。\n   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表示对于System.setOut不懂到网上百度了下，官方说明是通过System.setOut方法允许程序员自行定义System.out输出流， 我们可以将我们改造好的PrintStream替换java原来的System.out对象。于是他这个问题就很好解决了。\n<!-- more --> \n```java\npublic void init() {\n  PrintStream printStream = new PrintStream(System.out) {\n   public void println(boolean x) {\n    log(Boolean.valueOf(x));\n   }\n\n   public void println(char x) {\n    log(Character.valueOf(x));\n   }\n\n   public void println(char[] x) {\n    log(x == null ? null : new String(x));\n   }\n\n   public void println(double x) {\n    log(Double.valueOf(x));\n   }\n\n   public void println(float x) {\n    log(Float.valueOf(x));\n   }\n\n   public void println(int x) {\n    log(Integer.valueOf(x));\n   }\n\n   public void println(long x) {\n    log(x);\n   }\n\n   public void println(Object x) {\n    log(x);\n   }\n\n   public void println(String x) {\n    log(x);\n   }\n  };\n  System.setOut(printStream);\n  System.setErr(printStream);\n\n }\n\n private void log(Object info) {\n  LogFactoryImpl.getLog(getClass()).info(info);\n }\n```\n\n在web的监听器里面初始下这个就可以了\n\n下面是log4j的配置文件\n\n```\nlog4j.rootLogger=INFO,Stdout,R\nlog4j.appender.Stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.Stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.Stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %m%n\nlog4j.appender.R=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.R.File=F:/stdout.log\nlog4j.appender.R.datePattern='.'yyyy-MM-dd'.txt'\nlog4j.appender.R.layout=org.apache.log4j.PatternLayout\nlog4j.appender.R.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %m%n\n```\n\n","source":"_posts/System.setOut.md","raw":"---\ntitle: System.setOut\ndate: 2016-05-10 20:10:33 \ncomments: true \ncategories: Java\n---\n   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今天一同事问我System.out.println()输出的内容为什么没有输出到日志文件中。他告诉我的是他使用的weblogic中间件。说起这个真的平时没太注意。因为我之前一直使用的是jboss，查看日志也是看的jboss日志文件，通过System.out.println输出的内容也显示在了日志文件中。带着好奇心去看了下自己系统下的日志文件果然没有。于是打开jboss的log4j.xml 与自己系统下的log4j.xml进行了一下对比发现并无不同。于是打开jboss代码看了下发现jboss org.jboss.logging.Log4jService  installSystemAdapters方法中对System.setOut 有设置。\n   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表示对于System.setOut不懂到网上百度了下，官方说明是通过System.setOut方法允许程序员自行定义System.out输出流， 我们可以将我们改造好的PrintStream替换java原来的System.out对象。于是他这个问题就很好解决了。\n<!-- more --> \n```java\npublic void init() {\n  PrintStream printStream = new PrintStream(System.out) {\n   public void println(boolean x) {\n    log(Boolean.valueOf(x));\n   }\n\n   public void println(char x) {\n    log(Character.valueOf(x));\n   }\n\n   public void println(char[] x) {\n    log(x == null ? null : new String(x));\n   }\n\n   public void println(double x) {\n    log(Double.valueOf(x));\n   }\n\n   public void println(float x) {\n    log(Float.valueOf(x));\n   }\n\n   public void println(int x) {\n    log(Integer.valueOf(x));\n   }\n\n   public void println(long x) {\n    log(x);\n   }\n\n   public void println(Object x) {\n    log(x);\n   }\n\n   public void println(String x) {\n    log(x);\n   }\n  };\n  System.setOut(printStream);\n  System.setErr(printStream);\n\n }\n\n private void log(Object info) {\n  LogFactoryImpl.getLog(getClass()).info(info);\n }\n```\n\n在web的监听器里面初始下这个就可以了\n\n下面是log4j的配置文件\n\n```\nlog4j.rootLogger=INFO,Stdout,R\nlog4j.appender.Stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.Stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.Stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %m%n\nlog4j.appender.R=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.R.File=F:/stdout.log\nlog4j.appender.R.datePattern='.'yyyy-MM-dd'.txt'\nlog4j.appender.R.layout=org.apache.log4j.PatternLayout\nlog4j.appender.R.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %m%n\n```\n\n","slug":"System.setOut","published":1,"updated":"2016-05-11T11:54:03.519Z","layout":"post","photos":[],"link":"","_id":"cio5q2liv00057oybjke4iqzy","content":"<p>   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今天一同事问我System.out.println()输出的内容为什么没有输出到日志文件中。他告诉我的是他使用的weblogic中间件。说起这个真的平时没太注意。因为我之前一直使用的是jboss，查看日志也是看的jboss日志文件，通过System.out.println输出的内容也显示在了日志文件中。带着好奇心去看了下自己系统下的日志文件果然没有。于是打开jboss的log4j.xml 与自己系统下的log4j.xml进行了一下对比发现并无不同。于是打开jboss代码看了下发现jboss org.jboss.logging.Log4jService  installSystemAdapters方法中对System.setOut 有设置。<br>   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表示对于System.setOut不懂到网上百度了下，官方说明是通过System.setOut方法允许程序员自行定义System.out输出流， 我们可以将我们改造好的PrintStream替换java原来的System.out对象。于是他这个问题就很好解决了。<br><a id=\"more\"></a><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  PrintStream printStream = <span class=\"keyword\">new</span> PrintStream(System.out) &#123;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">boolean</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(Boolean.valueOf(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">char</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(Character.valueOf(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">char</span>[] x)</span> </span>&#123;</span><br><span class=\"line\">    log(x == <span class=\"keyword\">null</span> ? <span class=\"keyword\">null</span> : <span class=\"keyword\">new</span> String(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">double</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(Double.valueOf(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">float</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(Float.valueOf(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(Integer.valueOf(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">long</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(x);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(Object x)</span> </span>&#123;</span><br><span class=\"line\">    log(x);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(String x)</span> </span>&#123;</span><br><span class=\"line\">    log(x);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  System.setOut(printStream);</span><br><span class=\"line\">  System.setErr(printStream);</span><br><span class=\"line\"></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">log</span><span class=\"params\">(Object info)</span> </span>&#123;</span><br><span class=\"line\">  LogFactoryImpl.getLog(getClass()).info(info);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n<p>在web的监听器里面初始下这个就可以了</p>\n<p>下面是log4j的配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log4j.rootLogger=INFO,Stdout,R</span><br><span class=\"line\">log4j.appender.Stdout=org.apache.log4j.ConsoleAppender</span><br><span class=\"line\">log4j.appender.Stdout.layout=org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.Stdout.layout.ConversionPattern=%d&#123;yyyy-MM-dd HH:mm:ss&#125; %-5p %m%n</span><br><span class=\"line\">log4j.appender.R=org.apache.log4j.DailyRollingFileAppender</span><br><span class=\"line\">log4j.appender.R.File=F:/stdout.log</span><br><span class=\"line\">log4j.appender.R.datePattern=&apos;.&apos;yyyy-MM-dd&apos;.txt&apos;</span><br><span class=\"line\">log4j.appender.R.layout=org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.R.layout.ConversionPattern=%d&#123;yyyy-MM-dd HH:mm:ss&#125; %-5p %m%n</span><br></pre></td></tr></table></figure>\n","excerpt":"<p>   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今天一同事问我System.out.println()输出的内容为什么没有输出到日志文件中。他告诉我的是他使用的weblogic中间件。说起这个真的平时没太注意。因为我之前一直使用的是jboss，查看日志也是看的jboss日志文件，通过System.out.println输出的内容也显示在了日志文件中。带着好奇心去看了下自己系统下的日志文件果然没有。于是打开jboss的log4j.xml 与自己系统下的log4j.xml进行了一下对比发现并无不同。于是打开jboss代码看了下发现jboss org.jboss.logging.Log4jService  installSystemAdapters方法中对System.setOut 有设置。<br>   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表示对于System.setOut不懂到网上百度了下，官方说明是通过System.setOut方法允许程序员自行定义System.out输出流， 我们可以将我们改造好的PrintStream替换java原来的System.out对象。于是他这个问题就很好解决了。<br>","more":"<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  PrintStream printStream = <span class=\"keyword\">new</span> PrintStream(System.out) &#123;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">boolean</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(Boolean.valueOf(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">char</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(Character.valueOf(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">char</span>[] x)</span> </span>&#123;</span><br><span class=\"line\">    log(x == <span class=\"keyword\">null</span> ? <span class=\"keyword\">null</span> : <span class=\"keyword\">new</span> String(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">double</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(Double.valueOf(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">float</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(Float.valueOf(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(Integer.valueOf(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">long</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(x);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(Object x)</span> </span>&#123;</span><br><span class=\"line\">    log(x);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(String x)</span> </span>&#123;</span><br><span class=\"line\">    log(x);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  System.setOut(printStream);</span><br><span class=\"line\">  System.setErr(printStream);</span><br><span class=\"line\"></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">log</span><span class=\"params\">(Object info)</span> </span>&#123;</span><br><span class=\"line\">  LogFactoryImpl.getLog(getClass()).info(info);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n<p>在web的监听器里面初始下这个就可以了</p>\n<p>下面是log4j的配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log4j.rootLogger=INFO,Stdout,R</span><br><span class=\"line\">log4j.appender.Stdout=org.apache.log4j.ConsoleAppender</span><br><span class=\"line\">log4j.appender.Stdout.layout=org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.Stdout.layout.ConversionPattern=%d&#123;yyyy-MM-dd HH:mm:ss&#125; %-5p %m%n</span><br><span class=\"line\">log4j.appender.R=org.apache.log4j.DailyRollingFileAppender</span><br><span class=\"line\">log4j.appender.R.File=F:/stdout.log</span><br><span class=\"line\">log4j.appender.R.datePattern=&apos;.&apos;yyyy-MM-dd&apos;.txt&apos;</span><br><span class=\"line\">log4j.appender.R.layout=org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.R.layout.ConversionPattern=%d&#123;yyyy-MM-dd HH:mm:ss&#125; %-5p %m%n</span><br></pre></td></tr></table></figure>"},{"title":"博客搭建","date":"2016-05-10T11:05:33.000Z","comments":0,"_content":"***坚持写作、总结经验、分享心得***\n2016年5月10号基于github搭建我的第一个博客\n\n\n个人简历: [关于我](/about/index.html)\n","source":"_posts/博客搭建.md","raw":"---\ntitle: 博客搭建\ndate: 2016-05-10 19:05:33\ncomments: false \n---\n***坚持写作、总结经验、分享心得***\n2016年5月10号基于github搭建我的第一个博客\n\n\n个人简历: [关于我](/about/index.html)\n","slug":"博客搭建","published":1,"updated":"2016-05-14T07:57:45.524Z","_id":"cio5q2liv00077oybmjkvkh69","layout":"post","photos":[],"link":"","content":"<p><strong><em>坚持写作、总结经验、分享心得</em></strong><br>2016年5月10号基于github搭建我的第一个博客</p>\n<p>个人简历: <a href=\"/about/index.html\">关于我</a></p>\n","excerpt":"","more":"<p><strong><em>坚持写作、总结经验、分享心得</em></strong><br>2016年5月10号基于github搭建我的第一个博客</p>\n<p>个人简历: <a href=\"/about/index.html\">关于我</a></p>\n"},{"title":"Nginx+Tomcat+Memcached集群","date":"2015-01-14T08:18:41.000Z","comments":1,"toc":true,"_content":"\n\nNginx和Tomcat的安装和配置在这里就不说了，不明白的可以看文章[Nginx+Tomcat集群](/2014/12/10/Nginx+Tomcat集群/)。这篇文章是以前面[Nginx+Tomcat集群](/2014/12/10/Nginx+Tomcat集群/)的文章为基础。Nginx+Tomcat+Memcached集群其实很简单，就是将session管理交给了Memcached管理，这样的好处不言而喻，就是如果集群中的节点如果很多的话采用Tomcat节点间的session复制来保证session的共享。这样会给系统带来很大一部分开销。所以就讲session交给了Memcached管理。Memcached是个分布式缓存系统，采用c语言实现。今天我们以一个Memcached为例。对Memcached不在进集群了。\n安置Memcached之前需要安装他依赖的软件libevent-devel。\n<!--more-->\n\n## 软件安装\n\n### 安装libevent-devel\n```\nsehll yum install libevent-devel\n```\n\n### 安装memcached\n```\nsehll wget http://memcached.org/files/memcached-1.4.22.tar.gz\nsehll tar -zxvf memcached-1.4.22.tar.gz\nsehll cd memcached-1.4.22\nsehll ./configure && make && make test && make install\n```\n\n### 启动memcached\n```\nshell /usr/local/bin/memcached -d -m 256 -p 11211 -u root -l 192.168.1.233\n```\n启动memcached的参数不明白的地方可以查看网上的说明\n\n### 下载依赖Jar\n***下载memcached session管理的jar包,Tomcat的版本不一样依赖jar包也不一样我这里是以Tomcat6为例并采用javolution方式策略***\n\nmemcached-session-manager-1.8.2.jar\nspymemcached-2.7.3.jar\nmsm-xstream-serializer-1.8.2.jar\nmsm-javolution-serializer-1.8.2.jar\nmsm-flexjson-serializer-1.8.2.jar\nmemcached-session-manager-tc6-1.8.2.jar\njavolution-5.5.1.jar\n\n将以上包复制到%TOMCAT_HOME%\\lib\\下\n## 配置\n修改%TOMCAT_HOME%\\conf\\context.xml在Context节点下添加如下配置\n```xml\n<Manager className=\"de.javakaffee.web.msm.MemcachedBackupSessionManager\"\n\tmemcacheNodes=\"n1:192.168.1.233:11211\"\n\trequestUriIgnorePattern=\".*\\.(png|gif|jpg|css|js)$\"\n\tsessionBackupAsync=\"false\"\n\tsessionBackupTimeout=\"1800000\"\n\tcopyCollectionsForSerialization=\"false\"\n\ttranscoderFactoryClass=\"de.javakaffee.web.msm.serializer.javolution.JavolutionTranscoderFactory\"/>\n```\n要说明的就是memcachedNodes的配置 我上面写的是memcachedNodes=\"n1:192.168.1.233:11211\"\n192.168.1.233为memcached所在主机IP地址11211为端口然后如果有多个memcached的话用逗号隔开例如：\nmemcachedNodes=\"n1:192.168.1.233:11211,n2:192.168.1.234:11211\"\n\n***注意***\n每个节点都需要这么配置而且需要保证一样，让后将我们之前在server.xml中的Tomcat集群session复制配置注释掉。","source":"_posts/Nginx+Tomcat+Memcached集群.md","raw":"---\ntitle: Nginx+Tomcat+Memcached集群\ndate: 2015-01-14 16:18:41\ncomments: true\ncategories: Tomcat\ntoc: true \n---\n\n\nNginx和Tomcat的安装和配置在这里就不说了，不明白的可以看文章[Nginx+Tomcat集群](/2014/12/10/Nginx+Tomcat集群/)。这篇文章是以前面[Nginx+Tomcat集群](/2014/12/10/Nginx+Tomcat集群/)的文章为基础。Nginx+Tomcat+Memcached集群其实很简单，就是将session管理交给了Memcached管理，这样的好处不言而喻，就是如果集群中的节点如果很多的话采用Tomcat节点间的session复制来保证session的共享。这样会给系统带来很大一部分开销。所以就讲session交给了Memcached管理。Memcached是个分布式缓存系统，采用c语言实现。今天我们以一个Memcached为例。对Memcached不在进集群了。\n安置Memcached之前需要安装他依赖的软件libevent-devel。\n<!--more-->\n\n## 软件安装\n\n### 安装libevent-devel\n```\nsehll yum install libevent-devel\n```\n\n### 安装memcached\n```\nsehll wget http://memcached.org/files/memcached-1.4.22.tar.gz\nsehll tar -zxvf memcached-1.4.22.tar.gz\nsehll cd memcached-1.4.22\nsehll ./configure && make && make test && make install\n```\n\n### 启动memcached\n```\nshell /usr/local/bin/memcached -d -m 256 -p 11211 -u root -l 192.168.1.233\n```\n启动memcached的参数不明白的地方可以查看网上的说明\n\n### 下载依赖Jar\n***下载memcached session管理的jar包,Tomcat的版本不一样依赖jar包也不一样我这里是以Tomcat6为例并采用javolution方式策略***\n\nmemcached-session-manager-1.8.2.jar\nspymemcached-2.7.3.jar\nmsm-xstream-serializer-1.8.2.jar\nmsm-javolution-serializer-1.8.2.jar\nmsm-flexjson-serializer-1.8.2.jar\nmemcached-session-manager-tc6-1.8.2.jar\njavolution-5.5.1.jar\n\n将以上包复制到%TOMCAT_HOME%\\lib\\下\n## 配置\n修改%TOMCAT_HOME%\\conf\\context.xml在Context节点下添加如下配置\n```xml\n<Manager className=\"de.javakaffee.web.msm.MemcachedBackupSessionManager\"\n\tmemcacheNodes=\"n1:192.168.1.233:11211\"\n\trequestUriIgnorePattern=\".*\\.(png|gif|jpg|css|js)$\"\n\tsessionBackupAsync=\"false\"\n\tsessionBackupTimeout=\"1800000\"\n\tcopyCollectionsForSerialization=\"false\"\n\ttranscoderFactoryClass=\"de.javakaffee.web.msm.serializer.javolution.JavolutionTranscoderFactory\"/>\n```\n要说明的就是memcachedNodes的配置 我上面写的是memcachedNodes=\"n1:192.168.1.233:11211\"\n192.168.1.233为memcached所在主机IP地址11211为端口然后如果有多个memcached的话用逗号隔开例如：\nmemcachedNodes=\"n1:192.168.1.233:11211,n2:192.168.1.234:11211\"\n\n***注意***\n每个节点都需要这么配置而且需要保证一样，让后将我们之前在server.xml中的Tomcat集群session复制配置注释掉。","slug":"Nginx+Tomcat+Memcached集群","published":1,"updated":"2016-05-13T14:04:17.986Z","layout":"post","photos":[],"link":"","_id":"cio5uhgm80000o0yb6mmgogp0","content":"<p>Nginx和Tomcat的安装和配置在这里就不说了，不明白的可以看文章<a href=\"/2014/12/10/Nginx+Tomcat集群/\">Nginx+Tomcat集群</a>。这篇文章是以前面<a href=\"/2014/12/10/Nginx+Tomcat集群/\">Nginx+Tomcat集群</a>的文章为基础。Nginx+Tomcat+Memcached集群其实很简单，就是将session管理交给了Memcached管理，这样的好处不言而喻，就是如果集群中的节点如果很多的话采用Tomcat节点间的session复制来保证session的共享。这样会给系统带来很大一部分开销。所以就讲session交给了Memcached管理。Memcached是个分布式缓存系统，采用c语言实现。今天我们以一个Memcached为例。对Memcached不在进集群了。<br>安置Memcached之前需要安装他依赖的软件libevent-devel。<br><a id=\"more\"></a></p>\n<h2 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h2><h3 id=\"安装libevent-devel\"><a href=\"#安装libevent-devel\" class=\"headerlink\" title=\"安装libevent-devel\"></a>安装libevent-devel</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sehll yum install libevent-devel</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装memcached\"><a href=\"#安装memcached\" class=\"headerlink\" title=\"安装memcached\"></a>安装memcached</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sehll wget http://memcached.org/files/memcached-1.4.22.tar.gz</span><br><span class=\"line\">sehll tar -zxvf memcached-1.4.22.tar.gz</span><br><span class=\"line\">sehll cd memcached-1.4.22</span><br><span class=\"line\">sehll ./configure &amp;&amp; make &amp;&amp; make test &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动memcached\"><a href=\"#启动memcached\" class=\"headerlink\" title=\"启动memcached\"></a>启动memcached</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell /usr/local/bin/memcached -d -m 256 -p 11211 -u root -l 192.168.1.233</span><br></pre></td></tr></table></figure>\n<p>启动memcached的参数不明白的地方可以查看网上的说明</p>\n<h3 id=\"下载依赖Jar\"><a href=\"#下载依赖Jar\" class=\"headerlink\" title=\"下载依赖Jar\"></a>下载依赖Jar</h3><p><strong><em>下载memcached session管理的jar包,Tomcat的版本不一样依赖jar包也不一样我这里是以Tomcat6为例并采用javolution方式策略</em></strong></p>\n<p>memcached-session-manager-1.8.2.jar<br>spymemcached-2.7.3.jar<br>msm-xstream-serializer-1.8.2.jar<br>msm-javolution-serializer-1.8.2.jar<br>msm-flexjson-serializer-1.8.2.jar<br>memcached-session-manager-tc6-1.8.2.jar<br>javolution-5.5.1.jar</p>\n<p>将以上包复制到%TOMCAT_HOME%\\lib\\下</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>修改%TOMCAT_HOME%\\conf\\context.xml在Context节点下添加如下配置<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Manager</span> <span class=\"attr\">className</span>=<span class=\"string\">\"de.javakaffee.web.msm.MemcachedBackupSessionManager\"</span></span><br><span class=\"line\">\t<span class=\"attr\">memcacheNodes</span>=<span class=\"string\">\"n1:192.168.1.233:11211\"</span></span><br><span class=\"line\">\t<span class=\"attr\">requestUriIgnorePattern</span>=<span class=\"string\">\".*\\.(png|gif|jpg|css|js)$\"</span></span><br><span class=\"line\">\t<span class=\"attr\">sessionBackupAsync</span>=<span class=\"string\">\"false\"</span></span><br><span class=\"line\">\t<span class=\"attr\">sessionBackupTimeout</span>=<span class=\"string\">\"1800000\"</span></span><br><span class=\"line\">\t<span class=\"attr\">copyCollectionsForSerialization</span>=<span class=\"string\">\"false\"</span></span><br><span class=\"line\">\t<span class=\"attr\">transcoderFactoryClass</span>=<span class=\"string\">\"de.javakaffee.web.msm.serializer.javolution.JavolutionTranscoderFactory\"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>要说明的就是memcachedNodes的配置 我上面写的是memcachedNodes=”n1:192.168.1.233:11211”<br>192.168.1.233为memcached所在主机IP地址11211为端口然后如果有多个memcached的话用逗号隔开例如：<br>memcachedNodes=”n1:192.168.1.233:11211,n2:192.168.1.234:11211”</p>\n<p><strong><em>注意</em></strong><br>每个节点都需要这么配置而且需要保证一样，让后将我们之前在server.xml中的Tomcat集群session复制配置注释掉。</p>\n","excerpt":"<p>Nginx和Tomcat的安装和配置在这里就不说了，不明白的可以看文章<a href=\"/2014/12/10/Nginx+Tomcat集群/\">Nginx+Tomcat集群</a>。这篇文章是以前面<a href=\"/2014/12/10/Nginx+Tomcat集群/\">Nginx+Tomcat集群</a>的文章为基础。Nginx+Tomcat+Memcached集群其实很简单，就是将session管理交给了Memcached管理，这样的好处不言而喻，就是如果集群中的节点如果很多的话采用Tomcat节点间的session复制来保证session的共享。这样会给系统带来很大一部分开销。所以就讲session交给了Memcached管理。Memcached是个分布式缓存系统，采用c语言实现。今天我们以一个Memcached为例。对Memcached不在进集群了。<br>安置Memcached之前需要安装他依赖的软件libevent-devel。<br>","more":"</p>\n<h2 id=\"软件安装\"><a href=\"#软件安装\" class=\"headerlink\" title=\"软件安装\"></a>软件安装</h2><h3 id=\"安装libevent-devel\"><a href=\"#安装libevent-devel\" class=\"headerlink\" title=\"安装libevent-devel\"></a>安装libevent-devel</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sehll yum install libevent-devel</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装memcached\"><a href=\"#安装memcached\" class=\"headerlink\" title=\"安装memcached\"></a>安装memcached</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sehll wget http://memcached.org/files/memcached-1.4.22.tar.gz</span><br><span class=\"line\">sehll tar -zxvf memcached-1.4.22.tar.gz</span><br><span class=\"line\">sehll cd memcached-1.4.22</span><br><span class=\"line\">sehll ./configure &amp;&amp; make &amp;&amp; make test &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动memcached\"><a href=\"#启动memcached\" class=\"headerlink\" title=\"启动memcached\"></a>启动memcached</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell /usr/local/bin/memcached -d -m 256 -p 11211 -u root -l 192.168.1.233</span><br></pre></td></tr></table></figure>\n<p>启动memcached的参数不明白的地方可以查看网上的说明</p>\n<h3 id=\"下载依赖Jar\"><a href=\"#下载依赖Jar\" class=\"headerlink\" title=\"下载依赖Jar\"></a>下载依赖Jar</h3><p><strong><em>下载memcached session管理的jar包,Tomcat的版本不一样依赖jar包也不一样我这里是以Tomcat6为例并采用javolution方式策略</em></strong></p>\n<p>memcached-session-manager-1.8.2.jar<br>spymemcached-2.7.3.jar<br>msm-xstream-serializer-1.8.2.jar<br>msm-javolution-serializer-1.8.2.jar<br>msm-flexjson-serializer-1.8.2.jar<br>memcached-session-manager-tc6-1.8.2.jar<br>javolution-5.5.1.jar</p>\n<p>将以上包复制到%TOMCAT_HOME%\\lib\\下</p>\n<h2 id=\"配置\"><a href=\"#配置\" class=\"headerlink\" title=\"配置\"></a>配置</h2><p>修改%TOMCAT_HOME%\\conf\\context.xml在Context节点下添加如下配置<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Manager</span> <span class=\"attr\">className</span>=<span class=\"string\">\"de.javakaffee.web.msm.MemcachedBackupSessionManager\"</span></span><br><span class=\"line\">\t<span class=\"attr\">memcacheNodes</span>=<span class=\"string\">\"n1:192.168.1.233:11211\"</span></span><br><span class=\"line\">\t<span class=\"attr\">requestUriIgnorePattern</span>=<span class=\"string\">\".*\\.(png|gif|jpg|css|js)$\"</span></span><br><span class=\"line\">\t<span class=\"attr\">sessionBackupAsync</span>=<span class=\"string\">\"false\"</span></span><br><span class=\"line\">\t<span class=\"attr\">sessionBackupTimeout</span>=<span class=\"string\">\"1800000\"</span></span><br><span class=\"line\">\t<span class=\"attr\">copyCollectionsForSerialization</span>=<span class=\"string\">\"false\"</span></span><br><span class=\"line\">\t<span class=\"attr\">transcoderFactoryClass</span>=<span class=\"string\">\"de.javakaffee.web.msm.serializer.javolution.JavolutionTranscoderFactory\"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>要说明的就是memcachedNodes的配置 我上面写的是memcachedNodes=”n1:192.168.1.233:11211”<br>192.168.1.233为memcached所在主机IP地址11211为端口然后如果有多个memcached的话用逗号隔开例如：<br>memcachedNodes=”n1:192.168.1.233:11211,n2:192.168.1.234:11211”</p>\n<p><strong><em>注意</em></strong><br>每个节点都需要这么配置而且需要保证一样，让后将我们之前在server.xml中的Tomcat集群session复制配置注释掉。</p>"},{"title":"Oracle常用脚本","date":"2014-04-30T13:28:01.000Z","comments":1,"toc":true,"_content":"\n### 建表空间\n```sql\ncreate temporary tablespace bjjtxx_space_temp \ntempfile 'D:/oracle/product/10.2.0/oradata/orcl/bjjtxx_temp.dbf' \nsize 32m \nautoextend on \nnext 32m maxsize 2048m\nextent management local; \n\ncreate tablespace bjjtxx_space\nlogging\ndatafile 'D:/oracle/product/10.2.0/oradata/orcl/bjjtxx.dbf' \nsize 32m \nautoextend on \nnext 32m maxsize 2048m\nextent management local;\n```\n<!--more-->\n\n### 建用户\n```sql\ncreate user bjjtxx_develop identified by bjjtxx\ndefault tablespace bjjtxx_space\ntemporary tablespace bjjtxx_space_temp;\n```\n### 用户授权\n```sql\ngrant dba,connect,resource,CTXAPP,create view to bjjtxx_develop;\n```\n\n### 锁表查询\n***查看锁住的表***\n```sql\nSELECT b.owner,b.object_name,a.session_id,a.locked_mode  \n    FROM v$locked_object a ,dba_objects b  \n    WHERE b.object_id = a.object_id; \n```\n\n***查看被锁住的会话 ***\n```sql\nSELECT b.username,b.sid,b.serial#,logon_time  \n    FROM v$locked_object a,v$session b  \n    WHERE a.session_id = b.sid order by b.logon_time; \n```\n\n***如果要断开某个会话，执行  ***\n```sql\nalter system kill session ‘sid,serial#’\n```\n\n### 设置表空间大小\n\n***查找出oralce表空间的文件名、路径 ***\n```sql\nselect tablespace_name, file_id, file_name, round(bytes/(1024*1024),0) total_space from dba_data_files; \n```\n\n***修改表空间大小  ***\n```sql\nALTER DATABASE DATAFILE 'E:\\LARGE.DBF' RESIZE 3000M;\n```\n\n\n***设置表空间最大大小  ***\n```sql\nALTER DATABASE DATAFILE ''/oracle/oradata/db/GAME.dbf \nAUTOEXTEND ON NEXT 100M \nMAXSIZE 10000M;\n```\n","source":"_posts/Oracle常用脚本.md","raw":"---\ntitle: Oracle常用脚本\ndate: 2014-04-30 21:28:01\ncomments: true\ncategories: Oracle\ntoc: true \n---\n\n### 建表空间\n```sql\ncreate temporary tablespace bjjtxx_space_temp \ntempfile 'D:/oracle/product/10.2.0/oradata/orcl/bjjtxx_temp.dbf' \nsize 32m \nautoextend on \nnext 32m maxsize 2048m\nextent management local; \n\ncreate tablespace bjjtxx_space\nlogging\ndatafile 'D:/oracle/product/10.2.0/oradata/orcl/bjjtxx.dbf' \nsize 32m \nautoextend on \nnext 32m maxsize 2048m\nextent management local;\n```\n<!--more-->\n\n### 建用户\n```sql\ncreate user bjjtxx_develop identified by bjjtxx\ndefault tablespace bjjtxx_space\ntemporary tablespace bjjtxx_space_temp;\n```\n### 用户授权\n```sql\ngrant dba,connect,resource,CTXAPP,create view to bjjtxx_develop;\n```\n\n### 锁表查询\n***查看锁住的表***\n```sql\nSELECT b.owner,b.object_name,a.session_id,a.locked_mode  \n    FROM v$locked_object a ,dba_objects b  \n    WHERE b.object_id = a.object_id; \n```\n\n***查看被锁住的会话 ***\n```sql\nSELECT b.username,b.sid,b.serial#,logon_time  \n    FROM v$locked_object a,v$session b  \n    WHERE a.session_id = b.sid order by b.logon_time; \n```\n\n***如果要断开某个会话，执行  ***\n```sql\nalter system kill session ‘sid,serial#’\n```\n\n### 设置表空间大小\n\n***查找出oralce表空间的文件名、路径 ***\n```sql\nselect tablespace_name, file_id, file_name, round(bytes/(1024*1024),0) total_space from dba_data_files; \n```\n\n***修改表空间大小  ***\n```sql\nALTER DATABASE DATAFILE 'E:\\LARGE.DBF' RESIZE 3000M;\n```\n\n\n***设置表空间最大大小  ***\n```sql\nALTER DATABASE DATAFILE ''/oracle/oradata/db/GAME.dbf \nAUTOEXTEND ON NEXT 100M \nMAXSIZE 10000M;\n```\n","slug":"Oracle常用脚本","published":1,"updated":"2016-05-13T14:52:51.913Z","layout":"post","photos":[],"link":"","_id":"cio5uhgmn0001o0yb2cdt3uen","content":"<h3 id=\"建表空间\"><a href=\"#建表空间\" class=\"headerlink\" title=\"建表空间\"></a>建表空间</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">temporary</span> <span class=\"keyword\">tablespace</span> bjjtxx_space_temp </span><br><span class=\"line\">tempfile <span class=\"string\">'D:/oracle/product/10.2.0/oradata/orcl/bjjtxx_temp.dbf'</span> </span><br><span class=\"line\"><span class=\"keyword\">size</span> <span class=\"number\">32</span>m </span><br><span class=\"line\"><span class=\"keyword\">autoextend</span> <span class=\"keyword\">on</span> </span><br><span class=\"line\"><span class=\"keyword\">next</span> <span class=\"number\">32</span>m <span class=\"keyword\">maxsize</span> <span class=\"number\">2048</span>m</span><br><span class=\"line\"><span class=\"keyword\">extent</span> <span class=\"keyword\">management</span> <span class=\"keyword\">local</span>; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">tablespace</span> bjjtxx_space</span><br><span class=\"line\"><span class=\"keyword\">logging</span></span><br><span class=\"line\"><span class=\"keyword\">datafile</span> <span class=\"string\">'D:/oracle/product/10.2.0/oradata/orcl/bjjtxx.dbf'</span> </span><br><span class=\"line\"><span class=\"keyword\">size</span> <span class=\"number\">32</span>m </span><br><span class=\"line\"><span class=\"keyword\">autoextend</span> <span class=\"keyword\">on</span> </span><br><span class=\"line\"><span class=\"keyword\">next</span> <span class=\"number\">32</span>m <span class=\"keyword\">maxsize</span> <span class=\"number\">2048</span>m</span><br><span class=\"line\"><span class=\"keyword\">extent</span> <span class=\"keyword\">management</span> <span class=\"keyword\">local</span>;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"建用户\"><a href=\"#建用户\" class=\"headerlink\" title=\"建用户\"></a>建用户</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">user</span> bjjtxx_develop <span class=\"keyword\">identified</span> <span class=\"keyword\">by</span> bjjtxx</span><br><span class=\"line\"><span class=\"keyword\">default</span> <span class=\"keyword\">tablespace</span> bjjtxx_space</span><br><span class=\"line\"><span class=\"keyword\">temporary</span> <span class=\"keyword\">tablespace</span> bjjtxx_space_temp;</span><br></pre></td></tr></table></figure>\n<h3 id=\"用户授权\"><a href=\"#用户授权\" class=\"headerlink\" title=\"用户授权\"></a>用户授权</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">grant</span> dba,<span class=\"keyword\">connect</span>,<span class=\"keyword\">resource</span>,CTXAPP,<span class=\"keyword\">create</span> <span class=\"keyword\">view</span> <span class=\"keyword\">to</span> bjjtxx_develop;</span><br></pre></td></tr></table></figure>\n<h3 id=\"锁表查询\"><a href=\"#锁表查询\" class=\"headerlink\" title=\"锁表查询\"></a>锁表查询</h3><p><strong><em>查看锁住的表</em></strong><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> b.owner,b.object_name,a.session_id,a.locked_mode  </span><br><span class=\"line\">    <span class=\"keyword\">FROM</span> v$locked_object a ,dba_objects b  </span><br><span class=\"line\">    <span class=\"keyword\">WHERE</span> b.object_id = a.object_id;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>查看被锁住的会话 </em></strong><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> b.username,b.sid,b.serial#,logon_time  </span><br><span class=\"line\">    <span class=\"keyword\">FROM</span> v$locked_object a,v$<span class=\"keyword\">session</span> b  </span><br><span class=\"line\">    <span class=\"keyword\">WHERE</span> a.session_id = b.sid <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> b.logon_time;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>如果要断开某个会话，执行  </em></strong><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">system</span> <span class=\"keyword\">kill</span> <span class=\"keyword\">session</span> ‘<span class=\"keyword\">sid</span>,<span class=\"built_in\">serial</span>#’</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"设置表空间大小\"><a href=\"#设置表空间大小\" class=\"headerlink\" title=\"设置表空间大小\"></a>设置表空间大小</h3><p><strong><em>查找出oralce表空间的文件名、路径 </em></strong><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> tablespace_name, file_id, file_name, <span class=\"keyword\">round</span>(<span class=\"keyword\">bytes</span>/(<span class=\"number\">1024</span>*<span class=\"number\">1024</span>),<span class=\"number\">0</span>) total_space <span class=\"keyword\">from</span> dba_data_files;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>修改表空间大小  </em></strong><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">DATABASE</span> <span class=\"keyword\">DATAFILE</span> <span class=\"string\">'E:\\LARGE.DBF'</span> <span class=\"keyword\">RESIZE</span> <span class=\"number\">3000</span>M;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>设置表空间最大大小  </em></strong><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">DATABASE</span> <span class=\"keyword\">DATAFILE</span> <span class=\"string\">''</span>/<span class=\"keyword\">oracle</span>/<span class=\"keyword\">oradata</span>/db/GAME.dbf </span><br><span class=\"line\"><span class=\"keyword\">AUTOEXTEND</span> <span class=\"keyword\">ON</span> <span class=\"keyword\">NEXT</span> <span class=\"number\">100</span>M </span><br><span class=\"line\"><span class=\"keyword\">MAXSIZE</span> <span class=\"number\">10000</span>M;</span><br></pre></td></tr></table></figure></p>\n","excerpt":"<h3 id=\"建表空间\"><a href=\"#建表空间\" class=\"headerlink\" title=\"建表空间\"></a>建表空间</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">temporary</span> <span class=\"keyword\">tablespace</span> bjjtxx_space_temp </span><br><span class=\"line\">tempfile <span class=\"string\">'D:/oracle/product/10.2.0/oradata/orcl/bjjtxx_temp.dbf'</span> </span><br><span class=\"line\"><span class=\"keyword\">size</span> <span class=\"number\">32</span>m </span><br><span class=\"line\"><span class=\"keyword\">autoextend</span> <span class=\"keyword\">on</span> </span><br><span class=\"line\"><span class=\"keyword\">next</span> <span class=\"number\">32</span>m <span class=\"keyword\">maxsize</span> <span class=\"number\">2048</span>m</span><br><span class=\"line\"><span class=\"keyword\">extent</span> <span class=\"keyword\">management</span> <span class=\"keyword\">local</span>; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">tablespace</span> bjjtxx_space</span><br><span class=\"line\"><span class=\"keyword\">logging</span></span><br><span class=\"line\"><span class=\"keyword\">datafile</span> <span class=\"string\">'D:/oracle/product/10.2.0/oradata/orcl/bjjtxx.dbf'</span> </span><br><span class=\"line\"><span class=\"keyword\">size</span> <span class=\"number\">32</span>m </span><br><span class=\"line\"><span class=\"keyword\">autoextend</span> <span class=\"keyword\">on</span> </span><br><span class=\"line\"><span class=\"keyword\">next</span> <span class=\"number\">32</span>m <span class=\"keyword\">maxsize</span> <span class=\"number\">2048</span>m</span><br><span class=\"line\"><span class=\"keyword\">extent</span> <span class=\"keyword\">management</span> <span class=\"keyword\">local</span>;</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"建用户\"><a href=\"#建用户\" class=\"headerlink\" title=\"建用户\"></a>建用户</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">user</span> bjjtxx_develop <span class=\"keyword\">identified</span> <span class=\"keyword\">by</span> bjjtxx</span><br><span class=\"line\"><span class=\"keyword\">default</span> <span class=\"keyword\">tablespace</span> bjjtxx_space</span><br><span class=\"line\"><span class=\"keyword\">temporary</span> <span class=\"keyword\">tablespace</span> bjjtxx_space_temp;</span><br></pre></td></tr></table></figure>\n<h3 id=\"用户授权\"><a href=\"#用户授权\" class=\"headerlink\" title=\"用户授权\"></a>用户授权</h3><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">grant</span> dba,<span class=\"keyword\">connect</span>,<span class=\"keyword\">resource</span>,CTXAPP,<span class=\"keyword\">create</span> <span class=\"keyword\">view</span> <span class=\"keyword\">to</span> bjjtxx_develop;</span><br></pre></td></tr></table></figure>\n<h3 id=\"锁表查询\"><a href=\"#锁表查询\" class=\"headerlink\" title=\"锁表查询\"></a>锁表查询</h3><p><strong><em>查看锁住的表</em></strong><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> b.owner,b.object_name,a.session_id,a.locked_mode  </span><br><span class=\"line\">    <span class=\"keyword\">FROM</span> v$locked_object a ,dba_objects b  </span><br><span class=\"line\">    <span class=\"keyword\">WHERE</span> b.object_id = a.object_id;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>查看被锁住的会话 </em></strong><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> b.username,b.sid,b.serial#,logon_time  </span><br><span class=\"line\">    <span class=\"keyword\">FROM</span> v$locked_object a,v$<span class=\"keyword\">session</span> b  </span><br><span class=\"line\">    <span class=\"keyword\">WHERE</span> a.session_id = b.sid <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> b.logon_time;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>如果要断开某个会话，执行  </em></strong><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">system</span> <span class=\"keyword\">kill</span> <span class=\"keyword\">session</span> ‘<span class=\"keyword\">sid</span>,<span class=\"built_in\">serial</span>#’</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"设置表空间大小\"><a href=\"#设置表空间大小\" class=\"headerlink\" title=\"设置表空间大小\"></a>设置表空间大小</h3><p><strong><em>查找出oralce表空间的文件名、路径 </em></strong><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> tablespace_name, file_id, file_name, <span class=\"keyword\">round</span>(<span class=\"keyword\">bytes</span>/(<span class=\"number\">1024</span>*<span class=\"number\">1024</span>),<span class=\"number\">0</span>) total_space <span class=\"keyword\">from</span> dba_data_files;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>修改表空间大小  </em></strong><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">DATABASE</span> <span class=\"keyword\">DATAFILE</span> <span class=\"string\">'E:\\LARGE.DBF'</span> <span class=\"keyword\">RESIZE</span> <span class=\"number\">3000</span>M;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>设置表空间最大大小  </em></strong><br><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">DATABASE</span> <span class=\"keyword\">DATAFILE</span> <span class=\"string\">''</span>/<span class=\"keyword\">oracle</span>/<span class=\"keyword\">oradata</span>/db/GAME.dbf </span><br><span class=\"line\"><span class=\"keyword\">AUTOEXTEND</span> <span class=\"keyword\">ON</span> <span class=\"keyword\">NEXT</span> <span class=\"number\">100</span>M </span><br><span class=\"line\"><span class=\"keyword\">MAXSIZE</span> <span class=\"number\">10000</span>M;</span><br></pre></td></tr></table></figure></p>"},{"title":"Nginx+Tomcat集群","date":"2014-12-10T06:35:40.000Z","comments":1,"toc":true,"_content":"## 环境\n|系统\t  |  JDK    |Tomcat    |Nginx                                      |\n|:-------:|:-------:|:--------:|:-----------------------------------------:|\n|CentOS6 192.168.1.231 CentOS6 192.168.1.232  |JDK1.6   |Tomcat6   |nginx-release-centos-6-0.el6.ngx.noarch.rpm|\n## 安装JDK\n第一步：检查是否已经安装了jdk 存在就卸载 rpm -e 包名\n<!--more-->\n```\nshell rpm -qa | grep java*\n```\n第二步：查看yum库是否有java安装包\n```\nshell  yum -y list java*\n```\n第三步：选择一个进行安装\n```\nshell yum -y install java-1.6.0-openjdk*\n```\n第四步：确定是否安装成功\n```\nshell java -version\njava version \"1.6.0_20\"\nOpenJDK Runtime Environment (IcedTea6 1.9.10) (rhel-1.23.1.9.10.el5_7-i386)\nOpenJDK Client VM (build 19.0-b09, mixed mode)\n显示如上信息表示安装成功\n```\n\n## 安装Nginx\n***通过yum安装nginx 针对 CentOS系统 其他版本可能会存在差异***\n\n### 下载安装包\n```\nshell rpm -ivh http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm\n```\n\n### 查看nginx信息\n```\nshell yum info nginx\n\nLoaded plugins: fastestmirror, refresh-packagekit, security\nLoading mirror speeds from cached hostfile\n * base: mirrors.yun-idc.com\n * extras: mirrors.yun-idc.com\n * updates: mirrors.yun-idc.com\nnginx                                                                    | 2.9 kB     00:00    \nnginx/primary_db                                                         |  33 kB     00:00    \nAvailable Packages\nName        : nginx\nArch        : i386\nVersion     : 1.6.2\nRelease     : 1.el6.ngx\nSize        : 343 k\nRepo        : nginx\nSummary     : High performance web server\nURL         : http://nginx.org/\nLicense     : 2-clause BSD-like license\nDescription : nginx [engine x] is an HTTP and reverse proxy server, as well as\n            : a mail proxy server.\n```\n\n### 安装\n```\nshell yum install nginx\n```\n### 启动\n```\nshell service nginx start\n```\n### 访问\n\nhttp://ip\n\n查找nginx安装目录\n```\nshell ps -ef |grep nginx\nroot      2244     1  0 22:45 ?        00:00:00 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx.conf\nnginx     2245  2244  0 22:45 ?        00:00:00 nginx: worker process                  \nroot      2268  1922  0 22:50 pts/1    00:00:00 grep nginx\n```\n***如果不能连接到nginx，原因很多，但是可以先检查 1,nginx服务是否真的起来了；2,linux服务器防火墙是否打开***\n\n## 安装Tomcat\n```\nshell yum install tomcat6 tomcat6-webapps tomcat6-admin-webapps\n```\n\n### 启动\n\n```\nshell service tomcat6 start\n```\n\n### 启动\n\n```\nshell service tomcat6 stop\n```\n\n### 重启\n\n```\nshell service tomcat6 restart\n```\n\n按照以上方法安装tomcat6默认目录在/usr/share/tomcat6/下\n配置文件默认目录在/etc/tomcat6/下\n\n## 集群配置\n\n### 配置nginx.conf\n***在http{}中添加***\n```\nupstream cluster{\n server 192.168.1.231:8080 weight=2;\n server 192.168.1.232:8080 weight=1;\n}\n```\ncluster这个名称可以随便起\nweight参数表示权值，权值越高被分配到的几率越大\nserver 192.168.1.231:8080; 就是一个tomcat节点\n***在server{}中添加如下配置 表示对于访问.jsp的页面使用代理服务器跳转到tomcat节点中***\n```\nlocation ~ \\.jsp$ {\n   proxy_pass   http://cluster;\n}\n```\n\n如果想对根进行设置只需要对\n\n```\nlocation / {\n root   /usr/share/nginx/html;\n index  index.html index.html;\n}\n修改为\nlocation / {\n proxy_set_header Host $host;\n proxy_pass  http://cluster;\n}\n即可\n```\n\n复杂点的设置如下\n\n```\nlocation / {\n proxy_pass  http://cluster;\n proxy_redirect          off;\n proxy_set_header        Host $host;\n proxy_set_header        X-Real-IP $remote_addr;\n proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;\n client_max_body_size    10m;\n client_body_buffer_size 128k;\n proxy_connect_timeout   90;\n proxy_send_timeout      90;\n proxy_read_timeout      90;\n proxy_buffer_size       4k;\n proxy_buffers           4 32k;\n proxy_busy_buffers_size 64k;\n proxy_temp_file_write_size 64k;\n}\n```\n\n### nginx.conf文件说明\n```\n#nginx用户\nuser  nginx;\n#nginx进程数字越大对于处理并发能力越强如果设置2就相当于开启了两个nginx\nworker_processes  1;\n#错误文件日志路径\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n#对应每个processes允许最大的连接数\nevents {\n    worker_connections  1024;\n}\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n    sendfile        on;\n    #tcp_nopush     on;\n    keepalive_timeout  65;\n    #gzip  on;\n\t#负载均衡控制 server 对应集群的一个个节点weight表示权重值数字越大出现的次数越多\n\tupstream cluster{\n\t  server 192.168.1.231:8080 weight=1;\n\t  server 192.168.1.240:8080 weight=2;\n\t}\n\t#nginx服务器配置\n    server {\n\t\t#监听端口\n\t\tlisten       80;\n\t\t#服务器名称\n\t    server_name  localhost;\n\n\t\t#charset koi8-r;\n\t\t#access_log  /var/log/nginx/log/host.access.log  main;\n\t    #对于请求跟路径时候的处理\n\t\tlocation / {\n\t\t   root   /usr/share/nginx/html;\n\t\t   index  index.html index.htm;\n\t\t   proxy_set_header Host $host;\n\t\t   proxy_pass  http://cluster;\n\t\t}\n\n\t    #error_page  404              /404.html;\n\n\t    # redirect server error pages to the static page /50x.html\n\n\t    error_page   500 502 503 504  /50x.html;\n\t    location = /50x.html {\n\t\t\troot   /usr/share/nginx/html;\n\t\t\t#proxy_pass   http://cluster;\n\t\t}\n\t    #设置对于请求jsp时候的处理\n\t    location ~ \\.jsp$ {\n\t\t\tproxy_pass   http://cluster;\n\t\t}\n\t    # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n\t    #\n\t    #location ~ \\.php$ {\n\t    #    proxy_pass   http://127.0.0.1;\n\t    #}\n\n\t    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n\t    #\n\t    #location ~ \\.php$ {\n\t    #    root           html;\n\t    #    fastcgi_pass   127.0.0.1:9000;\n\t    #    fastcgi_index  index.php;\n\t    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n\t    #    include        fastcgi_params;\n\t    #}\n\n\t    # deny access to .htaccess files, if Apache's document root\n\t    # concurs with nginx's one\n\t    #\n\t    #location ~ /\\.ht {\n\t    #    deny  all;\n\t    #}\n\t}\n}\n```\n\n### Tomcat配置\n打开tomcat的文档查看集群说明将集群配置如下 复制到tomcat\\conf\\server.xml文件 Engine节点下添加如下配置[具体说明查看官方文档](https://tomcat.apache.org/tomcat-6.0-doc/cluster-howto.html)\n```xml\n <Cluster className=\"org.apache.catalina.ha.tcp.SimpleTcpCluster\"\n\t\t\t channelSendOptions=\"8\">\n\n  <Manager className=\"org.apache.catalina.ha.session.DeltaManager\"\n\t\t   expireSessionsOnShutdown=\"false\"\n\t\t   notifyListenersOnReplication=\"true\"/>\n\n  <Channel className=\"org.apache.catalina.tribes.group.GroupChannel\">\n\t<Membership className=\"org.apache.catalina.tribes.membership.McastService\"\n\t\t\t\taddress=\"228.0.0.4\"\n\t\t\t\tport=\"45564\"\n\t\t\t\tfrequency=\"500\"\n\t\t\t\tdropTime=\"3000\"/>\n\t<Receiver className=\"org.apache.catalina.tribes.transport.nio.NioReceiver\"\n\t\t\t  address=\"auto\"\n\t\t\t  port=\"4000\"\n\t\t\t  autoBind=\"100\"\n\t\t\t  selectorTimeout=\"5000\"\n\t\t\t  maxThreads=\"6\"/>\n\n\t<Sender className=\"org.apache.catalina.tribes.transport.ReplicationTransmitter\">\n\t  <Transport className=\"org.apache.catalina.tribes.transport.nio.PooledParallelSender\"/>\n\t</Sender>\n\t<Interceptor className=\"org.apache.catalina.tribes.group.interceptors.TcpFailureDetector\"/>\n\t<Interceptor className=\"org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor\"/>\n  </Channel>\n\n  <Valve className=\"org.apache.catalina.ha.tcp.ReplicationValve\"\n\t\t filter=\"\"/>\n  <Valve className=\"org.apache.catalina.ha.session.JvmRouteBinderValve\"/>\n\n  <Deployer className=\"org.apache.catalina.ha.deploy.FarmWarDeployer\"\n\t\t\ttempDir=\"/tmp/war-temp/\"\n\t\t\tdeployDir=\"/tmp/war-deploy/\"\n\t\t\twatchDir=\"/tmp/war-listen/\"\n\t\t\twatchEnabled=\"false\"/>\n\n  <ClusterListener className=\"org.apache.catalina.ha.session.JvmRouteSessionIDBinderListener\"/>\n  <ClusterListener className=\"org.apache.catalina.ha.session.ClusterSessionListener\"/>\n</Cluster>   \n```\n\n```xml\n将\n<Engine name=\"Catalina\" defaultHost=\"localhost\"> \n添加jvmRoute属性\n<Engine name=\"Catalina\" defaultHost=\"localhost\" jvmRoute=\"node01\" > \n注意其他节点JvmRoute要分别不一样\n```\n在将应用的web.xml 文件末尾添加  distributable元素 如下表示这个应用下的session是可以共享的\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app>\n   <distributable/>\n</web-app>\n```\n然后启动服务器发现控制台打印\n![控制台打印](003vMReezy6OUXDo7kt61&690.jpg)\n```\n信息: Manager [localhost#/demo]: skipping state transfer. No members active in cluster group.\n一月 04, 2015 7:55:30 下午 org.apache.catalina.tribes.transport.ReceiverBase bind\n信息: Receiver Server Socket bound to:/127.0.0.1:4000\n一月 04, 2015 7:56:34 下午 org.apache.catalina.ha.session.DeltaManager getAllClusterSessions\n警告: Manager [localhost#/demo]: Drop message SESSION-GET-ALL inside GET_ALL_SESSIONS sync phase start date 15-1-4 下午7:55 message date 70-1-1 上午8:00\n```\n\n表示没有发现其他的集群中的其他节点。接受Socket bind的IP是127.0.0.1所以我们需要将他改为局域网的IP\n将节点Receiver 属性address=\"auto\"改为服务器局域网IP如下；其他节点也要做相应的改动\n```xml\n<Receiver className=\"org.apache.catalina.tribes.transport.nio.NioReceiver\"\n\t\t  address=\"192.168.1.231\"\n\t\t  port=\"4000\"\n\t\t  autoBind=\"100\"\n\t\t  selectorTimeout=\"5000\"\n\t\t  maxThreads=\"6\"/>\n```\n再次启动服务器发现可以找到了其他的节点了\n\n然后启动nginx 访问nginx http://192.168.1.228/demo/分别打印\n```\nHello World DF53CB7748D8BC67E0AB8A9BBA13048F.node2\nHello World DF53CB7748D8BC67E0AB8A9BBA13048F.node1\n```\n\n可以看出在node2节点设置的 Hello World在node1、node2上分别获取到了表示配置tomcat的session共享已经成功，如果仅是sessionId相同并不能表示session共享成功，因为通过一个相同的IP和端口访问的服务器都会把cookie中的sessionid发送给服务器。\n\n***注意：***\n不要单独去访问某一台服务器这样是不能验证session是否配置成功。因为访问单独的服务器在浏览器输入的ip和端口是不一样的，浏览器是不会把访问其他服务器的cookie自动带上发送给服务器。所以通过单独访问每次打印的sessionId肯定是不一样的。","source":"_posts/Nginx+Tomcat集群.md","raw":"---\ntitle: Nginx+Tomcat集群\ndate: 2014-12-10 14:35:40\ncomments: true\ncategories: Tomcat\ntoc: true \n---\n## 环境\n|系统\t  |  JDK    |Tomcat    |Nginx                                      |\n|:-------:|:-------:|:--------:|:-----------------------------------------:|\n|CentOS6 192.168.1.231 CentOS6 192.168.1.232  |JDK1.6   |Tomcat6   |nginx-release-centos-6-0.el6.ngx.noarch.rpm|\n## 安装JDK\n第一步：检查是否已经安装了jdk 存在就卸载 rpm -e 包名\n<!--more-->\n```\nshell rpm -qa | grep java*\n```\n第二步：查看yum库是否有java安装包\n```\nshell  yum -y list java*\n```\n第三步：选择一个进行安装\n```\nshell yum -y install java-1.6.0-openjdk*\n```\n第四步：确定是否安装成功\n```\nshell java -version\njava version \"1.6.0_20\"\nOpenJDK Runtime Environment (IcedTea6 1.9.10) (rhel-1.23.1.9.10.el5_7-i386)\nOpenJDK Client VM (build 19.0-b09, mixed mode)\n显示如上信息表示安装成功\n```\n\n## 安装Nginx\n***通过yum安装nginx 针对 CentOS系统 其他版本可能会存在差异***\n\n### 下载安装包\n```\nshell rpm -ivh http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm\n```\n\n### 查看nginx信息\n```\nshell yum info nginx\n\nLoaded plugins: fastestmirror, refresh-packagekit, security\nLoading mirror speeds from cached hostfile\n * base: mirrors.yun-idc.com\n * extras: mirrors.yun-idc.com\n * updates: mirrors.yun-idc.com\nnginx                                                                    | 2.9 kB     00:00    \nnginx/primary_db                                                         |  33 kB     00:00    \nAvailable Packages\nName        : nginx\nArch        : i386\nVersion     : 1.6.2\nRelease     : 1.el6.ngx\nSize        : 343 k\nRepo        : nginx\nSummary     : High performance web server\nURL         : http://nginx.org/\nLicense     : 2-clause BSD-like license\nDescription : nginx [engine x] is an HTTP and reverse proxy server, as well as\n            : a mail proxy server.\n```\n\n### 安装\n```\nshell yum install nginx\n```\n### 启动\n```\nshell service nginx start\n```\n### 访问\n\nhttp://ip\n\n查找nginx安装目录\n```\nshell ps -ef |grep nginx\nroot      2244     1  0 22:45 ?        00:00:00 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx.conf\nnginx     2245  2244  0 22:45 ?        00:00:00 nginx: worker process                  \nroot      2268  1922  0 22:50 pts/1    00:00:00 grep nginx\n```\n***如果不能连接到nginx，原因很多，但是可以先检查 1,nginx服务是否真的起来了；2,linux服务器防火墙是否打开***\n\n## 安装Tomcat\n```\nshell yum install tomcat6 tomcat6-webapps tomcat6-admin-webapps\n```\n\n### 启动\n\n```\nshell service tomcat6 start\n```\n\n### 启动\n\n```\nshell service tomcat6 stop\n```\n\n### 重启\n\n```\nshell service tomcat6 restart\n```\n\n按照以上方法安装tomcat6默认目录在/usr/share/tomcat6/下\n配置文件默认目录在/etc/tomcat6/下\n\n## 集群配置\n\n### 配置nginx.conf\n***在http{}中添加***\n```\nupstream cluster{\n server 192.168.1.231:8080 weight=2;\n server 192.168.1.232:8080 weight=1;\n}\n```\ncluster这个名称可以随便起\nweight参数表示权值，权值越高被分配到的几率越大\nserver 192.168.1.231:8080; 就是一个tomcat节点\n***在server{}中添加如下配置 表示对于访问.jsp的页面使用代理服务器跳转到tomcat节点中***\n```\nlocation ~ \\.jsp$ {\n   proxy_pass   http://cluster;\n}\n```\n\n如果想对根进行设置只需要对\n\n```\nlocation / {\n root   /usr/share/nginx/html;\n index  index.html index.html;\n}\n修改为\nlocation / {\n proxy_set_header Host $host;\n proxy_pass  http://cluster;\n}\n即可\n```\n\n复杂点的设置如下\n\n```\nlocation / {\n proxy_pass  http://cluster;\n proxy_redirect          off;\n proxy_set_header        Host $host;\n proxy_set_header        X-Real-IP $remote_addr;\n proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;\n client_max_body_size    10m;\n client_body_buffer_size 128k;\n proxy_connect_timeout   90;\n proxy_send_timeout      90;\n proxy_read_timeout      90;\n proxy_buffer_size       4k;\n proxy_buffers           4 32k;\n proxy_busy_buffers_size 64k;\n proxy_temp_file_write_size 64k;\n}\n```\n\n### nginx.conf文件说明\n```\n#nginx用户\nuser  nginx;\n#nginx进程数字越大对于处理并发能力越强如果设置2就相当于开启了两个nginx\nworker_processes  1;\n#错误文件日志路径\nerror_log  /var/log/nginx/error.log warn;\npid        /var/run/nginx.pid;\n#对应每个processes允许最大的连接数\nevents {\n    worker_connections  1024;\n}\n\nhttp {\n    include       /etc/nginx/mime.types;\n    default_type  application/octet-stream;\n    log_format  main  '$remote_addr - $remote_user [$time_local] \"$request\" '\n                      '$status $body_bytes_sent \"$http_referer\" '\n                      '\"$http_user_agent\" \"$http_x_forwarded_for\"';\n\n    access_log  /var/log/nginx/access.log  main;\n    sendfile        on;\n    #tcp_nopush     on;\n    keepalive_timeout  65;\n    #gzip  on;\n\t#负载均衡控制 server 对应集群的一个个节点weight表示权重值数字越大出现的次数越多\n\tupstream cluster{\n\t  server 192.168.1.231:8080 weight=1;\n\t  server 192.168.1.240:8080 weight=2;\n\t}\n\t#nginx服务器配置\n    server {\n\t\t#监听端口\n\t\tlisten       80;\n\t\t#服务器名称\n\t    server_name  localhost;\n\n\t\t#charset koi8-r;\n\t\t#access_log  /var/log/nginx/log/host.access.log  main;\n\t    #对于请求跟路径时候的处理\n\t\tlocation / {\n\t\t   root   /usr/share/nginx/html;\n\t\t   index  index.html index.htm;\n\t\t   proxy_set_header Host $host;\n\t\t   proxy_pass  http://cluster;\n\t\t}\n\n\t    #error_page  404              /404.html;\n\n\t    # redirect server error pages to the static page /50x.html\n\n\t    error_page   500 502 503 504  /50x.html;\n\t    location = /50x.html {\n\t\t\troot   /usr/share/nginx/html;\n\t\t\t#proxy_pass   http://cluster;\n\t\t}\n\t    #设置对于请求jsp时候的处理\n\t    location ~ \\.jsp$ {\n\t\t\tproxy_pass   http://cluster;\n\t\t}\n\t    # proxy the PHP scripts to Apache listening on 127.0.0.1:80\n\t    #\n\t    #location ~ \\.php$ {\n\t    #    proxy_pass   http://127.0.0.1;\n\t    #}\n\n\t    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000\n\t    #\n\t    #location ~ \\.php$ {\n\t    #    root           html;\n\t    #    fastcgi_pass   127.0.0.1:9000;\n\t    #    fastcgi_index  index.php;\n\t    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;\n\t    #    include        fastcgi_params;\n\t    #}\n\n\t    # deny access to .htaccess files, if Apache's document root\n\t    # concurs with nginx's one\n\t    #\n\t    #location ~ /\\.ht {\n\t    #    deny  all;\n\t    #}\n\t}\n}\n```\n\n### Tomcat配置\n打开tomcat的文档查看集群说明将集群配置如下 复制到tomcat\\conf\\server.xml文件 Engine节点下添加如下配置[具体说明查看官方文档](https://tomcat.apache.org/tomcat-6.0-doc/cluster-howto.html)\n```xml\n <Cluster className=\"org.apache.catalina.ha.tcp.SimpleTcpCluster\"\n\t\t\t channelSendOptions=\"8\">\n\n  <Manager className=\"org.apache.catalina.ha.session.DeltaManager\"\n\t\t   expireSessionsOnShutdown=\"false\"\n\t\t   notifyListenersOnReplication=\"true\"/>\n\n  <Channel className=\"org.apache.catalina.tribes.group.GroupChannel\">\n\t<Membership className=\"org.apache.catalina.tribes.membership.McastService\"\n\t\t\t\taddress=\"228.0.0.4\"\n\t\t\t\tport=\"45564\"\n\t\t\t\tfrequency=\"500\"\n\t\t\t\tdropTime=\"3000\"/>\n\t<Receiver className=\"org.apache.catalina.tribes.transport.nio.NioReceiver\"\n\t\t\t  address=\"auto\"\n\t\t\t  port=\"4000\"\n\t\t\t  autoBind=\"100\"\n\t\t\t  selectorTimeout=\"5000\"\n\t\t\t  maxThreads=\"6\"/>\n\n\t<Sender className=\"org.apache.catalina.tribes.transport.ReplicationTransmitter\">\n\t  <Transport className=\"org.apache.catalina.tribes.transport.nio.PooledParallelSender\"/>\n\t</Sender>\n\t<Interceptor className=\"org.apache.catalina.tribes.group.interceptors.TcpFailureDetector\"/>\n\t<Interceptor className=\"org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor\"/>\n  </Channel>\n\n  <Valve className=\"org.apache.catalina.ha.tcp.ReplicationValve\"\n\t\t filter=\"\"/>\n  <Valve className=\"org.apache.catalina.ha.session.JvmRouteBinderValve\"/>\n\n  <Deployer className=\"org.apache.catalina.ha.deploy.FarmWarDeployer\"\n\t\t\ttempDir=\"/tmp/war-temp/\"\n\t\t\tdeployDir=\"/tmp/war-deploy/\"\n\t\t\twatchDir=\"/tmp/war-listen/\"\n\t\t\twatchEnabled=\"false\"/>\n\n  <ClusterListener className=\"org.apache.catalina.ha.session.JvmRouteSessionIDBinderListener\"/>\n  <ClusterListener className=\"org.apache.catalina.ha.session.ClusterSessionListener\"/>\n</Cluster>   \n```\n\n```xml\n将\n<Engine name=\"Catalina\" defaultHost=\"localhost\"> \n添加jvmRoute属性\n<Engine name=\"Catalina\" defaultHost=\"localhost\" jvmRoute=\"node01\" > \n注意其他节点JvmRoute要分别不一样\n```\n在将应用的web.xml 文件末尾添加  distributable元素 如下表示这个应用下的session是可以共享的\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<web-app>\n   <distributable/>\n</web-app>\n```\n然后启动服务器发现控制台打印\n![控制台打印](003vMReezy6OUXDo7kt61&690.jpg)\n```\n信息: Manager [localhost#/demo]: skipping state transfer. No members active in cluster group.\n一月 04, 2015 7:55:30 下午 org.apache.catalina.tribes.transport.ReceiverBase bind\n信息: Receiver Server Socket bound to:/127.0.0.1:4000\n一月 04, 2015 7:56:34 下午 org.apache.catalina.ha.session.DeltaManager getAllClusterSessions\n警告: Manager [localhost#/demo]: Drop message SESSION-GET-ALL inside GET_ALL_SESSIONS sync phase start date 15-1-4 下午7:55 message date 70-1-1 上午8:00\n```\n\n表示没有发现其他的集群中的其他节点。接受Socket bind的IP是127.0.0.1所以我们需要将他改为局域网的IP\n将节点Receiver 属性address=\"auto\"改为服务器局域网IP如下；其他节点也要做相应的改动\n```xml\n<Receiver className=\"org.apache.catalina.tribes.transport.nio.NioReceiver\"\n\t\t  address=\"192.168.1.231\"\n\t\t  port=\"4000\"\n\t\t  autoBind=\"100\"\n\t\t  selectorTimeout=\"5000\"\n\t\t  maxThreads=\"6\"/>\n```\n再次启动服务器发现可以找到了其他的节点了\n\n然后启动nginx 访问nginx http://192.168.1.228/demo/分别打印\n```\nHello World DF53CB7748D8BC67E0AB8A9BBA13048F.node2\nHello World DF53CB7748D8BC67E0AB8A9BBA13048F.node1\n```\n\n可以看出在node2节点设置的 Hello World在node1、node2上分别获取到了表示配置tomcat的session共享已经成功，如果仅是sessionId相同并不能表示session共享成功，因为通过一个相同的IP和端口访问的服务器都会把cookie中的sessionid发送给服务器。\n\n***注意：***\n不要单独去访问某一台服务器这样是不能验证session是否配置成功。因为访问单独的服务器在浏览器输入的ip和端口是不一样的，浏览器是不会把访问其他服务器的cookie自动带上发送给服务器。所以通过单独访问每次打印的sessionId肯定是不一样的。","slug":"Nginx+Tomcat集群","published":1,"updated":"2016-05-13T13:44:39.914Z","layout":"post","photos":[],"link":"","_id":"cio5uhgmn0003o0ybkqnkf09x","content":"<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">系统</th>\n<th style=\"text-align:center\">JDK</th>\n<th style=\"text-align:center\">Tomcat</th>\n<th style=\"text-align:center\">Nginx</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">CentOS6 192.168.1.231 CentOS6 192.168.1.232</td>\n<td style=\"text-align:center\">JDK1.6</td>\n<td style=\"text-align:center\">Tomcat6</td>\n<td style=\"text-align:center\">nginx-release-centos-6-0.el6.ngx.noarch.rpm</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"安装JDK\"><a href=\"#安装JDK\" class=\"headerlink\" title=\"安装JDK\"></a>安装JDK</h2><p>第一步：检查是否已经安装了jdk 存在就卸载 rpm -e 包名<br><a id=\"more\"></a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell rpm -qa | grep java*</span><br></pre></td></tr></table></figure></p>\n<p>第二步：查看yum库是否有java安装包<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell  yum -y list java*</span><br></pre></td></tr></table></figure></p>\n<p>第三步：选择一个进行安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell yum -y install java-1.6.0-openjdk*</span><br></pre></td></tr></table></figure></p>\n<p>第四步：确定是否安装成功<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell java -version</span><br><span class=\"line\">java version &quot;1.6.0_20&quot;</span><br><span class=\"line\">OpenJDK Runtime Environment (IcedTea6 1.9.10) (rhel-1.23.1.9.10.el5_7-i386)</span><br><span class=\"line\">OpenJDK Client VM (build 19.0-b09, mixed mode)</span><br><span class=\"line\">显示如上信息表示安装成功</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"安装Nginx\"><a href=\"#安装Nginx\" class=\"headerlink\" title=\"安装Nginx\"></a>安装Nginx</h2><p><strong><em>通过yum安装nginx 针对 CentOS系统 其他版本可能会存在差异</em></strong></p>\n<h3 id=\"下载安装包\"><a href=\"#下载安装包\" class=\"headerlink\" title=\"下载安装包\"></a>下载安装包</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell rpm -ivh http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看nginx信息\"><a href=\"#查看nginx信息\" class=\"headerlink\" title=\"查看nginx信息\"></a>查看nginx信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell yum info nginx</span><br><span class=\"line\"></span><br><span class=\"line\">Loaded plugins: fastestmirror, refresh-packagekit, security</span><br><span class=\"line\">Loading mirror speeds from cached hostfile</span><br><span class=\"line\"> * base: mirrors.yun-idc.com</span><br><span class=\"line\"> * extras: mirrors.yun-idc.com</span><br><span class=\"line\"> * updates: mirrors.yun-idc.com</span><br><span class=\"line\">nginx                                                                    | 2.9 kB     00:00    </span><br><span class=\"line\">nginx/primary_db                                                         |  33 kB     00:00    </span><br><span class=\"line\">Available Packages</span><br><span class=\"line\">Name        : nginx</span><br><span class=\"line\">Arch        : i386</span><br><span class=\"line\">Version     : 1.6.2</span><br><span class=\"line\">Release     : 1.el6.ngx</span><br><span class=\"line\">Size        : 343 k</span><br><span class=\"line\">Repo        : nginx</span><br><span class=\"line\">Summary     : High performance web server</span><br><span class=\"line\">URL         : http://nginx.org/</span><br><span class=\"line\">License     : 2-clause BSD-like license</span><br><span class=\"line\">Description : nginx [engine x] is an HTTP and reverse proxy server, as well as</span><br><span class=\"line\">            : a mail proxy server.</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell yum install nginx</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell service nginx start</span><br></pre></td></tr></table></figure>\n<h3 id=\"访问\"><a href=\"#访问\" class=\"headerlink\" title=\"访问\"></a>访问</h3><p><a href=\"http://ip\" target=\"_blank\" rel=\"external\">http://ip</a></p>\n<p>查找nginx安装目录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell ps -ef |grep nginx</span><br><span class=\"line\">root      2244     1  0 22:45 ?        00:00:00 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx.conf</span><br><span class=\"line\">nginx     2245  2244  0 22:45 ?        00:00:00 nginx: worker process                  </span><br><span class=\"line\">root      2268  1922  0 22:50 pts/1    00:00:00 grep nginx</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>如果不能连接到nginx，原因很多，但是可以先检查 1,nginx服务是否真的起来了；2,linux服务器防火墙是否打开</em></strong></p>\n<h2 id=\"安装Tomcat\"><a href=\"#安装Tomcat\" class=\"headerlink\" title=\"安装Tomcat\"></a>安装Tomcat</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell yum install tomcat6 tomcat6-webapps tomcat6-admin-webapps</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动-1\"><a href=\"#启动-1\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell service tomcat6 start</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动-2\"><a href=\"#启动-2\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell service tomcat6 stop</span><br></pre></td></tr></table></figure>\n<h3 id=\"重启\"><a href=\"#重启\" class=\"headerlink\" title=\"重启\"></a>重启</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell service tomcat6 restart</span><br></pre></td></tr></table></figure>\n<p>按照以上方法安装tomcat6默认目录在/usr/share/tomcat6/下<br>配置文件默认目录在/etc/tomcat6/下</p>\n<h2 id=\"集群配置\"><a href=\"#集群配置\" class=\"headerlink\" title=\"集群配置\"></a>集群配置</h2><h3 id=\"配置nginx-conf\"><a href=\"#配置nginx-conf\" class=\"headerlink\" title=\"配置nginx.conf\"></a>配置nginx.conf</h3><p><strong><em>在http{}中添加</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream cluster&#123;</span><br><span class=\"line\"> server 192.168.1.231:8080 weight=2;</span><br><span class=\"line\"> server 192.168.1.232:8080 weight=1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>cluster这个名称可以随便起<br>weight参数表示权值，权值越高被分配到的几率越大<br>server 192.168.1.231:8080; 就是一个tomcat节点<br><strong><em>在server{}中添加如下配置 表示对于访问.jsp的页面使用代理服务器跳转到tomcat节点中</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location ~ \\.jsp$ &#123;</span><br><span class=\"line\">   proxy_pass   http://cluster;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>如果想对根进行设置只需要对</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location / &#123;</span><br><span class=\"line\"> root   /usr/share/nginx/html;</span><br><span class=\"line\"> index  index.html index.html;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">修改为</span><br><span class=\"line\">location / &#123;</span><br><span class=\"line\"> proxy_set_header Host $host;</span><br><span class=\"line\"> proxy_pass  http://cluster;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">即可</span><br></pre></td></tr></table></figure>\n<p>复杂点的设置如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location / &#123;</span><br><span class=\"line\"> proxy_pass  http://cluster;</span><br><span class=\"line\"> proxy_redirect          off;</span><br><span class=\"line\"> proxy_set_header        Host $host;</span><br><span class=\"line\"> proxy_set_header        X-Real-IP $remote_addr;</span><br><span class=\"line\"> proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\"> client_max_body_size    10m;</span><br><span class=\"line\"> client_body_buffer_size 128k;</span><br><span class=\"line\"> proxy_connect_timeout   90;</span><br><span class=\"line\"> proxy_send_timeout      90;</span><br><span class=\"line\"> proxy_read_timeout      90;</span><br><span class=\"line\"> proxy_buffer_size       4k;</span><br><span class=\"line\"> proxy_buffers           4 32k;</span><br><span class=\"line\"> proxy_busy_buffers_size 64k;</span><br><span class=\"line\"> proxy_temp_file_write_size 64k;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"nginx-conf文件说明\"><a href=\"#nginx-conf文件说明\" class=\"headerlink\" title=\"nginx.conf文件说明\"></a>nginx.conf文件说明</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#nginx用户</span><br><span class=\"line\">user  nginx;</span><br><span class=\"line\">#nginx进程数字越大对于处理并发能力越强如果设置2就相当于开启了两个nginx</span><br><span class=\"line\">worker_processes  1;</span><br><span class=\"line\">#错误文件日志路径</span><br><span class=\"line\">error_log  /var/log/nginx/error.log warn;</span><br><span class=\"line\">pid        /var/run/nginx.pid;</span><br><span class=\"line\">#对应每个processes允许最大的连接数</span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">    worker_connections  1024;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">    include       /etc/nginx/mime.types;</span><br><span class=\"line\">    default_type  application/octet-stream;</span><br><span class=\"line\">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class=\"line\">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class=\"line\">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">    access_log  /var/log/nginx/access.log  main;</span><br><span class=\"line\">    sendfile        on;</span><br><span class=\"line\">    #tcp_nopush     on;</span><br><span class=\"line\">    keepalive_timeout  65;</span><br><span class=\"line\">    #gzip  on;</span><br><span class=\"line\">\t#负载均衡控制 server 对应集群的一个个节点weight表示权重值数字越大出现的次数越多</span><br><span class=\"line\">\tupstream cluster&#123;</span><br><span class=\"line\">\t  server 192.168.1.231:8080 weight=1;</span><br><span class=\"line\">\t  server 192.168.1.240:8080 weight=2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t#nginx服务器配置</span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">\t\t#监听端口</span><br><span class=\"line\">\t\tlisten       80;</span><br><span class=\"line\">\t\t#服务器名称</span><br><span class=\"line\">\t    server_name  localhost;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t#charset koi8-r;</span><br><span class=\"line\">\t\t#access_log  /var/log/nginx/log/host.access.log  main;</span><br><span class=\"line\">\t    #对于请求跟路径时候的处理</span><br><span class=\"line\">\t\tlocation / &#123;</span><br><span class=\"line\">\t\t   root   /usr/share/nginx/html;</span><br><span class=\"line\">\t\t   index  index.html index.htm;</span><br><span class=\"line\">\t\t   proxy_set_header Host $host;</span><br><span class=\"line\">\t\t   proxy_pass  http://cluster;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t    #error_page  404              /404.html;</span><br><span class=\"line\"></span><br><span class=\"line\">\t    # redirect server error pages to the static page /50x.html</span><br><span class=\"line\"></span><br><span class=\"line\">\t    error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">\t    location = /50x.html &#123;</span><br><span class=\"line\">\t\t\troot   /usr/share/nginx/html;</span><br><span class=\"line\">\t\t\t#proxy_pass   http://cluster;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t    #设置对于请求jsp时候的处理</span><br><span class=\"line\">\t    location ~ \\.jsp$ &#123;</span><br><span class=\"line\">\t\t\tproxy_pass   http://cluster;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t    # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class=\"line\">\t    #</span><br><span class=\"line\">\t    #location ~ \\.php$ &#123;</span><br><span class=\"line\">\t    #    proxy_pass   http://127.0.0.1;</span><br><span class=\"line\">\t    #&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class=\"line\">\t    #</span><br><span class=\"line\">\t    #location ~ \\.php$ &#123;</span><br><span class=\"line\">\t    #    root           html;</span><br><span class=\"line\">\t    #    fastcgi_pass   127.0.0.1:9000;</span><br><span class=\"line\">\t    #    fastcgi_index  index.php;</span><br><span class=\"line\">\t    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class=\"line\">\t    #    include        fastcgi_params;</span><br><span class=\"line\">\t    #&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t    # deny access to .htaccess files, if Apache&apos;s document root</span><br><span class=\"line\">\t    # concurs with nginx&apos;s one</span><br><span class=\"line\">\t    #</span><br><span class=\"line\">\t    #location ~ /\\.ht &#123;</span><br><span class=\"line\">\t    #    deny  all;</span><br><span class=\"line\">\t    #&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Tomcat配置\"><a href=\"#Tomcat配置\" class=\"headerlink\" title=\"Tomcat配置\"></a>Tomcat配置</h3><p>打开tomcat的文档查看集群说明将集群配置如下 复制到tomcat\\conf\\server.xml文件 Engine节点下添加如下配置<a href=\"https://tomcat.apache.org/tomcat-6.0-doc/cluster-howto.html\" target=\"_blank\" rel=\"external\">具体说明查看官方文档</a><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">Cluster</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.ha.tcp.SimpleTcpCluster\"</span></span><br><span class=\"line\">\t\t\t <span class=\"attr\">channelSendOptions</span>=<span class=\"string\">\"8\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Manager</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.ha.session.DeltaManager\"</span></span><br><span class=\"line\">\t\t   <span class=\"attr\">expireSessionsOnShutdown</span>=<span class=\"string\">\"false\"</span></span><br><span class=\"line\">\t\t   <span class=\"attr\">notifyListenersOnReplication</span>=<span class=\"string\">\"true\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Channel</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.tribes.group.GroupChannel\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">Membership</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.tribes.membership.McastService\"</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">address</span>=<span class=\"string\">\"228.0.0.4\"</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">port</span>=<span class=\"string\">\"45564\"</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">frequency</span>=<span class=\"string\">\"500\"</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">dropTime</span>=<span class=\"string\">\"3000\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">Receiver</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.tribes.transport.nio.NioReceiver\"</span></span><br><span class=\"line\">\t\t\t  <span class=\"attr\">address</span>=<span class=\"string\">\"auto\"</span></span><br><span class=\"line\">\t\t\t  <span class=\"attr\">port</span>=<span class=\"string\">\"4000\"</span></span><br><span class=\"line\">\t\t\t  <span class=\"attr\">autoBind</span>=<span class=\"string\">\"100\"</span></span><br><span class=\"line\">\t\t\t  <span class=\"attr\">selectorTimeout</span>=<span class=\"string\">\"5000\"</span></span><br><span class=\"line\">\t\t\t  <span class=\"attr\">maxThreads</span>=<span class=\"string\">\"6\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">Sender</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.tribes.transport.ReplicationTransmitter\"</span>&gt;</span></span><br><span class=\"line\">\t  <span class=\"tag\">&lt;<span class=\"name\">Transport</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.tribes.transport.nio.PooledParallelSender\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">Sender</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">Interceptor</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.tribes.group.interceptors.TcpFailureDetector\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">Interceptor</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">Channel</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Valve</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.ha.tcp.ReplicationValve\"</span></span><br><span class=\"line\">\t\t <span class=\"attr\">filter</span>=<span class=\"string\">\"\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Valve</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.ha.session.JvmRouteBinderValve\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Deployer</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.ha.deploy.FarmWarDeployer\"</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">tempDir</span>=<span class=\"string\">\"/tmp/war-temp/\"</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">deployDir</span>=<span class=\"string\">\"/tmp/war-deploy/\"</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">watchDir</span>=<span class=\"string\">\"/tmp/war-listen/\"</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">watchEnabled</span>=<span class=\"string\">\"false\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ClusterListener</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.ha.session.JvmRouteSessionIDBinderListener\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ClusterListener</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.ha.session.ClusterSessionListener\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Cluster</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Engine</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Catalina\"</span> <span class=\"attr\">defaultHost</span>=<span class=\"string\">\"localhost\"</span>&gt;</span> </span><br><span class=\"line\">添加jvmRoute属性</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Engine</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Catalina\"</span> <span class=\"attr\">defaultHost</span>=<span class=\"string\">\"localhost\"</span> <span class=\"attr\">jvmRoute</span>=<span class=\"string\">\"node01\"</span> &gt;</span> </span><br><span class=\"line\">注意其他节点JvmRoute要分别不一样</span><br></pre></td></tr></table></figure>\n<p>在将应用的web.xml 文件末尾添加  distributable元素 如下表示这个应用下的session是可以共享的<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">distributable</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>然后启动服务器发现控制台打印<br><img src=\"003vMReezy6OUXDo7kt61&amp;690.jpg\" alt=\"控制台打印\"><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">信息: Manager [localhost#/demo]: skipping state transfer. No members active in cluster group.</span><br><span class=\"line\">一月 04, 2015 7:55:30 下午 org.apache.catalina.tribes.transport.ReceiverBase bind</span><br><span class=\"line\">信息: Receiver Server Socket bound to:/127.0.0.1:4000</span><br><span class=\"line\">一月 04, 2015 7:56:34 下午 org.apache.catalina.ha.session.DeltaManager getAllClusterSessions</span><br><span class=\"line\">警告: Manager [localhost#/demo]: Drop message SESSION-GET-ALL inside GET_ALL_SESSIONS sync phase start date 15-1-4 下午7:55 message date 70-1-1 上午8:00</span><br></pre></td></tr></table></figure></p>\n<p>表示没有发现其他的集群中的其他节点。接受Socket bind的IP是127.0.0.1所以我们需要将他改为局域网的IP<br>将节点Receiver 属性address=”auto”改为服务器局域网IP如下；其他节点也要做相应的改动<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Receiver</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.tribes.transport.nio.NioReceiver\"</span></span><br><span class=\"line\">\t\t  <span class=\"attr\">address</span>=<span class=\"string\">\"192.168.1.231\"</span></span><br><span class=\"line\">\t\t  <span class=\"attr\">port</span>=<span class=\"string\">\"4000\"</span></span><br><span class=\"line\">\t\t  <span class=\"attr\">autoBind</span>=<span class=\"string\">\"100\"</span></span><br><span class=\"line\">\t\t  <span class=\"attr\">selectorTimeout</span>=<span class=\"string\">\"5000\"</span></span><br><span class=\"line\">\t\t  <span class=\"attr\">maxThreads</span>=<span class=\"string\">\"6\"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>再次启动服务器发现可以找到了其他的节点了</p>\n<p>然后启动nginx 访问nginx <a href=\"http://192.168.1.228/demo/分别打印\" target=\"_blank\" rel=\"external\">http://192.168.1.228/demo/分别打印</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello World DF53CB7748D8BC67E0AB8A9BBA13048F.node2</span><br><span class=\"line\">Hello World DF53CB7748D8BC67E0AB8A9BBA13048F.node1</span><br></pre></td></tr></table></figure></p>\n<p>可以看出在node2节点设置的 Hello World在node1、node2上分别获取到了表示配置tomcat的session共享已经成功，如果仅是sessionId相同并不能表示session共享成功，因为通过一个相同的IP和端口访问的服务器都会把cookie中的sessionid发送给服务器。</p>\n<p><strong><em>注意：</em></strong><br>不要单独去访问某一台服务器这样是不能验证session是否配置成功。因为访问单独的服务器在浏览器输入的ip和端口是不一样的，浏览器是不会把访问其他服务器的cookie自动带上发送给服务器。所以通过单独访问每次打印的sessionId肯定是不一样的。</p>\n","excerpt":"<h2 id=\"环境\"><a href=\"#环境\" class=\"headerlink\" title=\"环境\"></a>环境</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">系统</th>\n<th style=\"text-align:center\">JDK</th>\n<th style=\"text-align:center\">Tomcat</th>\n<th style=\"text-align:center\">Nginx</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">CentOS6 192.168.1.231 CentOS6 192.168.1.232</td>\n<td style=\"text-align:center\">JDK1.6</td>\n<td style=\"text-align:center\">Tomcat6</td>\n<td style=\"text-align:center\">nginx-release-centos-6-0.el6.ngx.noarch.rpm</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"安装JDK\"><a href=\"#安装JDK\" class=\"headerlink\" title=\"安装JDK\"></a>安装JDK</h2><p>第一步：检查是否已经安装了jdk 存在就卸载 rpm -e 包名<br>","more":"<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell rpm -qa | grep java*</span><br></pre></td></tr></table></figure></p>\n<p>第二步：查看yum库是否有java安装包<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell  yum -y list java*</span><br></pre></td></tr></table></figure></p>\n<p>第三步：选择一个进行安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell yum -y install java-1.6.0-openjdk*</span><br></pre></td></tr></table></figure></p>\n<p>第四步：确定是否安装成功<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell java -version</span><br><span class=\"line\">java version &quot;1.6.0_20&quot;</span><br><span class=\"line\">OpenJDK Runtime Environment (IcedTea6 1.9.10) (rhel-1.23.1.9.10.el5_7-i386)</span><br><span class=\"line\">OpenJDK Client VM (build 19.0-b09, mixed mode)</span><br><span class=\"line\">显示如上信息表示安装成功</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"安装Nginx\"><a href=\"#安装Nginx\" class=\"headerlink\" title=\"安装Nginx\"></a>安装Nginx</h2><p><strong><em>通过yum安装nginx 针对 CentOS系统 其他版本可能会存在差异</em></strong></p>\n<h3 id=\"下载安装包\"><a href=\"#下载安装包\" class=\"headerlink\" title=\"下载安装包\"></a>下载安装包</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell rpm -ivh http://nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm</span><br></pre></td></tr></table></figure>\n<h3 id=\"查看nginx信息\"><a href=\"#查看nginx信息\" class=\"headerlink\" title=\"查看nginx信息\"></a>查看nginx信息</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell yum info nginx</span><br><span class=\"line\"></span><br><span class=\"line\">Loaded plugins: fastestmirror, refresh-packagekit, security</span><br><span class=\"line\">Loading mirror speeds from cached hostfile</span><br><span class=\"line\"> * base: mirrors.yun-idc.com</span><br><span class=\"line\"> * extras: mirrors.yun-idc.com</span><br><span class=\"line\"> * updates: mirrors.yun-idc.com</span><br><span class=\"line\">nginx                                                                    | 2.9 kB     00:00    </span><br><span class=\"line\">nginx/primary_db                                                         |  33 kB     00:00    </span><br><span class=\"line\">Available Packages</span><br><span class=\"line\">Name        : nginx</span><br><span class=\"line\">Arch        : i386</span><br><span class=\"line\">Version     : 1.6.2</span><br><span class=\"line\">Release     : 1.el6.ngx</span><br><span class=\"line\">Size        : 343 k</span><br><span class=\"line\">Repo        : nginx</span><br><span class=\"line\">Summary     : High performance web server</span><br><span class=\"line\">URL         : http://nginx.org/</span><br><span class=\"line\">License     : 2-clause BSD-like license</span><br><span class=\"line\">Description : nginx [engine x] is an HTTP and reverse proxy server, as well as</span><br><span class=\"line\">            : a mail proxy server.</span><br></pre></td></tr></table></figure>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell yum install nginx</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动\"><a href=\"#启动\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell service nginx start</span><br></pre></td></tr></table></figure>\n<h3 id=\"访问\"><a href=\"#访问\" class=\"headerlink\" title=\"访问\"></a>访问</h3><p><a href=\"http://ip\">http://ip</a></p>\n<p>查找nginx安装目录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell ps -ef |grep nginx</span><br><span class=\"line\">root      2244     1  0 22:45 ?        00:00:00 nginx: master process /usr/sbin/nginx -c /etc/nginx/nginx.conf</span><br><span class=\"line\">nginx     2245  2244  0 22:45 ?        00:00:00 nginx: worker process                  </span><br><span class=\"line\">root      2268  1922  0 22:50 pts/1    00:00:00 grep nginx</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>如果不能连接到nginx，原因很多，但是可以先检查 1,nginx服务是否真的起来了；2,linux服务器防火墙是否打开</em></strong></p>\n<h2 id=\"安装Tomcat\"><a href=\"#安装Tomcat\" class=\"headerlink\" title=\"安装Tomcat\"></a>安装Tomcat</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell yum install tomcat6 tomcat6-webapps tomcat6-admin-webapps</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动-1\"><a href=\"#启动-1\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell service tomcat6 start</span><br></pre></td></tr></table></figure>\n<h3 id=\"启动-2\"><a href=\"#启动-2\" class=\"headerlink\" title=\"启动\"></a>启动</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell service tomcat6 stop</span><br></pre></td></tr></table></figure>\n<h3 id=\"重启\"><a href=\"#重启\" class=\"headerlink\" title=\"重启\"></a>重启</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell service tomcat6 restart</span><br></pre></td></tr></table></figure>\n<p>按照以上方法安装tomcat6默认目录在/usr/share/tomcat6/下<br>配置文件默认目录在/etc/tomcat6/下</p>\n<h2 id=\"集群配置\"><a href=\"#集群配置\" class=\"headerlink\" title=\"集群配置\"></a>集群配置</h2><h3 id=\"配置nginx-conf\"><a href=\"#配置nginx-conf\" class=\"headerlink\" title=\"配置nginx.conf\"></a>配置nginx.conf</h3><p><strong><em>在http{}中添加</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">upstream cluster&#123;</span><br><span class=\"line\"> server 192.168.1.231:8080 weight=2;</span><br><span class=\"line\"> server 192.168.1.232:8080 weight=1;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>cluster这个名称可以随便起<br>weight参数表示权值，权值越高被分配到的几率越大<br>server 192.168.1.231:8080; 就是一个tomcat节点<br><strong><em>在server{}中添加如下配置 表示对于访问.jsp的页面使用代理服务器跳转到tomcat节点中</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location ~ \\.jsp$ &#123;</span><br><span class=\"line\">   proxy_pass   http://cluster;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>如果想对根进行设置只需要对</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location / &#123;</span><br><span class=\"line\"> root   /usr/share/nginx/html;</span><br><span class=\"line\"> index  index.html index.html;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">修改为</span><br><span class=\"line\">location / &#123;</span><br><span class=\"line\"> proxy_set_header Host $host;</span><br><span class=\"line\"> proxy_pass  http://cluster;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">即可</span><br></pre></td></tr></table></figure>\n<p>复杂点的设置如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">location / &#123;</span><br><span class=\"line\"> proxy_pass  http://cluster;</span><br><span class=\"line\"> proxy_redirect          off;</span><br><span class=\"line\"> proxy_set_header        Host $host;</span><br><span class=\"line\"> proxy_set_header        X-Real-IP $remote_addr;</span><br><span class=\"line\"> proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;</span><br><span class=\"line\"> client_max_body_size    10m;</span><br><span class=\"line\"> client_body_buffer_size 128k;</span><br><span class=\"line\"> proxy_connect_timeout   90;</span><br><span class=\"line\"> proxy_send_timeout      90;</span><br><span class=\"line\"> proxy_read_timeout      90;</span><br><span class=\"line\"> proxy_buffer_size       4k;</span><br><span class=\"line\"> proxy_buffers           4 32k;</span><br><span class=\"line\"> proxy_busy_buffers_size 64k;</span><br><span class=\"line\"> proxy_temp_file_write_size 64k;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"nginx-conf文件说明\"><a href=\"#nginx-conf文件说明\" class=\"headerlink\" title=\"nginx.conf文件说明\"></a>nginx.conf文件说明</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#nginx用户</span><br><span class=\"line\">user  nginx;</span><br><span class=\"line\">#nginx进程数字越大对于处理并发能力越强如果设置2就相当于开启了两个nginx</span><br><span class=\"line\">worker_processes  1;</span><br><span class=\"line\">#错误文件日志路径</span><br><span class=\"line\">error_log  /var/log/nginx/error.log warn;</span><br><span class=\"line\">pid        /var/run/nginx.pid;</span><br><span class=\"line\">#对应每个processes允许最大的连接数</span><br><span class=\"line\">events &#123;</span><br><span class=\"line\">    worker_connections  1024;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">http &#123;</span><br><span class=\"line\">    include       /etc/nginx/mime.types;</span><br><span class=\"line\">    default_type  application/octet-stream;</span><br><span class=\"line\">    log_format  main  &apos;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &apos;</span><br><span class=\"line\">                      &apos;$status $body_bytes_sent &quot;$http_referer&quot; &apos;</span><br><span class=\"line\">                      &apos;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&apos;;</span><br><span class=\"line\"></span><br><span class=\"line\">    access_log  /var/log/nginx/access.log  main;</span><br><span class=\"line\">    sendfile        on;</span><br><span class=\"line\">    #tcp_nopush     on;</span><br><span class=\"line\">    keepalive_timeout  65;</span><br><span class=\"line\">    #gzip  on;</span><br><span class=\"line\">\t#负载均衡控制 server 对应集群的一个个节点weight表示权重值数字越大出现的次数越多</span><br><span class=\"line\">\tupstream cluster&#123;</span><br><span class=\"line\">\t  server 192.168.1.231:8080 weight=1;</span><br><span class=\"line\">\t  server 192.168.1.240:8080 weight=2;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t#nginx服务器配置</span><br><span class=\"line\">    server &#123;</span><br><span class=\"line\">\t\t#监听端口</span><br><span class=\"line\">\t\tlisten       80;</span><br><span class=\"line\">\t\t#服务器名称</span><br><span class=\"line\">\t    server_name  localhost;</span><br><span class=\"line\"></span><br><span class=\"line\">\t\t#charset koi8-r;</span><br><span class=\"line\">\t\t#access_log  /var/log/nginx/log/host.access.log  main;</span><br><span class=\"line\">\t    #对于请求跟路径时候的处理</span><br><span class=\"line\">\t\tlocation / &#123;</span><br><span class=\"line\">\t\t   root   /usr/share/nginx/html;</span><br><span class=\"line\">\t\t   index  index.html index.htm;</span><br><span class=\"line\">\t\t   proxy_set_header Host $host;</span><br><span class=\"line\">\t\t   proxy_pass  http://cluster;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t    #error_page  404              /404.html;</span><br><span class=\"line\"></span><br><span class=\"line\">\t    # redirect server error pages to the static page /50x.html</span><br><span class=\"line\"></span><br><span class=\"line\">\t    error_page   500 502 503 504  /50x.html;</span><br><span class=\"line\">\t    location = /50x.html &#123;</span><br><span class=\"line\">\t\t\troot   /usr/share/nginx/html;</span><br><span class=\"line\">\t\t\t#proxy_pass   http://cluster;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t    #设置对于请求jsp时候的处理</span><br><span class=\"line\">\t    location ~ \\.jsp$ &#123;</span><br><span class=\"line\">\t\t\tproxy_pass   http://cluster;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t    # proxy the PHP scripts to Apache listening on 127.0.0.1:80</span><br><span class=\"line\">\t    #</span><br><span class=\"line\">\t    #location ~ \\.php$ &#123;</span><br><span class=\"line\">\t    #    proxy_pass   http://127.0.0.1;</span><br><span class=\"line\">\t    #&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000</span><br><span class=\"line\">\t    #</span><br><span class=\"line\">\t    #location ~ \\.php$ &#123;</span><br><span class=\"line\">\t    #    root           html;</span><br><span class=\"line\">\t    #    fastcgi_pass   127.0.0.1:9000;</span><br><span class=\"line\">\t    #    fastcgi_index  index.php;</span><br><span class=\"line\">\t    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;</span><br><span class=\"line\">\t    #    include        fastcgi_params;</span><br><span class=\"line\">\t    #&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">\t    # deny access to .htaccess files, if Apache&apos;s document root</span><br><span class=\"line\">\t    # concurs with nginx&apos;s one</span><br><span class=\"line\">\t    #</span><br><span class=\"line\">\t    #location ~ /\\.ht &#123;</span><br><span class=\"line\">\t    #    deny  all;</span><br><span class=\"line\">\t    #&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Tomcat配置\"><a href=\"#Tomcat配置\" class=\"headerlink\" title=\"Tomcat配置\"></a>Tomcat配置</h3><p>打开tomcat的文档查看集群说明将集群配置如下 复制到tomcat\\conf\\server.xml文件 Engine节点下添加如下配置<a href=\"https://tomcat.apache.org/tomcat-6.0-doc/cluster-howto.html\">具体说明查看官方文档</a><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">Cluster</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.ha.tcp.SimpleTcpCluster\"</span></span><br><span class=\"line\">\t\t\t <span class=\"attr\">channelSendOptions</span>=<span class=\"string\">\"8\"</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Manager</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.ha.session.DeltaManager\"</span></span><br><span class=\"line\">\t\t   <span class=\"attr\">expireSessionsOnShutdown</span>=<span class=\"string\">\"false\"</span></span><br><span class=\"line\">\t\t   <span class=\"attr\">notifyListenersOnReplication</span>=<span class=\"string\">\"true\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Channel</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.tribes.group.GroupChannel\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">Membership</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.tribes.membership.McastService\"</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">address</span>=<span class=\"string\">\"228.0.0.4\"</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">port</span>=<span class=\"string\">\"45564\"</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">frequency</span>=<span class=\"string\">\"500\"</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attr\">dropTime</span>=<span class=\"string\">\"3000\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">Receiver</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.tribes.transport.nio.NioReceiver\"</span></span><br><span class=\"line\">\t\t\t  <span class=\"attr\">address</span>=<span class=\"string\">\"auto\"</span></span><br><span class=\"line\">\t\t\t  <span class=\"attr\">port</span>=<span class=\"string\">\"4000\"</span></span><br><span class=\"line\">\t\t\t  <span class=\"attr\">autoBind</span>=<span class=\"string\">\"100\"</span></span><br><span class=\"line\">\t\t\t  <span class=\"attr\">selectorTimeout</span>=<span class=\"string\">\"5000\"</span></span><br><span class=\"line\">\t\t\t  <span class=\"attr\">maxThreads</span>=<span class=\"string\">\"6\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">Sender</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.tribes.transport.ReplicationTransmitter\"</span>&gt;</span></span><br><span class=\"line\">\t  <span class=\"tag\">&lt;<span class=\"name\">Transport</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.tribes.transport.nio.PooledParallelSender\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">Sender</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">Interceptor</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.tribes.group.interceptors.TcpFailureDetector\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">Interceptor</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.tribes.group.interceptors.MessageDispatch15Interceptor\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">Channel</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Valve</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.ha.tcp.ReplicationValve\"</span></span><br><span class=\"line\">\t\t <span class=\"attr\">filter</span>=<span class=\"string\">\"\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Valve</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.ha.session.JvmRouteBinderValve\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">Deployer</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.ha.deploy.FarmWarDeployer\"</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">tempDir</span>=<span class=\"string\">\"/tmp/war-temp/\"</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">deployDir</span>=<span class=\"string\">\"/tmp/war-deploy/\"</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">watchDir</span>=<span class=\"string\">\"/tmp/war-listen/\"</span></span><br><span class=\"line\">\t\t\t<span class=\"attr\">watchEnabled</span>=<span class=\"string\">\"false\"</span>/&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ClusterListener</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.ha.session.JvmRouteSessionIDBinderListener\"</span>/&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">ClusterListener</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.ha.session.ClusterSessionListener\"</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">Cluster</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">将</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Engine</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Catalina\"</span> <span class=\"attr\">defaultHost</span>=<span class=\"string\">\"localhost\"</span>&gt;</span> </span><br><span class=\"line\">添加jvmRoute属性</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Engine</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Catalina\"</span> <span class=\"attr\">defaultHost</span>=<span class=\"string\">\"localhost\"</span> <span class=\"attr\">jvmRoute</span>=<span class=\"string\">\"node01\"</span> &gt;</span> </span><br><span class=\"line\">注意其他节点JvmRoute要分别不一样</span><br></pre></td></tr></table></figure>\n<p>在将应用的web.xml 文件末尾添加  distributable元素 如下表示这个应用下的session是可以共享的<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">web-app</span>&gt;</span></span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">distributable</span>/&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>然后启动服务器发现控制台打印<br><img src=\"003vMReezy6OUXDo7kt61&amp;690.jpg\" alt=\"控制台打印\"><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">信息: Manager [localhost#/demo]: skipping state transfer. No members active in cluster group.</span><br><span class=\"line\">一月 04, 2015 7:55:30 下午 org.apache.catalina.tribes.transport.ReceiverBase bind</span><br><span class=\"line\">信息: Receiver Server Socket bound to:/127.0.0.1:4000</span><br><span class=\"line\">一月 04, 2015 7:56:34 下午 org.apache.catalina.ha.session.DeltaManager getAllClusterSessions</span><br><span class=\"line\">警告: Manager [localhost#/demo]: Drop message SESSION-GET-ALL inside GET_ALL_SESSIONS sync phase start date 15-1-4 下午7:55 message date 70-1-1 上午8:00</span><br></pre></td></tr></table></figure></p>\n<p>表示没有发现其他的集群中的其他节点。接受Socket bind的IP是127.0.0.1所以我们需要将他改为局域网的IP<br>将节点Receiver 属性address=”auto”改为服务器局域网IP如下；其他节点也要做相应的改动<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">Receiver</span> <span class=\"attr\">className</span>=<span class=\"string\">\"org.apache.catalina.tribes.transport.nio.NioReceiver\"</span></span><br><span class=\"line\">\t\t  <span class=\"attr\">address</span>=<span class=\"string\">\"192.168.1.231\"</span></span><br><span class=\"line\">\t\t  <span class=\"attr\">port</span>=<span class=\"string\">\"4000\"</span></span><br><span class=\"line\">\t\t  <span class=\"attr\">autoBind</span>=<span class=\"string\">\"100\"</span></span><br><span class=\"line\">\t\t  <span class=\"attr\">selectorTimeout</span>=<span class=\"string\">\"5000\"</span></span><br><span class=\"line\">\t\t  <span class=\"attr\">maxThreads</span>=<span class=\"string\">\"6\"</span>/&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>再次启动服务器发现可以找到了其他的节点了</p>\n<p>然后启动nginx 访问nginx <a href=\"http://192.168.1.228/demo/分别打印\">http://192.168.1.228/demo/分别打印</a><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Hello World DF53CB7748D8BC67E0AB8A9BBA13048F.node2</span><br><span class=\"line\">Hello World DF53CB7748D8BC67E0AB8A9BBA13048F.node1</span><br></pre></td></tr></table></figure></p>\n<p>可以看出在node2节点设置的 Hello World在node1、node2上分别获取到了表示配置tomcat的session共享已经成功，如果仅是sessionId相同并不能表示session共享成功，因为通过一个相同的IP和端口访问的服务器都会把cookie中的sessionid发送给服务器。</p>\n<p><strong><em>注意：</em></strong><br>不要单独去访问某一台服务器这样是不能验证session是否配置成功。因为访问单独的服务器在浏览器输入的ip和端口是不一样的，浏览器是不会把访问其他服务器的cookie自动带上发送给服务器。所以通过单独访问每次打印的sessionId肯定是不一样的。</p>"},{"title":"浅谈BSF","date":"2013-01-30T13:28:01.000Z","comments":1,"toc":true,"_content":"\n### BSF是什么\n BSF(Bean Scripting Framework)是一个支持在java应用程序内调用脚本语言，并且支持脚本语言直接访问java对象和方法的一个开源项目，有了他，你能在你的java application中使用javascript、Python、XSLT、tcl等等。反过来也可以在script language中调用任何注册过了的javaBean、java Object 它提供了完整的API实现通过Java访问脚本语言的引擎。\n \n<!--more-->\n### 如何使用\n 在你的java 应用程序中导入bsf.jar包如果你使用的脚本是javascript那还需要导入js.jar包，其他脚本语言类似导入相对应的jar即可下面我就以javascript为列简单说明下BSF的使用将会已代码的形式展示给大家。\n \n### Java Bean中\n```java\npackage cn.com.bsf.test; \n         \npublic class BeanDemo{ \n     private String name; \n              \n     public void setName(String name){ \n         this.name=name; \n     } \n     public String getName(){ \n          return name \n     } \n} \n         \npackage cn.com.bsf.test; \nimport java.io.BufferedInputStream; \nimport java.io.BufferedReader; \nimport java.io.IOException; \nimport java.io.InputStream; \nimport java.io.InputStreamReader; \nimport java.util.HashMap; \nimport java.util.Map; \n         \nimport org.apache.bsf.BSFEngine; \nimport org.apache.bsf.BSFException; \nimport org.apache.bsf.BSFManager; \npublic class BSFExample{ \n         \n    public static void main(String[] args){ \n        BSFManager bsfManager= new BSFManager(); \n        BeanDemo demo= new BeanDemo(); \n        //在BSF中注册java bean \n        bsfManager.declareBean(\"demo\", demo, demo.getClass()); \n        bsfManager.declareBean(\"out\", System.out, System.out.getClass()); \n        //得到BSF引擎 \n        BSFEngine bsfEngine = bsfManager.loadScriptingEngine(\"javascript\"); \n        //读取js文件 \n        InputStream stream = BSFDemo.class.getResourceAsStream(\"/bsf_001.js\"); \n        InputStreamReader reader = new InputStreamReader(new BufferedInputStream(stream)); \n        BufferedReader bufR = new BufferedReader(reader); \n        StringBuffer sb = new StringBuffer(); \n        String content = bufR.readLine(); \n        while (content != null) { \n           sb.append(content); \n           content = bufR.readLine(); \n        } \n        bsfEngine.exec(\"javascript\", 0, 0, sb.toString()); \n       //执行脚本中的某个方法 \n        Object o = bsfEngine.eval(\"javascript\", 0, 0, \"test()\");  \n        Map map = (HashMap) o; \n        System.out.println(map.get(\"age\")); \n        System.out.println(demo.getName()); \n    } \n} \n```\n\n输出结果\n```\nhello world \n10\n张三\n```\n### 脚本\n*** bsf_001.js***\n```javascript\nimportPackage(java.util); \nfunction test(){ \n    reflection.setName(\"张三\"); \n    out.println(\"hello world\"); \n    var map = new HashMap(); \n    map.put(\"name\",\"张三\"); \n    map.put(\"age\",\"10\"); \n    return map; \n}\n```\n\n*** bsf_002.js***\n```javascript\nimportClass(Packages.cn.com.bsf.test.AppDemo); \nvar appDemo = new AppDemo(); \nvar str=appDemo.query(\"select * from bsf\"); \nout.println(str);\n```\nbsf_002.js与bsf_001.js的不同的是脚本代码没有包含在function中所以bsf执行稍微会有所不同\nObject o = bsfEngine.eval(\"javascript\", 0, 0, \"bsf_002.js的脚本内容\");\n\n不知道大家注意到了importClass、importPackage没有，下面我就解释下他们的用处\n\n***importClass 是在我们的脚本中引入我们的javaBean如果是jdk中自带的javaBea不需要packages关键字反之需要例如***\n***importClass(Packages.cn.com.bsf.test.BeanDemo);***\n***importClass(java.util.HashMap);***\n***importPackage是在我们的脚本中引入包 引入包后就可以使用这个包中所有javaBean其语法如下他会importClass类似自定义的java包需要加Packages为前缀。***\n***importPackage(Packages.cn.com.bsf.test）;***\n***importPackage(java.util);***\n","source":"_posts/浅谈BSF.md","raw":"---\ntitle: 浅谈BSF\ndate: 2013-01-30 21:28:01\ncomments: true\ncategories: BSF\ntoc: true \n---\n\n### BSF是什么\n BSF(Bean Scripting Framework)是一个支持在java应用程序内调用脚本语言，并且支持脚本语言直接访问java对象和方法的一个开源项目，有了他，你能在你的java application中使用javascript、Python、XSLT、tcl等等。反过来也可以在script language中调用任何注册过了的javaBean、java Object 它提供了完整的API实现通过Java访问脚本语言的引擎。\n \n<!--more-->\n### 如何使用\n 在你的java 应用程序中导入bsf.jar包如果你使用的脚本是javascript那还需要导入js.jar包，其他脚本语言类似导入相对应的jar即可下面我就以javascript为列简单说明下BSF的使用将会已代码的形式展示给大家。\n \n### Java Bean中\n```java\npackage cn.com.bsf.test; \n         \npublic class BeanDemo{ \n     private String name; \n              \n     public void setName(String name){ \n         this.name=name; \n     } \n     public String getName(){ \n          return name \n     } \n} \n         \npackage cn.com.bsf.test; \nimport java.io.BufferedInputStream; \nimport java.io.BufferedReader; \nimport java.io.IOException; \nimport java.io.InputStream; \nimport java.io.InputStreamReader; \nimport java.util.HashMap; \nimport java.util.Map; \n         \nimport org.apache.bsf.BSFEngine; \nimport org.apache.bsf.BSFException; \nimport org.apache.bsf.BSFManager; \npublic class BSFExample{ \n         \n    public static void main(String[] args){ \n        BSFManager bsfManager= new BSFManager(); \n        BeanDemo demo= new BeanDemo(); \n        //在BSF中注册java bean \n        bsfManager.declareBean(\"demo\", demo, demo.getClass()); \n        bsfManager.declareBean(\"out\", System.out, System.out.getClass()); \n        //得到BSF引擎 \n        BSFEngine bsfEngine = bsfManager.loadScriptingEngine(\"javascript\"); \n        //读取js文件 \n        InputStream stream = BSFDemo.class.getResourceAsStream(\"/bsf_001.js\"); \n        InputStreamReader reader = new InputStreamReader(new BufferedInputStream(stream)); \n        BufferedReader bufR = new BufferedReader(reader); \n        StringBuffer sb = new StringBuffer(); \n        String content = bufR.readLine(); \n        while (content != null) { \n           sb.append(content); \n           content = bufR.readLine(); \n        } \n        bsfEngine.exec(\"javascript\", 0, 0, sb.toString()); \n       //执行脚本中的某个方法 \n        Object o = bsfEngine.eval(\"javascript\", 0, 0, \"test()\");  \n        Map map = (HashMap) o; \n        System.out.println(map.get(\"age\")); \n        System.out.println(demo.getName()); \n    } \n} \n```\n\n输出结果\n```\nhello world \n10\n张三\n```\n### 脚本\n*** bsf_001.js***\n```javascript\nimportPackage(java.util); \nfunction test(){ \n    reflection.setName(\"张三\"); \n    out.println(\"hello world\"); \n    var map = new HashMap(); \n    map.put(\"name\",\"张三\"); \n    map.put(\"age\",\"10\"); \n    return map; \n}\n```\n\n*** bsf_002.js***\n```javascript\nimportClass(Packages.cn.com.bsf.test.AppDemo); \nvar appDemo = new AppDemo(); \nvar str=appDemo.query(\"select * from bsf\"); \nout.println(str);\n```\nbsf_002.js与bsf_001.js的不同的是脚本代码没有包含在function中所以bsf执行稍微会有所不同\nObject o = bsfEngine.eval(\"javascript\", 0, 0, \"bsf_002.js的脚本内容\");\n\n不知道大家注意到了importClass、importPackage没有，下面我就解释下他们的用处\n\n***importClass 是在我们的脚本中引入我们的javaBean如果是jdk中自带的javaBea不需要packages关键字反之需要例如***\n***importClass(Packages.cn.com.bsf.test.BeanDemo);***\n***importClass(java.util.HashMap);***\n***importPackage是在我们的脚本中引入包 引入包后就可以使用这个包中所有javaBean其语法如下他会importClass类似自定义的java包需要加Packages为前缀。***\n***importPackage(Packages.cn.com.bsf.test）;***\n***importPackage(java.util);***\n","slug":"浅谈BSF","published":1,"updated":"2016-05-13T15:55:42.065Z","_id":"cio5uhgn30004o0ybbrfbmeys","layout":"post","photos":[],"link":"","content":"<h3 id=\"BSF是什么\"><a href=\"#BSF是什么\" class=\"headerlink\" title=\"BSF是什么\"></a>BSF是什么</h3><p> BSF(Bean Scripting Framework)是一个支持在java应用程序内调用脚本语言，并且支持脚本语言直接访问java对象和方法的一个开源项目，有了他，你能在你的java application中使用javascript、Python、XSLT、tcl等等。反过来也可以在script language中调用任何注册过了的javaBean、java Object 它提供了完整的API实现通过Java访问脚本语言的引擎。</p>\n<a id=\"more\"></a>\n<h3 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h3><p> 在你的java 应用程序中导入bsf.jar包如果你使用的脚本是javascript那还需要导入js.jar包，其他脚本语言类似导入相对应的jar即可下面我就以javascript为列简单说明下BSF的使用将会已代码的形式展示给大家。</p>\n<h3 id=\"Java-Bean中\"><a href=\"#Java-Bean中\" class=\"headerlink\" title=\"Java Bean中\"></a>Java Bean中</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.com.bsf.test; </span><br><span class=\"line\">         </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BeanDemo</span></span>&#123; </span><br><span class=\"line\">     <span class=\"keyword\">private</span> String name; </span><br><span class=\"line\">              </span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span></span>&#123; </span><br><span class=\"line\">         <span class=\"keyword\">this</span>.name=name; </span><br><span class=\"line\">     &#125; </span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span></span>&#123; </span><br><span class=\"line\">          <span class=\"keyword\">return</span> name </span><br><span class=\"line\">     &#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\">         </span><br><span class=\"line\"><span class=\"keyword\">package</span> cn.com.bsf.test; </span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedInputStream; </span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader; </span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException; </span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream; </span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader; </span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap; </span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map; </span><br><span class=\"line\">         </span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.bsf.BSFEngine; </span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.bsf.BSFException; </span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.bsf.BSFManager; </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BSFExample</span></span>&#123; </span><br><span class=\"line\">         </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123; </span><br><span class=\"line\">        BSFManager bsfManager= <span class=\"keyword\">new</span> BSFManager(); </span><br><span class=\"line\">        BeanDemo demo= <span class=\"keyword\">new</span> BeanDemo(); </span><br><span class=\"line\">        <span class=\"comment\">//在BSF中注册java bean </span></span><br><span class=\"line\">        bsfManager.declareBean(<span class=\"string\">\"demo\"</span>, demo, demo.getClass()); </span><br><span class=\"line\">        bsfManager.declareBean(<span class=\"string\">\"out\"</span>, System.out, System.out.getClass()); </span><br><span class=\"line\">        <span class=\"comment\">//得到BSF引擎 </span></span><br><span class=\"line\">        BSFEngine bsfEngine = bsfManager.loadScriptingEngine(<span class=\"string\">\"javascript\"</span>); </span><br><span class=\"line\">        <span class=\"comment\">//读取js文件 </span></span><br><span class=\"line\">        InputStream stream = BSFDemo.class.getResourceAsStream(<span class=\"string\">\"/bsf_001.js\"</span>); </span><br><span class=\"line\">        InputStreamReader reader = <span class=\"keyword\">new</span> InputStreamReader(<span class=\"keyword\">new</span> BufferedInputStream(stream)); </span><br><span class=\"line\">        BufferedReader bufR = <span class=\"keyword\">new</span> BufferedReader(reader); </span><br><span class=\"line\">        StringBuffer sb = <span class=\"keyword\">new</span> StringBuffer(); </span><br><span class=\"line\">        String content = bufR.readLine(); </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (content != <span class=\"keyword\">null</span>) &#123; </span><br><span class=\"line\">           sb.append(content); </span><br><span class=\"line\">           content = bufR.readLine(); </span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">        bsfEngine.exec(<span class=\"string\">\"javascript\"</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, sb.toString()); </span><br><span class=\"line\">       <span class=\"comment\">//执行脚本中的某个方法 </span></span><br><span class=\"line\">        Object o = bsfEngine.eval(<span class=\"string\">\"javascript\"</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"string\">\"test()\"</span>);  </span><br><span class=\"line\">        Map map = (HashMap) o; </span><br><span class=\"line\">        System.out.println(map.get(<span class=\"string\">\"age\"</span>)); </span><br><span class=\"line\">        System.out.println(demo.getName()); </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>输出结果<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hello world </span><br><span class=\"line\">10</span><br><span class=\"line\">张三</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h3><p><strong><em> bsf_001.js</em></strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">importPackage(java.util); </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>)</span>&#123; </span><br><span class=\"line\">    reflection.setName(<span class=\"string\">\"张三\"</span>); </span><br><span class=\"line\">    out.println(<span class=\"string\">\"hello world\"</span>); </span><br><span class=\"line\">    <span class=\"keyword\">var</span> map = <span class=\"keyword\">new</span> HashMap(); </span><br><span class=\"line\">    map.put(<span class=\"string\">\"name\"</span>,<span class=\"string\">\"张三\"</span>); </span><br><span class=\"line\">    map.put(<span class=\"string\">\"age\"</span>,<span class=\"string\">\"10\"</span>); </span><br><span class=\"line\">    <span class=\"keyword\">return</span> map; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em> bsf_002.js</em></strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">importClass(Packages.cn.com.bsf.test.AppDemo); </span><br><span class=\"line\"><span class=\"keyword\">var</span> appDemo = <span class=\"keyword\">new</span> AppDemo(); </span><br><span class=\"line\"><span class=\"keyword\">var</span> str=appDemo.query(<span class=\"string\">\"select * from bsf\"</span>); </span><br><span class=\"line\">out.println(str);</span><br></pre></td></tr></table></figure></p>\n<p>bsf_002.js与bsf_001.js的不同的是脚本代码没有包含在function中所以bsf执行稍微会有所不同<br>Object o = bsfEngine.eval(“javascript”, 0, 0, “bsf_002.js的脚本内容”);</p>\n<p>不知道大家注意到了importClass、importPackage没有，下面我就解释下他们的用处</p>\n<p><strong><em>importClass 是在我们的脚本中引入我们的javaBean如果是jdk中自带的javaBea不需要packages关键字反之需要例如</em></strong><br><strong><em>importClass(Packages.cn.com.bsf.test.BeanDemo);</em></strong><br><strong><em>importClass(java.util.HashMap);</em></strong><br><strong><em>importPackage是在我们的脚本中引入包 引入包后就可以使用这个包中所有javaBean其语法如下他会importClass类似自定义的java包需要加Packages为前缀。</em></strong><br><strong><em>importPackage(Packages.cn.com.bsf.test）;</em></strong><br><strong><em>importPackage(java.util);</em></strong></p>\n","excerpt":"<h3 id=\"BSF是什么\"><a href=\"#BSF是什么\" class=\"headerlink\" title=\"BSF是什么\"></a>BSF是什么</h3><p> BSF(Bean Scripting Framework)是一个支持在java应用程序内调用脚本语言，并且支持脚本语言直接访问java对象和方法的一个开源项目，有了他，你能在你的java application中使用javascript、Python、XSLT、tcl等等。反过来也可以在script language中调用任何注册过了的javaBean、java Object 它提供了完整的API实现通过Java访问脚本语言的引擎。</p>","more":"<h3 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h3><p> 在你的java 应用程序中导入bsf.jar包如果你使用的脚本是javascript那还需要导入js.jar包，其他脚本语言类似导入相对应的jar即可下面我就以javascript为列简单说明下BSF的使用将会已代码的形式展示给大家。</p>\n<h3 id=\"Java-Bean中\"><a href=\"#Java-Bean中\" class=\"headerlink\" title=\"Java Bean中\"></a>Java Bean中</h3><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> cn.com.bsf.test; </span><br><span class=\"line\">         </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BeanDemo</span></span>&#123; </span><br><span class=\"line\">     <span class=\"keyword\">private</span> String name; </span><br><span class=\"line\">              </span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">setName</span><span class=\"params\">(String name)</span></span>&#123; </span><br><span class=\"line\">         <span class=\"keyword\">this</span>.name=name; </span><br><span class=\"line\">     &#125; </span><br><span class=\"line\">     <span class=\"function\"><span class=\"keyword\">public</span> String <span class=\"title\">getName</span><span class=\"params\">()</span></span>&#123; </span><br><span class=\"line\">          <span class=\"keyword\">return</span> name </span><br><span class=\"line\">     &#125; </span><br><span class=\"line\">&#125; </span><br><span class=\"line\">         </span><br><span class=\"line\"><span class=\"keyword\">package</span> cn.com.bsf.test; </span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedInputStream; </span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.BufferedReader; </span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException; </span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStream; </span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.InputStreamReader; </span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.HashMap; </span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Map; </span><br><span class=\"line\">         </span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.bsf.BSFEngine; </span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.bsf.BSFException; </span><br><span class=\"line\"><span class=\"keyword\">import</span> org.apache.bsf.BSFManager; </span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BSFExample</span></span>&#123; </span><br><span class=\"line\">         </span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123; </span><br><span class=\"line\">        BSFManager bsfManager= <span class=\"keyword\">new</span> BSFManager(); </span><br><span class=\"line\">        BeanDemo demo= <span class=\"keyword\">new</span> BeanDemo(); </span><br><span class=\"line\">        <span class=\"comment\">//在BSF中注册java bean </span></span><br><span class=\"line\">        bsfManager.declareBean(<span class=\"string\">\"demo\"</span>, demo, demo.getClass()); </span><br><span class=\"line\">        bsfManager.declareBean(<span class=\"string\">\"out\"</span>, System.out, System.out.getClass()); </span><br><span class=\"line\">        <span class=\"comment\">//得到BSF引擎 </span></span><br><span class=\"line\">        BSFEngine bsfEngine = bsfManager.loadScriptingEngine(<span class=\"string\">\"javascript\"</span>); </span><br><span class=\"line\">        <span class=\"comment\">//读取js文件 </span></span><br><span class=\"line\">        InputStream stream = BSFDemo.class.getResourceAsStream(<span class=\"string\">\"/bsf_001.js\"</span>); </span><br><span class=\"line\">        InputStreamReader reader = <span class=\"keyword\">new</span> InputStreamReader(<span class=\"keyword\">new</span> BufferedInputStream(stream)); </span><br><span class=\"line\">        BufferedReader bufR = <span class=\"keyword\">new</span> BufferedReader(reader); </span><br><span class=\"line\">        StringBuffer sb = <span class=\"keyword\">new</span> StringBuffer(); </span><br><span class=\"line\">        String content = bufR.readLine(); </span><br><span class=\"line\">        <span class=\"keyword\">while</span> (content != <span class=\"keyword\">null</span>) &#123; </span><br><span class=\"line\">           sb.append(content); </span><br><span class=\"line\">           content = bufR.readLine(); </span><br><span class=\"line\">        &#125; </span><br><span class=\"line\">        bsfEngine.exec(<span class=\"string\">\"javascript\"</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, sb.toString()); </span><br><span class=\"line\">       <span class=\"comment\">//执行脚本中的某个方法 </span></span><br><span class=\"line\">        Object o = bsfEngine.eval(<span class=\"string\">\"javascript\"</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"string\">\"test()\"</span>);  </span><br><span class=\"line\">        Map map = (HashMap) o; </span><br><span class=\"line\">        System.out.println(map.get(<span class=\"string\">\"age\"</span>)); </span><br><span class=\"line\">        System.out.println(demo.getName()); </span><br><span class=\"line\">    &#125; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>输出结果<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hello world </span><br><span class=\"line\">10</span><br><span class=\"line\">张三</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"脚本\"><a href=\"#脚本\" class=\"headerlink\" title=\"脚本\"></a>脚本</h3><p><strong><em> bsf_001.js</em></strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">importPackage(java.util); </span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">test</span>(<span class=\"params\"></span>)</span>&#123; </span><br><span class=\"line\">    reflection.setName(<span class=\"string\">\"张三\"</span>); </span><br><span class=\"line\">    out.println(<span class=\"string\">\"hello world\"</span>); </span><br><span class=\"line\">    <span class=\"keyword\">var</span> map = <span class=\"keyword\">new</span> HashMap(); </span><br><span class=\"line\">    map.put(<span class=\"string\">\"name\"</span>,<span class=\"string\">\"张三\"</span>); </span><br><span class=\"line\">    map.put(<span class=\"string\">\"age\"</span>,<span class=\"string\">\"10\"</span>); </span><br><span class=\"line\">    <span class=\"keyword\">return</span> map; </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em> bsf_002.js</em></strong><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">importClass(Packages.cn.com.bsf.test.AppDemo); </span><br><span class=\"line\"><span class=\"keyword\">var</span> appDemo = <span class=\"keyword\">new</span> AppDemo(); </span><br><span class=\"line\"><span class=\"keyword\">var</span> str=appDemo.query(<span class=\"string\">\"select * from bsf\"</span>); </span><br><span class=\"line\">out.println(str);</span><br></pre></td></tr></table></figure></p>\n<p>bsf_002.js与bsf_001.js的不同的是脚本代码没有包含在function中所以bsf执行稍微会有所不同<br>Object o = bsfEngine.eval(“javascript”, 0, 0, “bsf_002.js的脚本内容”);</p>\n<p>不知道大家注意到了importClass、importPackage没有，下面我就解释下他们的用处</p>\n<p><strong><em>importClass 是在我们的脚本中引入我们的javaBean如果是jdk中自带的javaBea不需要packages关键字反之需要例如</em></strong><br><strong><em>importClass(Packages.cn.com.bsf.test.BeanDemo);</em></strong><br><strong><em>importClass(java.util.HashMap);</em></strong><br><strong><em>importPackage是在我们的脚本中引入包 引入包后就可以使用这个包中所有javaBean其语法如下他会importClass类似自定义的java包需要加Packages为前缀。</em></strong><br><strong><em>importPackage(Packages.cn.com.bsf.test）;</em></strong><br><strong><em>importPackage(java.util);</em></strong></p>"},{"title":"北京交通运输职业学院网络财务管理系统项目技术经验总结","date":"2012-12-03T13:28:01.000Z","comments":1,"toc":true,"_content":"\n为期五个多月项目编码、测试开发到今天可以说终于告一段落了。回顾这段时间内要忠心的感谢我的领导对我的放心和支持，有了他们才使得我在这个项目中学到的更多成长的更快。 \n\n只有多总结才会成长的更快，废话少说下面还是来好好总结下这个项目中技术方面的经验心得吧。 \n\n这个项目使用的是我老大从ehr中把ehr的员工管理、用户管理、组织管理、权限管理、系统管理、角色管理、岗位管理组合成的一个平台，其实准确的讲应该还是一个SSM(struts2 spring mybatis)框架，他拥有平台的雏形，却没有平台的强大。不过他也已经为快速开发提供了很好的基础了，只有在这样的开发环境中对我来说才会学到的更多。下面就要来说说这个麻雀虽小但五脏俱全的平台了，工欲善其事必先利其器，就从开发环境说起。 \n<!--more-->\n\n## 基本开发环境\n### JDK版本\n***JDK1.5***\n***JDK1.6***\n不过JDK1.5好像不支持@Override注解和对读取硬盘容量没做提供相关的API而在这个系统中由于使用了@Override注解和对读取硬盘有相应的需求所以最好使用JDK1.6。\n\n### 中间件服务器\n***JBoss4.0.2***\n①：JBoss与Tomcat的关系：说到服务器由于以前接触Tomcat比较多对JBoss了解甚少，由于服务对程序员的要求并不高致使到现在虽然和他打了快一年的交道了但现在还是不太了解直到现在也没有拿他和Tomcat进行比较过。还好老大给我这个机会要我好好总结，由于自己没有心得只能从网上找找了，我总结了下网上的说法大概可以用这么个字概括“基于Tomcat为内核、集多功能于一身，性能卓越”。说到性能卓越对于我来说似乎是有点对牛弹琴了，在平时开发中根本感觉不到这点关注更多的还是程序本身，以及了解服务器基本功能和目录结构其每个目录下的作用。\n②：开发中可能被修改的JBoss配置文件\n***控制台打印sql(服务器目录下server/default/conf/log4j.xml) ***\n```xml\n<appender name=\"IBatis\" class=\"org.apache.log4j.ConsoleAppender\"> <layout class=\"org.apache.log4j.PatternLayout\">  \n     <param name=\"ConversionPattern\" value=\"%-4r [%t] %-5p %c %x - %m%n\" />  \n   </layout> \n    <filter class=\"org.apache.log4j.varia.LevelRangeFilter\">  \n         <param name=\"LevelMin\" value=\"DEBUG\" />  \n        <param name=\"LevelMax\" value=\"DEBUG\" /> \n     </filter> \n </appender>  \n<logger name=\"java.sql\" additivity=\"true\"> \n  <level value=\"DEBUG\" />  \n  <appender-ref ref=\"IBatis\" /> \n</logger>\n```\n***日志记录同上配置文件配置 ***\n```xml\n<appender name=\"BMS\" class=\"org.jboss.logging.appender.RollingFileAppender\"> class值据我了解有四种\"RollingFileAppender\"是超出指定文件大小就重新生成一个新的log文件 其余四种网上都有详细说明我就不一一总结了 \n    <errorHandler class=\"org.jboss.logging.util.OnlyOnceErrorHandler\"/> \n     <param name=\"File\" value=\"${jboss.server.home.dir}/log/bms/bms.log\"/> 这是日志文件保存的路径以及文件名 <param name=\"Append\" value=\"true\"/> 是否追加  \n    <param name=\"MaxFileSize\" value=\"500kB\"/> 指定log文件大小  \n    <param name=\"MaxBackupIndex\" value=\"10\"/> 最大备份数量超过就覆盖原来的 \n    <layout class=\"org.apache.log4j.PatternLayout\"> 输出格式 表达式搞不懂  \n       <!-- The default pattern: Date Priority [Category] Message\\n --> \n         <param name=\"ConversionPattern\" value=\"%d{ABSOLUTE} %-5p [%c{1}] %m%n\"/> </layout>  \n   </appender>  \n<category name=\"com.bopasoft\">  \n    <appender-ref ref=\"BMS\"/> </category> \n <root>  \n  <appender-ref ref=\"CONSOLE\"/> \n   <appender-ref ref=\"FILE\"/>  \n    <appender-ref ref=\"BMS\"/> \n </root>\n```\n最后一个关注的比较多的是URL的编码这个是在服务器目录下的server/default/deploy/jbossweb-tomcat55.sar/server.xml中修改\n③：数据库\n***oracle10g ***\n④：IDE工具\nEclipse 用Eclipse开发最纠结的问题就是调试，但学会了配置调试就不是问题了在这就不详细些了\n⑤：ANT\n构建项目部署 过去对ANT了解也很少现在也只能看懂每条命令的含义要自己写还是不太会终于把开发环境说完了，其实重点还是功能的实现，采用什么技术实现。\n\n## 前台\n\n### 修饰框架sitemesh\n\n他是一个网页布局和修饰的框架，利用它可以将网页的内容和页面结构分离，以达到页面结构共享的目的。它能帮助我们再由大量页面工程的项目中创建一致的页面布局和外观，如导航条。它不仅能处理动态(Jsp、Asp)的内容还能处理静态(Html)的内容。他就像include那样将一个文件嵌入到另一个文件中。sitemesh有两个标签库分别为sitemesh-decorator.tld、sitemesh-page.tld \n\n&lt;decorator:head /&gt;插 入原始页面(被包装页面)的head标签中的内容(不包括head标签本身)。\n&lt;decorator:body /&gt;插入原始页面(被包装页面)的body标签中的内容。  \n&lt;decorator:title default=\"...\" /&gt;在标签处插入原始页面(被包装页面)的原有的标签的属性中的内容，还可以添加一个缺省值。 \n\n只需要将被修饰的页面路径添加到decorators.xml中就会别相应的模板修饰。而谁来读decorators.xml他呢什么时候读？根据他的作用不难知道肯定是一个过滤器不错他就是一个过滤器是过滤器就得在web.xml中配置了。注意的是要将decorators.xml放在WEB-INF目录下。sitemesh固然是好但还是不够太灵活，但只能修饰有想同和相似的页面细节，而且请求每个页面都需要进行重新生成后果就是牺牲性能了。\n\n### 标签\n在前台页面还有要我耳目一新的是自定义的各种标签，过去对标签的定义使用定义一直是一知半解，觉得他是一个很神奇的技术。通过了这次开发大量标签的使用，并且亲自实现了二个标签。感觉其实原理也不过如此，不过对他的定义还没到信手拈来，出神入化的境界每次定义都需要参考文档。 \n\n### JS\n说到js可以说是有了一定的提高，以前总是说js是基于对象的脚本语言，也感受到了对象的体现。通过这次要我更加深刻到的体会到了他面向对象的思想，可谓是有所小突破哈哈。js面向对象编程在复杂的逻辑也游刃而解。还有它也能实现公用属性私用属性静态方法，非静态方法。不禁要我感叹它不是基于对象完全是面向对象啊！有了上面的基础定义各种选择组件也不成问题了。 \n\n## 后台\n### 持久层框架mybatis\n第一次使用mybatis感觉更多的是还是数mybatis.xml文件的编写，普通的还是很好写的就是那种一对一、一对多、一对一一对多多条件的，记得当时第一次写还是花了我不少时间主要是对标签中的各种属性不了就。现在回过头在看其实他们的标签那样定义还是很有道理的，写起来也没那么吃力了。 \n### BSF\nBSF也是第一使用，不过我在这个项目中用到他的地方也很少，只要在那个活动模板中公式验证的时候用到。它的功能确实很强大能在后台执行javascript、vbscript等代码。对各种验证、条件判断做了很好的支持。可惜的是我并不太了解它。 \n\n后台用到的新技术应该只有这么多了，最后应该就是编码规范和设计思想了。其实好的设计思想是来自于技术，只有懂的技术多了才会有好的设计，谈设计思想似乎还有一段的距离。还有的就是体会更深的是文件名、包名、类名、变量名、方法名的命的规范重要性，好了总结就写到这了。","source":"_posts/财务管理系统项目技术经验总结.md","raw":"---\ntitle: 北京交通运输职业学院网络财务管理系统项目技术经验总结\ndate: 2012-12-03 21:28:01\ncomments: true\ncategories: 心得体会\ntoc: true \n---\n\n为期五个多月项目编码、测试开发到今天可以说终于告一段落了。回顾这段时间内要忠心的感谢我的领导对我的放心和支持，有了他们才使得我在这个项目中学到的更多成长的更快。 \n\n只有多总结才会成长的更快，废话少说下面还是来好好总结下这个项目中技术方面的经验心得吧。 \n\n这个项目使用的是我老大从ehr中把ehr的员工管理、用户管理、组织管理、权限管理、系统管理、角色管理、岗位管理组合成的一个平台，其实准确的讲应该还是一个SSM(struts2 spring mybatis)框架，他拥有平台的雏形，却没有平台的强大。不过他也已经为快速开发提供了很好的基础了，只有在这样的开发环境中对我来说才会学到的更多。下面就要来说说这个麻雀虽小但五脏俱全的平台了，工欲善其事必先利其器，就从开发环境说起。 \n<!--more-->\n\n## 基本开发环境\n### JDK版本\n***JDK1.5***\n***JDK1.6***\n不过JDK1.5好像不支持@Override注解和对读取硬盘容量没做提供相关的API而在这个系统中由于使用了@Override注解和对读取硬盘有相应的需求所以最好使用JDK1.6。\n\n### 中间件服务器\n***JBoss4.0.2***\n①：JBoss与Tomcat的关系：说到服务器由于以前接触Tomcat比较多对JBoss了解甚少，由于服务对程序员的要求并不高致使到现在虽然和他打了快一年的交道了但现在还是不太了解直到现在也没有拿他和Tomcat进行比较过。还好老大给我这个机会要我好好总结，由于自己没有心得只能从网上找找了，我总结了下网上的说法大概可以用这么个字概括“基于Tomcat为内核、集多功能于一身，性能卓越”。说到性能卓越对于我来说似乎是有点对牛弹琴了，在平时开发中根本感觉不到这点关注更多的还是程序本身，以及了解服务器基本功能和目录结构其每个目录下的作用。\n②：开发中可能被修改的JBoss配置文件\n***控制台打印sql(服务器目录下server/default/conf/log4j.xml) ***\n```xml\n<appender name=\"IBatis\" class=\"org.apache.log4j.ConsoleAppender\"> <layout class=\"org.apache.log4j.PatternLayout\">  \n     <param name=\"ConversionPattern\" value=\"%-4r [%t] %-5p %c %x - %m%n\" />  \n   </layout> \n    <filter class=\"org.apache.log4j.varia.LevelRangeFilter\">  \n         <param name=\"LevelMin\" value=\"DEBUG\" />  \n        <param name=\"LevelMax\" value=\"DEBUG\" /> \n     </filter> \n </appender>  \n<logger name=\"java.sql\" additivity=\"true\"> \n  <level value=\"DEBUG\" />  \n  <appender-ref ref=\"IBatis\" /> \n</logger>\n```\n***日志记录同上配置文件配置 ***\n```xml\n<appender name=\"BMS\" class=\"org.jboss.logging.appender.RollingFileAppender\"> class值据我了解有四种\"RollingFileAppender\"是超出指定文件大小就重新生成一个新的log文件 其余四种网上都有详细说明我就不一一总结了 \n    <errorHandler class=\"org.jboss.logging.util.OnlyOnceErrorHandler\"/> \n     <param name=\"File\" value=\"${jboss.server.home.dir}/log/bms/bms.log\"/> 这是日志文件保存的路径以及文件名 <param name=\"Append\" value=\"true\"/> 是否追加  \n    <param name=\"MaxFileSize\" value=\"500kB\"/> 指定log文件大小  \n    <param name=\"MaxBackupIndex\" value=\"10\"/> 最大备份数量超过就覆盖原来的 \n    <layout class=\"org.apache.log4j.PatternLayout\"> 输出格式 表达式搞不懂  \n       <!-- The default pattern: Date Priority [Category] Message\\n --> \n         <param name=\"ConversionPattern\" value=\"%d{ABSOLUTE} %-5p [%c{1}] %m%n\"/> </layout>  \n   </appender>  \n<category name=\"com.bopasoft\">  \n    <appender-ref ref=\"BMS\"/> </category> \n <root>  \n  <appender-ref ref=\"CONSOLE\"/> \n   <appender-ref ref=\"FILE\"/>  \n    <appender-ref ref=\"BMS\"/> \n </root>\n```\n最后一个关注的比较多的是URL的编码这个是在服务器目录下的server/default/deploy/jbossweb-tomcat55.sar/server.xml中修改\n③：数据库\n***oracle10g ***\n④：IDE工具\nEclipse 用Eclipse开发最纠结的问题就是调试，但学会了配置调试就不是问题了在这就不详细些了\n⑤：ANT\n构建项目部署 过去对ANT了解也很少现在也只能看懂每条命令的含义要自己写还是不太会终于把开发环境说完了，其实重点还是功能的实现，采用什么技术实现。\n\n## 前台\n\n### 修饰框架sitemesh\n\n他是一个网页布局和修饰的框架，利用它可以将网页的内容和页面结构分离，以达到页面结构共享的目的。它能帮助我们再由大量页面工程的项目中创建一致的页面布局和外观，如导航条。它不仅能处理动态(Jsp、Asp)的内容还能处理静态(Html)的内容。他就像include那样将一个文件嵌入到另一个文件中。sitemesh有两个标签库分别为sitemesh-decorator.tld、sitemesh-page.tld \n\n&lt;decorator:head /&gt;插 入原始页面(被包装页面)的head标签中的内容(不包括head标签本身)。\n&lt;decorator:body /&gt;插入原始页面(被包装页面)的body标签中的内容。  \n&lt;decorator:title default=\"...\" /&gt;在标签处插入原始页面(被包装页面)的原有的标签的属性中的内容，还可以添加一个缺省值。 \n\n只需要将被修饰的页面路径添加到decorators.xml中就会别相应的模板修饰。而谁来读decorators.xml他呢什么时候读？根据他的作用不难知道肯定是一个过滤器不错他就是一个过滤器是过滤器就得在web.xml中配置了。注意的是要将decorators.xml放在WEB-INF目录下。sitemesh固然是好但还是不够太灵活，但只能修饰有想同和相似的页面细节，而且请求每个页面都需要进行重新生成后果就是牺牲性能了。\n\n### 标签\n在前台页面还有要我耳目一新的是自定义的各种标签，过去对标签的定义使用定义一直是一知半解，觉得他是一个很神奇的技术。通过了这次开发大量标签的使用，并且亲自实现了二个标签。感觉其实原理也不过如此，不过对他的定义还没到信手拈来，出神入化的境界每次定义都需要参考文档。 \n\n### JS\n说到js可以说是有了一定的提高，以前总是说js是基于对象的脚本语言，也感受到了对象的体现。通过这次要我更加深刻到的体会到了他面向对象的思想，可谓是有所小突破哈哈。js面向对象编程在复杂的逻辑也游刃而解。还有它也能实现公用属性私用属性静态方法，非静态方法。不禁要我感叹它不是基于对象完全是面向对象啊！有了上面的基础定义各种选择组件也不成问题了。 \n\n## 后台\n### 持久层框架mybatis\n第一次使用mybatis感觉更多的是还是数mybatis.xml文件的编写，普通的还是很好写的就是那种一对一、一对多、一对一一对多多条件的，记得当时第一次写还是花了我不少时间主要是对标签中的各种属性不了就。现在回过头在看其实他们的标签那样定义还是很有道理的，写起来也没那么吃力了。 \n### BSF\nBSF也是第一使用，不过我在这个项目中用到他的地方也很少，只要在那个活动模板中公式验证的时候用到。它的功能确实很强大能在后台执行javascript、vbscript等代码。对各种验证、条件判断做了很好的支持。可惜的是我并不太了解它。 \n\n后台用到的新技术应该只有这么多了，最后应该就是编码规范和设计思想了。其实好的设计思想是来自于技术，只有懂的技术多了才会有好的设计，谈设计思想似乎还有一段的距离。还有的就是体会更深的是文件名、包名、类名、变量名、方法名的命的规范重要性，好了总结就写到这了。","slug":"财务管理系统项目技术经验总结","published":1,"updated":"2016-05-13T14:26:54.420Z","layout":"post","photos":[],"link":"","_id":"cio5uhgn30005o0ybgzqolwrk","content":"<p>为期五个多月项目编码、测试开发到今天可以说终于告一段落了。回顾这段时间内要忠心的感谢我的领导对我的放心和支持，有了他们才使得我在这个项目中学到的更多成长的更快。 </p>\n<p>只有多总结才会成长的更快，废话少说下面还是来好好总结下这个项目中技术方面的经验心得吧。 </p>\n<p>这个项目使用的是我老大从ehr中把ehr的员工管理、用户管理、组织管理、权限管理、系统管理、角色管理、岗位管理组合成的一个平台，其实准确的讲应该还是一个SSM(struts2 spring mybatis)框架，他拥有平台的雏形，却没有平台的强大。不过他也已经为快速开发提供了很好的基础了，只有在这样的开发环境中对我来说才会学到的更多。下面就要来说说这个麻雀虽小但五脏俱全的平台了，工欲善其事必先利其器，就从开发环境说起。<br><a id=\"more\"></a></p>\n<h2 id=\"基本开发环境\"><a href=\"#基本开发环境\" class=\"headerlink\" title=\"基本开发环境\"></a>基本开发环境</h2><h3 id=\"JDK版本\"><a href=\"#JDK版本\" class=\"headerlink\" title=\"JDK版本\"></a>JDK版本</h3><p><strong><em>JDK1.5</em></strong><br><strong><em>JDK1.6</em></strong><br>不过JDK1.5好像不支持@Override注解和对读取硬盘容量没做提供相关的API而在这个系统中由于使用了@Override注解和对读取硬盘有相应的需求所以最好使用JDK1.6。</p>\n<h3 id=\"中间件服务器\"><a href=\"#中间件服务器\" class=\"headerlink\" title=\"中间件服务器\"></a>中间件服务器</h3><p><strong><em>JBoss4.0.2</em></strong><br>①：JBoss与Tomcat的关系：说到服务器由于以前接触Tomcat比较多对JBoss了解甚少，由于服务对程序员的要求并不高致使到现在虽然和他打了快一年的交道了但现在还是不太了解直到现在也没有拿他和Tomcat进行比较过。还好老大给我这个机会要我好好总结，由于自己没有心得只能从网上找找了，我总结了下网上的说法大概可以用这么个字概括“基于Tomcat为内核、集多功能于一身，性能卓越”。说到性能卓越对于我来说似乎是有点对牛弹琴了，在平时开发中根本感觉不到这点关注更多的还是程序本身，以及了解服务器基本功能和目录结构其每个目录下的作用。<br>②：开发中可能被修改的JBoss配置文件<br><strong><em>控制台打印sql(服务器目录下server/default/conf/log4j.xml) </em></strong><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">name</span>=<span class=\"string\">\"IBatis\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.apache.log4j.ConsoleAppender\"</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">layout</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.apache.log4j.PatternLayout\"</span>&gt;</span>  </span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"ConversionPattern\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"%-4r [%t] %-5p %c %x - %m%n\"</span> /&gt;</span>  </span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">layout</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.apache.log4j.varia.LevelRangeFilter\"</span>&gt;</span>  </span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"LevelMin\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"DEBUG\"</span> /&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"LevelMax\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"DEBUG\"</span> /&gt;</span> </span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">logger</span> <span class=\"attr\">name</span>=<span class=\"string\">\"java.sql\"</span> <span class=\"attr\">additivity</span>=<span class=\"string\">\"true\"</span>&gt;</span> </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">level</span> <span class=\"attr\">value</span>=<span class=\"string\">\"DEBUG\"</span> /&gt;</span>  </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"IBatis\"</span> /&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">logger</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><strong><em>日志记录同上配置文件配置 </em></strong><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">name</span>=<span class=\"string\">\"BMS\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.jboss.logging.appender.RollingFileAppender\"</span>&gt;</span> class值据我了解有四种\"RollingFileAppender\"是超出指定文件大小就重新生成一个新的log文件 其余四种网上都有详细说明我就不一一总结了 </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">errorHandler</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.jboss.logging.util.OnlyOnceErrorHandler\"</span>/&gt;</span> </span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"File\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jboss.server.home.dir&#125;/log/bms/bms.log\"</span>/&gt;</span> 这是日志文件保存的路径以及文件名 <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Append\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span>/&gt;</span> 是否追加  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"MaxFileSize\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"500kB\"</span>/&gt;</span> 指定log文件大小  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"MaxBackupIndex\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"10\"</span>/&gt;</span> 最大备份数量超过就覆盖原来的 </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">layout</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.apache.log4j.PatternLayout\"</span>&gt;</span> 输出格式 表达式搞不懂  </span><br><span class=\"line\">       <span class=\"comment\">&lt;!-- The default pattern: Date Priority [Category] Message\\n --&gt;</span> </span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"ConversionPattern\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"%d&#123;ABSOLUTE&#125; %-5p [%c&#123;1&#125;] %m%n\"</span>/&gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">layout</span>&gt;</span>  </span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">name</span>=<span class=\"string\">\"com.bopasoft\"</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"BMS\"</span>/&gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">category</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">root</span>&gt;</span>  </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"CONSOLE\"</span>/&gt;</span> </span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"FILE\"</span>/&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"BMS\"</span>/&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">root</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>最后一个关注的比较多的是URL的编码这个是在服务器目录下的server/default/deploy/jbossweb-tomcat55.sar/server.xml中修改<br>③：数据库<br><strong><em>oracle10g </em></strong><br>④：IDE工具<br>Eclipse 用Eclipse开发最纠结的问题就是调试，但学会了配置调试就不是问题了在这就不详细些了<br>⑤：ANT<br>构建项目部署 过去对ANT了解也很少现在也只能看懂每条命令的含义要自己写还是不太会终于把开发环境说完了，其实重点还是功能的实现，采用什么技术实现。</p>\n<h2 id=\"前台\"><a href=\"#前台\" class=\"headerlink\" title=\"前台\"></a>前台</h2><h3 id=\"修饰框架sitemesh\"><a href=\"#修饰框架sitemesh\" class=\"headerlink\" title=\"修饰框架sitemesh\"></a>修饰框架sitemesh</h3><p>他是一个网页布局和修饰的框架，利用它可以将网页的内容和页面结构分离，以达到页面结构共享的目的。它能帮助我们再由大量页面工程的项目中创建一致的页面布局和外观，如导航条。它不仅能处理动态(Jsp、Asp)的内容还能处理静态(Html)的内容。他就像include那样将一个文件嵌入到另一个文件中。sitemesh有两个标签库分别为sitemesh-decorator.tld、sitemesh-page.tld </p>\n<p>&lt;decorator:head /&gt;插 入原始页面(被包装页面)的head标签中的内容(不包括head标签本身)。<br>&lt;decorator:body /&gt;插入原始页面(被包装页面)的body标签中的内容。<br>&lt;decorator:title default=”…” /&gt;在标签处插入原始页面(被包装页面)的原有的标签的属性中的内容，还可以添加一个缺省值。 </p>\n<p>只需要将被修饰的页面路径添加到decorators.xml中就会别相应的模板修饰。而谁来读decorators.xml他呢什么时候读？根据他的作用不难知道肯定是一个过滤器不错他就是一个过滤器是过滤器就得在web.xml中配置了。注意的是要将decorators.xml放在WEB-INF目录下。sitemesh固然是好但还是不够太灵活，但只能修饰有想同和相似的页面细节，而且请求每个页面都需要进行重新生成后果就是牺牲性能了。</p>\n<h3 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h3><p>在前台页面还有要我耳目一新的是自定义的各种标签，过去对标签的定义使用定义一直是一知半解，觉得他是一个很神奇的技术。通过了这次开发大量标签的使用，并且亲自实现了二个标签。感觉其实原理也不过如此，不过对他的定义还没到信手拈来，出神入化的境界每次定义都需要参考文档。 </p>\n<h3 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h3><p>说到js可以说是有了一定的提高，以前总是说js是基于对象的脚本语言，也感受到了对象的体现。通过这次要我更加深刻到的体会到了他面向对象的思想，可谓是有所小突破哈哈。js面向对象编程在复杂的逻辑也游刃而解。还有它也能实现公用属性私用属性静态方法，非静态方法。不禁要我感叹它不是基于对象完全是面向对象啊！有了上面的基础定义各种选择组件也不成问题了。 </p>\n<h2 id=\"后台\"><a href=\"#后台\" class=\"headerlink\" title=\"后台\"></a>后台</h2><h3 id=\"持久层框架mybatis\"><a href=\"#持久层框架mybatis\" class=\"headerlink\" title=\"持久层框架mybatis\"></a>持久层框架mybatis</h3><p>第一次使用mybatis感觉更多的是还是数mybatis.xml文件的编写，普通的还是很好写的就是那种一对一、一对多、一对一一对多多条件的，记得当时第一次写还是花了我不少时间主要是对标签中的各种属性不了就。现在回过头在看其实他们的标签那样定义还是很有道理的，写起来也没那么吃力了。 </p>\n<h3 id=\"BSF\"><a href=\"#BSF\" class=\"headerlink\" title=\"BSF\"></a>BSF</h3><p>BSF也是第一使用，不过我在这个项目中用到他的地方也很少，只要在那个活动模板中公式验证的时候用到。它的功能确实很强大能在后台执行javascript、vbscript等代码。对各种验证、条件判断做了很好的支持。可惜的是我并不太了解它。 </p>\n<p>后台用到的新技术应该只有这么多了，最后应该就是编码规范和设计思想了。其实好的设计思想是来自于技术，只有懂的技术多了才会有好的设计，谈设计思想似乎还有一段的距离。还有的就是体会更深的是文件名、包名、类名、变量名、方法名的命的规范重要性，好了总结就写到这了。</p>\n","excerpt":"<p>为期五个多月项目编码、测试开发到今天可以说终于告一段落了。回顾这段时间内要忠心的感谢我的领导对我的放心和支持，有了他们才使得我在这个项目中学到的更多成长的更快。 </p>\n<p>只有多总结才会成长的更快，废话少说下面还是来好好总结下这个项目中技术方面的经验心得吧。 </p>\n<p>这个项目使用的是我老大从ehr中把ehr的员工管理、用户管理、组织管理、权限管理、系统管理、角色管理、岗位管理组合成的一个平台，其实准确的讲应该还是一个SSM(struts2 spring mybatis)框架，他拥有平台的雏形，却没有平台的强大。不过他也已经为快速开发提供了很好的基础了，只有在这样的开发环境中对我来说才会学到的更多。下面就要来说说这个麻雀虽小但五脏俱全的平台了，工欲善其事必先利其器，就从开发环境说起。<br>","more":"</p>\n<h2 id=\"基本开发环境\"><a href=\"#基本开发环境\" class=\"headerlink\" title=\"基本开发环境\"></a>基本开发环境</h2><h3 id=\"JDK版本\"><a href=\"#JDK版本\" class=\"headerlink\" title=\"JDK版本\"></a>JDK版本</h3><p><strong><em>JDK1.5</em></strong><br><strong><em>JDK1.6</em></strong><br>不过JDK1.5好像不支持@Override注解和对读取硬盘容量没做提供相关的API而在这个系统中由于使用了@Override注解和对读取硬盘有相应的需求所以最好使用JDK1.6。</p>\n<h3 id=\"中间件服务器\"><a href=\"#中间件服务器\" class=\"headerlink\" title=\"中间件服务器\"></a>中间件服务器</h3><p><strong><em>JBoss4.0.2</em></strong><br>①：JBoss与Tomcat的关系：说到服务器由于以前接触Tomcat比较多对JBoss了解甚少，由于服务对程序员的要求并不高致使到现在虽然和他打了快一年的交道了但现在还是不太了解直到现在也没有拿他和Tomcat进行比较过。还好老大给我这个机会要我好好总结，由于自己没有心得只能从网上找找了，我总结了下网上的说法大概可以用这么个字概括“基于Tomcat为内核、集多功能于一身，性能卓越”。说到性能卓越对于我来说似乎是有点对牛弹琴了，在平时开发中根本感觉不到这点关注更多的还是程序本身，以及了解服务器基本功能和目录结构其每个目录下的作用。<br>②：开发中可能被修改的JBoss配置文件<br><strong><em>控制台打印sql(服务器目录下server/default/conf/log4j.xml) </em></strong><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">name</span>=<span class=\"string\">\"IBatis\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.apache.log4j.ConsoleAppender\"</span>&gt;</span> <span class=\"tag\">&lt;<span class=\"name\">layout</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.apache.log4j.PatternLayout\"</span>&gt;</span>  </span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"ConversionPattern\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"%-4r [%t] %-5p %c %x - %m%n\"</span> /&gt;</span>  </span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">layout</span>&gt;</span> </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">filter</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.apache.log4j.varia.LevelRangeFilter\"</span>&gt;</span>  </span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"LevelMin\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"DEBUG\"</span> /&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"LevelMax\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"DEBUG\"</span> /&gt;</span> </span><br><span class=\"line\">     <span class=\"tag\">&lt;/<span class=\"name\">filter</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">logger</span> <span class=\"attr\">name</span>=<span class=\"string\">\"java.sql\"</span> <span class=\"attr\">additivity</span>=<span class=\"string\">\"true\"</span>&gt;</span> </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">level</span> <span class=\"attr\">value</span>=<span class=\"string\">\"DEBUG\"</span> /&gt;</span>  </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"IBatis\"</span> /&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">logger</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p><strong><em>日志记录同上配置文件配置 </em></strong><br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">appender</span> <span class=\"attr\">name</span>=<span class=\"string\">\"BMS\"</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.jboss.logging.appender.RollingFileAppender\"</span>&gt;</span> class值据我了解有四种\"RollingFileAppender\"是超出指定文件大小就重新生成一个新的log文件 其余四种网上都有详细说明我就不一一总结了 </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">errorHandler</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.jboss.logging.util.OnlyOnceErrorHandler\"</span>/&gt;</span> </span><br><span class=\"line\">     <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"File\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;jboss.server.home.dir&#125;/log/bms/bms.log\"</span>/&gt;</span> 这是日志文件保存的路径以及文件名 <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Append\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"true\"</span>/&gt;</span> 是否追加  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"MaxFileSize\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"500kB\"</span>/&gt;</span> 指定log文件大小  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"MaxBackupIndex\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"10\"</span>/&gt;</span> 最大备份数量超过就覆盖原来的 </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">layout</span> <span class=\"attr\">class</span>=<span class=\"string\">\"org.apache.log4j.PatternLayout\"</span>&gt;</span> 输出格式 表达式搞不懂  </span><br><span class=\"line\">       <span class=\"comment\">&lt;!-- The default pattern: Date Priority [Category] Message\\n --&gt;</span> </span><br><span class=\"line\">         <span class=\"tag\">&lt;<span class=\"name\">param</span> <span class=\"attr\">name</span>=<span class=\"string\">\"ConversionPattern\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"%d&#123;ABSOLUTE&#125; %-5p [%c&#123;1&#125;] %m%n\"</span>/&gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">layout</span>&gt;</span>  </span><br><span class=\"line\">   <span class=\"tag\">&lt;/<span class=\"name\">appender</span>&gt;</span>  </span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">category</span> <span class=\"attr\">name</span>=<span class=\"string\">\"com.bopasoft\"</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"BMS\"</span>/&gt;</span> <span class=\"tag\">&lt;/<span class=\"name\">category</span>&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">root</span>&gt;</span>  </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"CONSOLE\"</span>/&gt;</span> </span><br><span class=\"line\">   <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"FILE\"</span>/&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">appender-ref</span> <span class=\"attr\">ref</span>=<span class=\"string\">\"BMS\"</span>/&gt;</span> </span><br><span class=\"line\"> <span class=\"tag\">&lt;/<span class=\"name\">root</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<p>最后一个关注的比较多的是URL的编码这个是在服务器目录下的server/default/deploy/jbossweb-tomcat55.sar/server.xml中修改<br>③：数据库<br><strong><em>oracle10g </em></strong><br>④：IDE工具<br>Eclipse 用Eclipse开发最纠结的问题就是调试，但学会了配置调试就不是问题了在这就不详细些了<br>⑤：ANT<br>构建项目部署 过去对ANT了解也很少现在也只能看懂每条命令的含义要自己写还是不太会终于把开发环境说完了，其实重点还是功能的实现，采用什么技术实现。</p>\n<h2 id=\"前台\"><a href=\"#前台\" class=\"headerlink\" title=\"前台\"></a>前台</h2><h3 id=\"修饰框架sitemesh\"><a href=\"#修饰框架sitemesh\" class=\"headerlink\" title=\"修饰框架sitemesh\"></a>修饰框架sitemesh</h3><p>他是一个网页布局和修饰的框架，利用它可以将网页的内容和页面结构分离，以达到页面结构共享的目的。它能帮助我们再由大量页面工程的项目中创建一致的页面布局和外观，如导航条。它不仅能处理动态(Jsp、Asp)的内容还能处理静态(Html)的内容。他就像include那样将一个文件嵌入到另一个文件中。sitemesh有两个标签库分别为sitemesh-decorator.tld、sitemesh-page.tld </p>\n<p>&lt;decorator:head /&gt;插 入原始页面(被包装页面)的head标签中的内容(不包括head标签本身)。<br>&lt;decorator:body /&gt;插入原始页面(被包装页面)的body标签中的内容。<br>&lt;decorator:title default=”…” /&gt;在标签处插入原始页面(被包装页面)的原有的标签的属性中的内容，还可以添加一个缺省值。 </p>\n<p>只需要将被修饰的页面路径添加到decorators.xml中就会别相应的模板修饰。而谁来读decorators.xml他呢什么时候读？根据他的作用不难知道肯定是一个过滤器不错他就是一个过滤器是过滤器就得在web.xml中配置了。注意的是要将decorators.xml放在WEB-INF目录下。sitemesh固然是好但还是不够太灵活，但只能修饰有想同和相似的页面细节，而且请求每个页面都需要进行重新生成后果就是牺牲性能了。</p>\n<h3 id=\"标签\"><a href=\"#标签\" class=\"headerlink\" title=\"标签\"></a>标签</h3><p>在前台页面还有要我耳目一新的是自定义的各种标签，过去对标签的定义使用定义一直是一知半解，觉得他是一个很神奇的技术。通过了这次开发大量标签的使用，并且亲自实现了二个标签。感觉其实原理也不过如此，不过对他的定义还没到信手拈来，出神入化的境界每次定义都需要参考文档。 </p>\n<h3 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h3><p>说到js可以说是有了一定的提高，以前总是说js是基于对象的脚本语言，也感受到了对象的体现。通过这次要我更加深刻到的体会到了他面向对象的思想，可谓是有所小突破哈哈。js面向对象编程在复杂的逻辑也游刃而解。还有它也能实现公用属性私用属性静态方法，非静态方法。不禁要我感叹它不是基于对象完全是面向对象啊！有了上面的基础定义各种选择组件也不成问题了。 </p>\n<h2 id=\"后台\"><a href=\"#后台\" class=\"headerlink\" title=\"后台\"></a>后台</h2><h3 id=\"持久层框架mybatis\"><a href=\"#持久层框架mybatis\" class=\"headerlink\" title=\"持久层框架mybatis\"></a>持久层框架mybatis</h3><p>第一次使用mybatis感觉更多的是还是数mybatis.xml文件的编写，普通的还是很好写的就是那种一对一、一对多、一对一一对多多条件的，记得当时第一次写还是花了我不少时间主要是对标签中的各种属性不了就。现在回过头在看其实他们的标签那样定义还是很有道理的，写起来也没那么吃力了。 </p>\n<h3 id=\"BSF\"><a href=\"#BSF\" class=\"headerlink\" title=\"BSF\"></a>BSF</h3><p>BSF也是第一使用，不过我在这个项目中用到他的地方也很少，只要在那个活动模板中公式验证的时候用到。它的功能确实很强大能在后台执行javascript、vbscript等代码。对各种验证、条件判断做了很好的支持。可惜的是我并不太了解它。 </p>\n<p>后台用到的新技术应该只有这么多了，最后应该就是编码规范和设计思想了。其实好的设计思想是来自于技术，只有懂的技术多了才会有好的设计，谈设计思想似乎还有一段的距离。还有的就是体会更深的是文件名、包名、类名、变量名、方法名的命的规范重要性，好了总结就写到这了。</p>"},{"title":"解决问题心得","date":"2015-01-26T13:28:01.000Z","comments":1,"_content":"\n 自从接手公司平台到现在已有一年半年之久，在期间一直以解决客户、平台问题为主，也是我成长最快的一年，经统计大概解决的问题不下五百，其中问题种类多，有难有易。在解决问题上不谦虚的说自有一番心得，特此总结，一来梳理回顾过去是如何发现问题，解决问题的思路，二来以备忘记。\n <!--more-->\n在这一年半主要解决问题大概分为如下几大类，中间件、浏览器兼容、操作系统、java虚拟机、jdk、数据库、IDE、webservice。各个问题各自关联各自影响。其中中间件兼容常见问题一般是包冲突，请求乱码，数据源操作数据库引发数据库死锁（这个问题主要是在使用金蝶中间件过程中遇到的，现象是使用jdbc 直连接正常在这里为什么要使用jdbc直连测试，是为了排除jdbc驱动包的原因。使用数据源对数据库进行操作不提交不释放锁，不过大家可以放心，使用标准的数据源工具是不会有这个问题的，据了解金蝶有对数据源进行了重写）。在中间件中还有就是集群session共享、jsp编译、不能远程访问等等问题。而浏览器兼容问题一般情况都会与javascript相关。能写出更好兼容的javascript代码需要有一定功底。但我们解决问题就不需要了，只需要能有这方面的意识即可。常见与操作系统有关的问题那就是环境变量设置有关了。其他不至于人品那么差了。java虚拟机一般就是内存溢出，线程溢出这个问题一般好解决就是针对不同的异常来进行设置，解决这个问题一般设置完加大参数即可但前提要求主机配置性能得到达一定要求，jdk的话一般也包含了jvm的问题这个一般有版本不同、供应商不同而引发的问题。还有就是版本不同所提供到的支持也不一样。例如在jdk1.5中是对内存有最大的限制，数据库的话那一般就是死锁、连接失败、连接会话不够，大小写、字符编码、用户权限等等问题。\n\n很难说有固定的模式固定的方法能解决平时开发中遇到的所有问题，但思路是不变的，一般思路是，分析问题（一般可以通过看日志调试代码）、采用对比排除法缩小产生问题的原因的范围，找到问题的本质、在解决问题。现象一样但引发问题的原因可能并不一样，问题原因是因环境改变而不同，解决问题的大忌就是慌张，心态很重要。每个问题都有其根本的原因，只有抓住了问题的根本原因才能解决问题。如果硬是解决不了可以通过其他的手段绕过其问题寻求其他方法实现现在的功能。\n\n有些问题看上去很难其实反而很简单，经常有人跟我反映，系统运行一段时间久卡在了很久没有反映只有重启中间件才能正常操作，而且这个问题也不是每次都出现。碰到这样的问题，应该第一反应就是看日志，二看数据库，看看是不是数据库因死锁了导致系统线程停止。根据日志提供的信息分析问题是如何产生的。然后就是不断缩小引起问题的范围最后落实到一段代码一个配置一个参数上面。例如这几天有个同事向我反映在IE6下使用软航在线编辑器修改流程正文（word）在节点1出修改后提交到节点2在节点2中可以看到修改的内容但在节点1出还显示的没有修改之前的。通过我同事对问题的反映我肯定的是这个问题跟软航无关因为如果软航有问题的话那在节点2应该看到的也是没有修改之前的。然后我也让我同事帮我确定了下在节点1上修改保存不提交关闭在打开看看能不能看到修改之后的反映是可以的。结合系统本身那就可以通过查看代码在分析锁定代码，很快就把这个问题解决了。\n","source":"_posts/解决问题心得.md","raw":"---\ntitle: 解决问题心得\ndate: 2015-01-26 21:28:01\ncomments: true\ncategories: 心得体会\n---\n\n 自从接手公司平台到现在已有一年半年之久，在期间一直以解决客户、平台问题为主，也是我成长最快的一年，经统计大概解决的问题不下五百，其中问题种类多，有难有易。在解决问题上不谦虚的说自有一番心得，特此总结，一来梳理回顾过去是如何发现问题，解决问题的思路，二来以备忘记。\n <!--more-->\n在这一年半主要解决问题大概分为如下几大类，中间件、浏览器兼容、操作系统、java虚拟机、jdk、数据库、IDE、webservice。各个问题各自关联各自影响。其中中间件兼容常见问题一般是包冲突，请求乱码，数据源操作数据库引发数据库死锁（这个问题主要是在使用金蝶中间件过程中遇到的，现象是使用jdbc 直连接正常在这里为什么要使用jdbc直连测试，是为了排除jdbc驱动包的原因。使用数据源对数据库进行操作不提交不释放锁，不过大家可以放心，使用标准的数据源工具是不会有这个问题的，据了解金蝶有对数据源进行了重写）。在中间件中还有就是集群session共享、jsp编译、不能远程访问等等问题。而浏览器兼容问题一般情况都会与javascript相关。能写出更好兼容的javascript代码需要有一定功底。但我们解决问题就不需要了，只需要能有这方面的意识即可。常见与操作系统有关的问题那就是环境变量设置有关了。其他不至于人品那么差了。java虚拟机一般就是内存溢出，线程溢出这个问题一般好解决就是针对不同的异常来进行设置，解决这个问题一般设置完加大参数即可但前提要求主机配置性能得到达一定要求，jdk的话一般也包含了jvm的问题这个一般有版本不同、供应商不同而引发的问题。还有就是版本不同所提供到的支持也不一样。例如在jdk1.5中是对内存有最大的限制，数据库的话那一般就是死锁、连接失败、连接会话不够，大小写、字符编码、用户权限等等问题。\n\n很难说有固定的模式固定的方法能解决平时开发中遇到的所有问题，但思路是不变的，一般思路是，分析问题（一般可以通过看日志调试代码）、采用对比排除法缩小产生问题的原因的范围，找到问题的本质、在解决问题。现象一样但引发问题的原因可能并不一样，问题原因是因环境改变而不同，解决问题的大忌就是慌张，心态很重要。每个问题都有其根本的原因，只有抓住了问题的根本原因才能解决问题。如果硬是解决不了可以通过其他的手段绕过其问题寻求其他方法实现现在的功能。\n\n有些问题看上去很难其实反而很简单，经常有人跟我反映，系统运行一段时间久卡在了很久没有反映只有重启中间件才能正常操作，而且这个问题也不是每次都出现。碰到这样的问题，应该第一反应就是看日志，二看数据库，看看是不是数据库因死锁了导致系统线程停止。根据日志提供的信息分析问题是如何产生的。然后就是不断缩小引起问题的范围最后落实到一段代码一个配置一个参数上面。例如这几天有个同事向我反映在IE6下使用软航在线编辑器修改流程正文（word）在节点1出修改后提交到节点2在节点2中可以看到修改的内容但在节点1出还显示的没有修改之前的。通过我同事对问题的反映我肯定的是这个问题跟软航无关因为如果软航有问题的话那在节点2应该看到的也是没有修改之前的。然后我也让我同事帮我确定了下在节点1上修改保存不提交关闭在打开看看能不能看到修改之后的反映是可以的。结合系统本身那就可以通过查看代码在分析锁定代码，很快就把这个问题解决了。\n","slug":"解决问题心得","published":1,"updated":"2016-05-13T14:09:35.520Z","layout":"post","photos":[],"link":"","_id":"cio5uhgn30007o0ybg6dj3y0u","content":"<p> 自从接手公司平台到现在已有一年半年之久，在期间一直以解决客户、平台问题为主，也是我成长最快的一年，经统计大概解决的问题不下五百，其中问题种类多，有难有易。在解决问题上不谦虚的说自有一番心得，特此总结，一来梳理回顾过去是如何发现问题，解决问题的思路，二来以备忘记。<br> <a id=\"more\"></a><br>在这一年半主要解决问题大概分为如下几大类，中间件、浏览器兼容、操作系统、java虚拟机、jdk、数据库、IDE、webservice。各个问题各自关联各自影响。其中中间件兼容常见问题一般是包冲突，请求乱码，数据源操作数据库引发数据库死锁（这个问题主要是在使用金蝶中间件过程中遇到的，现象是使用jdbc 直连接正常在这里为什么要使用jdbc直连测试，是为了排除jdbc驱动包的原因。使用数据源对数据库进行操作不提交不释放锁，不过大家可以放心，使用标准的数据源工具是不会有这个问题的，据了解金蝶有对数据源进行了重写）。在中间件中还有就是集群session共享、jsp编译、不能远程访问等等问题。而浏览器兼容问题一般情况都会与javascript相关。能写出更好兼容的javascript代码需要有一定功底。但我们解决问题就不需要了，只需要能有这方面的意识即可。常见与操作系统有关的问题那就是环境变量设置有关了。其他不至于人品那么差了。java虚拟机一般就是内存溢出，线程溢出这个问题一般好解决就是针对不同的异常来进行设置，解决这个问题一般设置完加大参数即可但前提要求主机配置性能得到达一定要求，jdk的话一般也包含了jvm的问题这个一般有版本不同、供应商不同而引发的问题。还有就是版本不同所提供到的支持也不一样。例如在jdk1.5中是对内存有最大的限制，数据库的话那一般就是死锁、连接失败、连接会话不够，大小写、字符编码、用户权限等等问题。</p>\n<p>很难说有固定的模式固定的方法能解决平时开发中遇到的所有问题，但思路是不变的，一般思路是，分析问题（一般可以通过看日志调试代码）、采用对比排除法缩小产生问题的原因的范围，找到问题的本质、在解决问题。现象一样但引发问题的原因可能并不一样，问题原因是因环境改变而不同，解决问题的大忌就是慌张，心态很重要。每个问题都有其根本的原因，只有抓住了问题的根本原因才能解决问题。如果硬是解决不了可以通过其他的手段绕过其问题寻求其他方法实现现在的功能。</p>\n<p>有些问题看上去很难其实反而很简单，经常有人跟我反映，系统运行一段时间久卡在了很久没有反映只有重启中间件才能正常操作，而且这个问题也不是每次都出现。碰到这样的问题，应该第一反应就是看日志，二看数据库，看看是不是数据库因死锁了导致系统线程停止。根据日志提供的信息分析问题是如何产生的。然后就是不断缩小引起问题的范围最后落实到一段代码一个配置一个参数上面。例如这几天有个同事向我反映在IE6下使用软航在线编辑器修改流程正文（word）在节点1出修改后提交到节点2在节点2中可以看到修改的内容但在节点1出还显示的没有修改之前的。通过我同事对问题的反映我肯定的是这个问题跟软航无关因为如果软航有问题的话那在节点2应该看到的也是没有修改之前的。然后我也让我同事帮我确定了下在节点1上修改保存不提交关闭在打开看看能不能看到修改之后的反映是可以的。结合系统本身那就可以通过查看代码在分析锁定代码，很快就把这个问题解决了。</p>\n","excerpt":"<p> 自从接手公司平台到现在已有一年半年之久，在期间一直以解决客户、平台问题为主，也是我成长最快的一年，经统计大概解决的问题不下五百，其中问题种类多，有难有易。在解决问题上不谦虚的说自有一番心得，特此总结，一来梳理回顾过去是如何发现问题，解决问题的思路，二来以备忘记。<br>","more":"<br>在这一年半主要解决问题大概分为如下几大类，中间件、浏览器兼容、操作系统、java虚拟机、jdk、数据库、IDE、webservice。各个问题各自关联各自影响。其中中间件兼容常见问题一般是包冲突，请求乱码，数据源操作数据库引发数据库死锁（这个问题主要是在使用金蝶中间件过程中遇到的，现象是使用jdbc 直连接正常在这里为什么要使用jdbc直连测试，是为了排除jdbc驱动包的原因。使用数据源对数据库进行操作不提交不释放锁，不过大家可以放心，使用标准的数据源工具是不会有这个问题的，据了解金蝶有对数据源进行了重写）。在中间件中还有就是集群session共享、jsp编译、不能远程访问等等问题。而浏览器兼容问题一般情况都会与javascript相关。能写出更好兼容的javascript代码需要有一定功底。但我们解决问题就不需要了，只需要能有这方面的意识即可。常见与操作系统有关的问题那就是环境变量设置有关了。其他不至于人品那么差了。java虚拟机一般就是内存溢出，线程溢出这个问题一般好解决就是针对不同的异常来进行设置，解决这个问题一般设置完加大参数即可但前提要求主机配置性能得到达一定要求，jdk的话一般也包含了jvm的问题这个一般有版本不同、供应商不同而引发的问题。还有就是版本不同所提供到的支持也不一样。例如在jdk1.5中是对内存有最大的限制，数据库的话那一般就是死锁、连接失败、连接会话不够，大小写、字符编码、用户权限等等问题。</p>\n<p>很难说有固定的模式固定的方法能解决平时开发中遇到的所有问题，但思路是不变的，一般思路是，分析问题（一般可以通过看日志调试代码）、采用对比排除法缩小产生问题的原因的范围，找到问题的本质、在解决问题。现象一样但引发问题的原因可能并不一样，问题原因是因环境改变而不同，解决问题的大忌就是慌张，心态很重要。每个问题都有其根本的原因，只有抓住了问题的根本原因才能解决问题。如果硬是解决不了可以通过其他的手段绕过其问题寻求其他方法实现现在的功能。</p>\n<p>有些问题看上去很难其实反而很简单，经常有人跟我反映，系统运行一段时间久卡在了很久没有反映只有重启中间件才能正常操作，而且这个问题也不是每次都出现。碰到这样的问题，应该第一反应就是看日志，二看数据库，看看是不是数据库因死锁了导致系统线程停止。根据日志提供的信息分析问题是如何产生的。然后就是不断缩小引起问题的范围最后落实到一段代码一个配置一个参数上面。例如这几天有个同事向我反映在IE6下使用软航在线编辑器修改流程正文（word）在节点1出修改后提交到节点2在节点2中可以看到修改的内容但在节点1出还显示的没有修改之前的。通过我同事对问题的反映我肯定的是这个问题跟软航无关因为如果软航有问题的话那在节点2应该看到的也是没有修改之前的。然后我也让我同事帮我确定了下在节点1上修改保存不提交关闭在打开看看能不能看到修改之后的反映是可以的。结合系统本身那就可以通过查看代码在分析锁定代码，很快就把这个问题解决了。</p>"},{"title":"虚拟机联网方式设置","date":"2014-10-07T16:00:00.000Z","comments":1,"toc":true,"_content":"\n## Bridging（桥接）\n\n这种方式是最简单的只需要设置虚拟机如下图就可以进行联网了。包括虚拟机IP、网关、DNS等都不需要进行设置，宿主主机也不需要进行共享\n<!--more-->\n![桥接](6c224f4a20a4462399c138119b22720e0cf3d7be.jpg)\n\n## NAT连接\n第一、需要宿主主机对网络进行共享到VMware Network Adapter VMnet8 网络连接 VMware Network Adapter VMnet8的IP使用默认分配。\n第二、虚拟机设置如下图\n![NAT连接](241f95cad1c8a786c6c1d77d6409c93d71cf50dd.jpg)\n第三、设置虚拟机IP\n例如VMware Network Adapter VMnet8 的IP地址为192.168.137.1 虚拟机的IP就在 192.168.137.2~192.168.137.255之间了\n网关设置为192.168.137.1，子网掩码设置为255.255.255.0，DNS可以设置为192.168.137.1 后者同宿主主机的DNS相同也可以\n通过 ipconfig /all可以获得宿主主机的DNS，如下图。\n![虚拟机IP](d31b0ef41bd5ad6ef751f89982cb39dbb6fd3c1c.jpg)\n\n通过上面的设置就可以上网了\n虚拟机网络设置 在Edit——》Virtual Nework Editor\n![网络设置](203fb80e7bec54e72f564b6aba389b504fc26a0f.jpg)\nVMnet0 默认使用的是桥接方式（以一台主机的方式加入局域网局域网内是互通的） VMent1使用的主机模式（Host-only） VMent8默认使用的是网络地址转换模式（NAT）。\n如果虚拟机使用的是NAT模式如果自动获取IP，IP的范围取决于 DHCP Settings的的设置 这里是 128~254\n![网络设置](e7cd7b899e510fb3728324e3da33c895d1430c2f.jpg) \n默认网关在NAT Setting中设置 如果想要手动设置只要在虚拟机中设置跟下面相同即可\n![网络设置](d8f9d72a6059252d3cf04e70379b033b5ab5b9db.jpg) \n 这样自动获取的IP可能还不能与宿住主机ping同，不用急只要对宿主主机的VMware Network Adapter VMnet8 的IP设置与上图同一网段即可对于虚拟机的网关 即可以设置为 VMware Network Adapter VMnet8的IP也可以设置为Net Setting中的网关。这样设置完以后就可以与主机ping通了但可能依然不能连接公网，我们只要对虚拟机设置下DNS就可以了 ，如何获取DNS先要保证宿主主机是能连接外网的 然后我们通过ipconfig /all获取到DNS 然后设置虚拟机中就可以连接公网了。\n ![网络拓扑图]( aec379310a55b31966f8dc0140a98226cffc1744.jpg) \n\n ## 拓展知识\n网关： 网关是一种充当转换重任的计算机系统或设备。在使用不同的通信协议、数据格式或语言，甚至体系结构完全不同的两种系统之间，网关是一个翻译器。\n\n那么网关到底是什么呢？网关实质上是一个网络通向其他网络的IP地址。比如有网络A和网络B，网络A的IP地址范围为“192.168.1.1~192. 168.1.254”，子网掩码为255.255.255.0；网络B的IP地址范围为“192.168.2.1~192.168.2.254”，子网掩码为255.255.255.0。在没有路由器的情况下，两个网络之间是不能进行TCP/IP通信的，即使是两个网络连接在同一台交换机（或集线器）上，TCP/IP协议也会根据子网掩码（255.255.255.0）判定两个网络中的主机处在不同的网络里。而要实现这两个网络之间的通信，则必须通过网关。如果网络A中的主机发现数据包的目的主机不在本地网络中，就把数据包转发给它自己的网关，再由网关转发给网络B的网关，网络B的网关再转发给网络B的某个主机（如附图所示）。网络A向网络B转发数据包的过程。\n\n***举例说明***\n假设你的名字叫小不点(很小)，你住在一个大院子里，你的邻居有很多小伙伴，父母是你的网关。当你想跟院子里的某个小伙伴玩，只要你在院子里大喊一声他的名字，他听到了就会回应你，并且跑出来跟你玩。\n但是你家长不允许你走出大门，你想与外界发生的一切联系，都必须由父母（网关）用电话帮助你联系。假如你想找你的同学小明聊天，小明家住在很远的另外一个院子里，他家里也有父母（小明的网关）。但是你不知道小明家的电话号码，不过你的班主任老师有一份你们班全体同学的名单和电话号码对照表，你的老师就是你的DNS服务器。于是你在家里和父母有了下面的对话：\n\n小不点：妈妈(或爸爸),我想找班主任查一下小明的电话号码行吗？\n![网络拓扑图]( a6efce1b9d16fdfa3265015bb48f8c5494ee7b7e.jpg) \n家长：好，你等着。（接着你家长给你的班主任挂了一个电话，问清楚了小明的电话）问到了，他家的号码是211.99.99.99\n","source":"_posts/虚拟机联网方式设置.md","raw":"---\ntitle: 虚拟机联网方式设置\ndate: 2014-10-08\ncomments: true\ncategories: VMware\ntoc: true  \n---\n\n## Bridging（桥接）\n\n这种方式是最简单的只需要设置虚拟机如下图就可以进行联网了。包括虚拟机IP、网关、DNS等都不需要进行设置，宿主主机也不需要进行共享\n<!--more-->\n![桥接](6c224f4a20a4462399c138119b22720e0cf3d7be.jpg)\n\n## NAT连接\n第一、需要宿主主机对网络进行共享到VMware Network Adapter VMnet8 网络连接 VMware Network Adapter VMnet8的IP使用默认分配。\n第二、虚拟机设置如下图\n![NAT连接](241f95cad1c8a786c6c1d77d6409c93d71cf50dd.jpg)\n第三、设置虚拟机IP\n例如VMware Network Adapter VMnet8 的IP地址为192.168.137.1 虚拟机的IP就在 192.168.137.2~192.168.137.255之间了\n网关设置为192.168.137.1，子网掩码设置为255.255.255.0，DNS可以设置为192.168.137.1 后者同宿主主机的DNS相同也可以\n通过 ipconfig /all可以获得宿主主机的DNS，如下图。\n![虚拟机IP](d31b0ef41bd5ad6ef751f89982cb39dbb6fd3c1c.jpg)\n\n通过上面的设置就可以上网了\n虚拟机网络设置 在Edit——》Virtual Nework Editor\n![网络设置](203fb80e7bec54e72f564b6aba389b504fc26a0f.jpg)\nVMnet0 默认使用的是桥接方式（以一台主机的方式加入局域网局域网内是互通的） VMent1使用的主机模式（Host-only） VMent8默认使用的是网络地址转换模式（NAT）。\n如果虚拟机使用的是NAT模式如果自动获取IP，IP的范围取决于 DHCP Settings的的设置 这里是 128~254\n![网络设置](e7cd7b899e510fb3728324e3da33c895d1430c2f.jpg) \n默认网关在NAT Setting中设置 如果想要手动设置只要在虚拟机中设置跟下面相同即可\n![网络设置](d8f9d72a6059252d3cf04e70379b033b5ab5b9db.jpg) \n 这样自动获取的IP可能还不能与宿住主机ping同，不用急只要对宿主主机的VMware Network Adapter VMnet8 的IP设置与上图同一网段即可对于虚拟机的网关 即可以设置为 VMware Network Adapter VMnet8的IP也可以设置为Net Setting中的网关。这样设置完以后就可以与主机ping通了但可能依然不能连接公网，我们只要对虚拟机设置下DNS就可以了 ，如何获取DNS先要保证宿主主机是能连接外网的 然后我们通过ipconfig /all获取到DNS 然后设置虚拟机中就可以连接公网了。\n ![网络拓扑图]( aec379310a55b31966f8dc0140a98226cffc1744.jpg) \n\n ## 拓展知识\n网关： 网关是一种充当转换重任的计算机系统或设备。在使用不同的通信协议、数据格式或语言，甚至体系结构完全不同的两种系统之间，网关是一个翻译器。\n\n那么网关到底是什么呢？网关实质上是一个网络通向其他网络的IP地址。比如有网络A和网络B，网络A的IP地址范围为“192.168.1.1~192. 168.1.254”，子网掩码为255.255.255.0；网络B的IP地址范围为“192.168.2.1~192.168.2.254”，子网掩码为255.255.255.0。在没有路由器的情况下，两个网络之间是不能进行TCP/IP通信的，即使是两个网络连接在同一台交换机（或集线器）上，TCP/IP协议也会根据子网掩码（255.255.255.0）判定两个网络中的主机处在不同的网络里。而要实现这两个网络之间的通信，则必须通过网关。如果网络A中的主机发现数据包的目的主机不在本地网络中，就把数据包转发给它自己的网关，再由网关转发给网络B的网关，网络B的网关再转发给网络B的某个主机（如附图所示）。网络A向网络B转发数据包的过程。\n\n***举例说明***\n假设你的名字叫小不点(很小)，你住在一个大院子里，你的邻居有很多小伙伴，父母是你的网关。当你想跟院子里的某个小伙伴玩，只要你在院子里大喊一声他的名字，他听到了就会回应你，并且跑出来跟你玩。\n但是你家长不允许你走出大门，你想与外界发生的一切联系，都必须由父母（网关）用电话帮助你联系。假如你想找你的同学小明聊天，小明家住在很远的另外一个院子里，他家里也有父母（小明的网关）。但是你不知道小明家的电话号码，不过你的班主任老师有一份你们班全体同学的名单和电话号码对照表，你的老师就是你的DNS服务器。于是你在家里和父母有了下面的对话：\n\n小不点：妈妈(或爸爸),我想找班主任查一下小明的电话号码行吗？\n![网络拓扑图]( a6efce1b9d16fdfa3265015bb48f8c5494ee7b7e.jpg) \n家长：好，你等着。（接着你家长给你的班主任挂了一个电话，问清楚了小明的电话）问到了，他家的号码是211.99.99.99\n","slug":"虚拟机联网方式设置","published":1,"updated":"2016-05-14T08:09:51.942Z","_id":"cio6v5rl900024kybokn07zf9","layout":"post","photos":[],"link":"","content":"<h2 id=\"Bridging（桥接）\"><a href=\"#Bridging（桥接）\" class=\"headerlink\" title=\"Bridging（桥接）\"></a>Bridging（桥接）</h2><p>这种方式是最简单的只需要设置虚拟机如下图就可以进行联网了。包括虚拟机IP、网关、DNS等都不需要进行设置，宿主主机也不需要进行共享<br><a id=\"more\"></a><br><img src=\"6c224f4a20a4462399c138119b22720e0cf3d7be.jpg\" alt=\"桥接\"></p>\n<h2 id=\"NAT连接\"><a href=\"#NAT连接\" class=\"headerlink\" title=\"NAT连接\"></a>NAT连接</h2><p>第一、需要宿主主机对网络进行共享到VMware Network Adapter VMnet8 网络连接 VMware Network Adapter VMnet8的IP使用默认分配。<br>第二、虚拟机设置如下图<br><img src=\"241f95cad1c8a786c6c1d77d6409c93d71cf50dd.jpg\" alt=\"NAT连接\"><br>第三、设置虚拟机IP<br>例如VMware Network Adapter VMnet8 的IP地址为192.168.137.1 虚拟机的IP就在 192.168.137.2~192.168.137.255之间了<br>网关设置为192.168.137.1，子网掩码设置为255.255.255.0，DNS可以设置为192.168.137.1 后者同宿主主机的DNS相同也可以<br>通过 ipconfig /all可以获得宿主主机的DNS，如下图。<br><img src=\"d31b0ef41bd5ad6ef751f89982cb39dbb6fd3c1c.jpg\" alt=\"虚拟机IP\"></p>\n<p>通过上面的设置就可以上网了<br>虚拟机网络设置 在Edit——》Virtual Nework Editor<br><img src=\"203fb80e7bec54e72f564b6aba389b504fc26a0f.jpg\" alt=\"网络设置\"><br>VMnet0 默认使用的是桥接方式（以一台主机的方式加入局域网局域网内是互通的） VMent1使用的主机模式（Host-only） VMent8默认使用的是网络地址转换模式（NAT）。<br>如果虚拟机使用的是NAT模式如果自动获取IP，IP的范围取决于 DHCP Settings的的设置 这里是 128~254<br><img src=\"e7cd7b899e510fb3728324e3da33c895d1430c2f.jpg\" alt=\"网络设置\"><br>默认网关在NAT Setting中设置 如果想要手动设置只要在虚拟机中设置跟下面相同即可<br><img src=\"d8f9d72a6059252d3cf04e70379b033b5ab5b9db.jpg\" alt=\"网络设置\"><br> 这样自动获取的IP可能还不能与宿住主机ping同，不用急只要对宿主主机的VMware Network Adapter VMnet8 的IP设置与上图同一网段即可对于虚拟机的网关 即可以设置为 VMware Network Adapter VMnet8的IP也可以设置为Net Setting中的网关。这样设置完以后就可以与主机ping通了但可能依然不能连接公网，我们只要对虚拟机设置下DNS就可以了 ，如何获取DNS先要保证宿主主机是能连接外网的 然后我们通过ipconfig /all获取到DNS 然后设置虚拟机中就可以连接公网了。<br> <img src=\"aec379310a55b31966f8dc0140a98226cffc1744.jpg\" alt=\"网络拓扑图\"> </p>\n<h2 id=\"拓展知识\"><a href=\"#拓展知识\" class=\"headerlink\" title=\"拓展知识\"></a>拓展知识</h2><p>网关： 网关是一种充当转换重任的计算机系统或设备。在使用不同的通信协议、数据格式或语言，甚至体系结构完全不同的两种系统之间，网关是一个翻译器。</p>\n<p>那么网关到底是什么呢？网关实质上是一个网络通向其他网络的IP地址。比如有网络A和网络B，网络A的IP地址范围为“192.168.1.1~192. 168.1.254”，子网掩码为255.255.255.0；网络B的IP地址范围为“192.168.2.1~192.168.2.254”，子网掩码为255.255.255.0。在没有路由器的情况下，两个网络之间是不能进行TCP/IP通信的，即使是两个网络连接在同一台交换机（或集线器）上，TCP/IP协议也会根据子网掩码（255.255.255.0）判定两个网络中的主机处在不同的网络里。而要实现这两个网络之间的通信，则必须通过网关。如果网络A中的主机发现数据包的目的主机不在本地网络中，就把数据包转发给它自己的网关，再由网关转发给网络B的网关，网络B的网关再转发给网络B的某个主机（如附图所示）。网络A向网络B转发数据包的过程。</p>\n<p><strong><em>举例说明</em></strong><br>假设你的名字叫小不点(很小)，你住在一个大院子里，你的邻居有很多小伙伴，父母是你的网关。当你想跟院子里的某个小伙伴玩，只要你在院子里大喊一声他的名字，他听到了就会回应你，并且跑出来跟你玩。<br>但是你家长不允许你走出大门，你想与外界发生的一切联系，都必须由父母（网关）用电话帮助你联系。假如你想找你的同学小明聊天，小明家住在很远的另外一个院子里，他家里也有父母（小明的网关）。但是你不知道小明家的电话号码，不过你的班主任老师有一份你们班全体同学的名单和电话号码对照表，你的老师就是你的DNS服务器。于是你在家里和父母有了下面的对话：</p>\n<p>小不点：妈妈(或爸爸),我想找班主任查一下小明的电话号码行吗？<br><img src=\"a6efce1b9d16fdfa3265015bb48f8c5494ee7b7e.jpg\" alt=\"网络拓扑图\"><br>家长：好，你等着。（接着你家长给你的班主任挂了一个电话，问清楚了小明的电话）问到了，他家的号码是211.99.99.99</p>\n","excerpt":"<h2 id=\"Bridging（桥接）\"><a href=\"#Bridging（桥接）\" class=\"headerlink\" title=\"Bridging（桥接）\"></a>Bridging（桥接）</h2><p>这种方式是最简单的只需要设置虚拟机如下图就可以进行联网了。包括虚拟机IP、网关、DNS等都不需要进行设置，宿主主机也不需要进行共享<br>","more":"<br><img src=\"6c224f4a20a4462399c138119b22720e0cf3d7be.jpg\" alt=\"桥接\"></p>\n<h2 id=\"NAT连接\"><a href=\"#NAT连接\" class=\"headerlink\" title=\"NAT连接\"></a>NAT连接</h2><p>第一、需要宿主主机对网络进行共享到VMware Network Adapter VMnet8 网络连接 VMware Network Adapter VMnet8的IP使用默认分配。<br>第二、虚拟机设置如下图<br><img src=\"241f95cad1c8a786c6c1d77d6409c93d71cf50dd.jpg\" alt=\"NAT连接\"><br>第三、设置虚拟机IP<br>例如VMware Network Adapter VMnet8 的IP地址为192.168.137.1 虚拟机的IP就在 192.168.137.2~192.168.137.255之间了<br>网关设置为192.168.137.1，子网掩码设置为255.255.255.0，DNS可以设置为192.168.137.1 后者同宿主主机的DNS相同也可以<br>通过 ipconfig /all可以获得宿主主机的DNS，如下图。<br><img src=\"d31b0ef41bd5ad6ef751f89982cb39dbb6fd3c1c.jpg\" alt=\"虚拟机IP\"></p>\n<p>通过上面的设置就可以上网了<br>虚拟机网络设置 在Edit——》Virtual Nework Editor<br><img src=\"203fb80e7bec54e72f564b6aba389b504fc26a0f.jpg\" alt=\"网络设置\"><br>VMnet0 默认使用的是桥接方式（以一台主机的方式加入局域网局域网内是互通的） VMent1使用的主机模式（Host-only） VMent8默认使用的是网络地址转换模式（NAT）。<br>如果虚拟机使用的是NAT模式如果自动获取IP，IP的范围取决于 DHCP Settings的的设置 这里是 128~254<br><img src=\"e7cd7b899e510fb3728324e3da33c895d1430c2f.jpg\" alt=\"网络设置\"><br>默认网关在NAT Setting中设置 如果想要手动设置只要在虚拟机中设置跟下面相同即可<br><img src=\"d8f9d72a6059252d3cf04e70379b033b5ab5b9db.jpg\" alt=\"网络设置\"><br> 这样自动获取的IP可能还不能与宿住主机ping同，不用急只要对宿主主机的VMware Network Adapter VMnet8 的IP设置与上图同一网段即可对于虚拟机的网关 即可以设置为 VMware Network Adapter VMnet8的IP也可以设置为Net Setting中的网关。这样设置完以后就可以与主机ping通了但可能依然不能连接公网，我们只要对虚拟机设置下DNS就可以了 ，如何获取DNS先要保证宿主主机是能连接外网的 然后我们通过ipconfig /all获取到DNS 然后设置虚拟机中就可以连接公网了。<br> <img src=\"aec379310a55b31966f8dc0140a98226cffc1744.jpg\" alt=\"网络拓扑图\"> </p>\n<h2 id=\"拓展知识\"><a href=\"#拓展知识\" class=\"headerlink\" title=\"拓展知识\"></a>拓展知识</h2><p>网关： 网关是一种充当转换重任的计算机系统或设备。在使用不同的通信协议、数据格式或语言，甚至体系结构完全不同的两种系统之间，网关是一个翻译器。</p>\n<p>那么网关到底是什么呢？网关实质上是一个网络通向其他网络的IP地址。比如有网络A和网络B，网络A的IP地址范围为“192.168.1.1~192. 168.1.254”，子网掩码为255.255.255.0；网络B的IP地址范围为“192.168.2.1~192.168.2.254”，子网掩码为255.255.255.0。在没有路由器的情况下，两个网络之间是不能进行TCP/IP通信的，即使是两个网络连接在同一台交换机（或集线器）上，TCP/IP协议也会根据子网掩码（255.255.255.0）判定两个网络中的主机处在不同的网络里。而要实现这两个网络之间的通信，则必须通过网关。如果网络A中的主机发现数据包的目的主机不在本地网络中，就把数据包转发给它自己的网关，再由网关转发给网络B的网关，网络B的网关再转发给网络B的某个主机（如附图所示）。网络A向网络B转发数据包的过程。</p>\n<p><strong><em>举例说明</em></strong><br>假设你的名字叫小不点(很小)，你住在一个大院子里，你的邻居有很多小伙伴，父母是你的网关。当你想跟院子里的某个小伙伴玩，只要你在院子里大喊一声他的名字，他听到了就会回应你，并且跑出来跟你玩。<br>但是你家长不允许你走出大门，你想与外界发生的一切联系，都必须由父母（网关）用电话帮助你联系。假如你想找你的同学小明聊天，小明家住在很远的另外一个院子里，他家里也有父母（小明的网关）。但是你不知道小明家的电话号码，不过你的班主任老师有一份你们班全体同学的名单和电话号码对照表，你的老师就是你的DNS服务器。于是你在家里和父母有了下面的对话：</p>\n<p>小不点：妈妈(或爸爸),我想找班主任查一下小明的电话号码行吗？<br><img src=\"a6efce1b9d16fdfa3265015bb48f8c5494ee7b7e.jpg\" alt=\"网络拓扑图\"><br>家长：好，你等着。（接着你家长给你的班主任挂了一个电话，问清楚了小明的电话）问到了，他家的号码是211.99.99.99</p>"},{"title":"Java开发过程中异常汇总及解决办法","date":"2014-09-04T13:28:01.000Z","comments":1,"toc":false,"_content":"\n***org.apache.jasper.JasperException:Unable to initialize TldLocationsCache:null***\n\n异常详细描叙<!--more-->\n![JasperException](cdbf6c81800a19d86e32661230fa828ba61e46f0.jpg)\n\n***环境： ***操作系统：linux    中交件：jboss  jdk：1.5\n***解决办法：***添加对jdk如下设置\n```\nCLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\nPATH=$JAVA_HOME/bin:$PATH\n```\n\n--------------------------\n\n***org.apache.jasper.JasperException:Unable to compile class for JSP***\n\n异常详细描叙\n![JasperException](b03533fa828ba61e7fad2a384234970a304e5962.jpg)\n***环境：***  操作系统：linux    中交件：jboss  jdk：1.5\n***解决办法：***添加对jdk如下设置\n```\nCLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\nPATH=$JAVA_HOME/bin:$PATH\n```\n\n--------------------------\n\n***附件下载docx、xlsx、pptx 提示无法复制文件：无法读取文件或磁盘***\n\n问题详细描述\n![无法读取文件或磁盘](5366d0160924ab1893c50c2036fae6cd7a890bd1.jpg)\n***解决办法***：在下载的方法中添加\n```java\t\nif(filetype.indexOf(\".docx\") ==0) {\n    response.setContentType(\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\");\n}elseif(filetype.indexOf(\".xlsx\") ==0) {\n    response.setContentType(\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\n}elseif(filetype.indexOf(\".pptx\") ==0) {    \n    response.setContentType(\"application/vnd.openxmlformats-officedocument.presentationml.presentation\");\n}\n```\n在web.xml中添加\n ```xml\n <mime-mapping>\n  <extension>docx</extension>\n  <mime-type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</mime-type>\n </mime-mapping>\n <mime-mapping>\n  <extension>xlsx</extension>\n  <mime-type>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</mime-type>\n </mime-mapping>\n <mime-mapping>\n  <extension>pptx</extension>\n  <mime-type>application/vnd.openxmlformats-officedocument.presentationml.presentation</mime-type>\n </mime-mapping> \n ```\n \n ------------------------\n \n***java.lang.IllegalArgumentException: Illegal group reference***\n \n异常详细描叙\n ```\n2014-05-19 10:11:31,306 ERROR [STDERR] java.lang.IllegalArgumentException: Illegal group reference\n2014-05-19 10:11:31,306 ERROR [STDERR] at java.util.regex.Matcher.appendReplacement(Matcher.java:706)\n2014-05-19 10:11:31,307 ERROR [STDERR] at java.util.regex.Matcher.replaceAll(Matcher.java:806)\n2014-05-19 10:11:31,307 ERROR [STDERR] at java.lang.String.replaceAll(String.java:2000)\n```\n***异常产生原因： *** 在使用String的replaceAll方法中因为字符中含有字符 “$”与replaceAll方法中使用的“$”起冲突导致\n***解决办法： ***将字符“$”转义 “\\\\$” 或使用StringUtils的.replaceAll方法\n \n------------------------\n***org.apache.bsf.BSFException:javaScript Error:Function importClass must be called with a class:had\"[.....]\"***\n \n详细描述\n![BSFException](7aec54e736d12f2e1dbd40774cc2d56285356869.jpg)\n***解决办法：*** 将jdk1.5换成1.6\n\n------------------------\n\n***java.sql.SQLException:ORA-01795:列表中的最大表达式数为1000***\n\n详细描述\n![SQLException](58ee3d6d55fbb2fb1bceb6054c4a20a44723dcc4.jpg)\n***异常分析：***oracle 查询 in（）查询列表树最大支持1000\n***解决办法：*** 使用where col in (1...1000) or col in (1001....)\n\n------------------------\n\n***点击运行jboss run.bat 窗口一闪而过，提示“findstr”不是内部或外部命令***\n\n***环境：***windows2008\n***解决办法：*** 在环境变量PATH中添加%SystemRoot%\\system32;%SystemRoot%;\n\n------------------------\n\n***通过request.getRemoteAddr() 获取到值为0:0:0:0:0:0:0:1的问题***\n\n***解决办法：*** \n1、linux\n/etc/hosts 注释掉文件中的 # ::1 localhost 这一行\n2、windows\nC:\\Windows\\System32\\drivers\\etc\\hosts 注释掉文件中的 # ::1 localhost 这一行","source":"_posts/Java开发过程中异常汇总及解决办法.md","raw":"---\ntitle: Java开发过程中异常汇总及解决办法\ndate: 2014-09-04 21:28:01\ncomments: true\ncategories: Java\ntoc: false \n---\n\n***org.apache.jasper.JasperException:Unable to initialize TldLocationsCache:null***\n\n异常详细描叙<!--more-->\n![JasperException](cdbf6c81800a19d86e32661230fa828ba61e46f0.jpg)\n\n***环境： ***操作系统：linux    中交件：jboss  jdk：1.5\n***解决办法：***添加对jdk如下设置\n```\nCLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\nPATH=$JAVA_HOME/bin:$PATH\n```\n\n--------------------------\n\n***org.apache.jasper.JasperException:Unable to compile class for JSP***\n\n异常详细描叙\n![JasperException](b03533fa828ba61e7fad2a384234970a304e5962.jpg)\n***环境：***  操作系统：linux    中交件：jboss  jdk：1.5\n***解决办法：***添加对jdk如下设置\n```\nCLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar\nPATH=$JAVA_HOME/bin:$PATH\n```\n\n--------------------------\n\n***附件下载docx、xlsx、pptx 提示无法复制文件：无法读取文件或磁盘***\n\n问题详细描述\n![无法读取文件或磁盘](5366d0160924ab1893c50c2036fae6cd7a890bd1.jpg)\n***解决办法***：在下载的方法中添加\n```java\t\nif(filetype.indexOf(\".docx\") ==0) {\n    response.setContentType(\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\");\n}elseif(filetype.indexOf(\".xlsx\") ==0) {\n    response.setContentType(\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\");\n}elseif(filetype.indexOf(\".pptx\") ==0) {    \n    response.setContentType(\"application/vnd.openxmlformats-officedocument.presentationml.presentation\");\n}\n```\n在web.xml中添加\n ```xml\n <mime-mapping>\n  <extension>docx</extension>\n  <mime-type>application/vnd.openxmlformats-officedocument.wordprocessingml.document</mime-type>\n </mime-mapping>\n <mime-mapping>\n  <extension>xlsx</extension>\n  <mime-type>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</mime-type>\n </mime-mapping>\n <mime-mapping>\n  <extension>pptx</extension>\n  <mime-type>application/vnd.openxmlformats-officedocument.presentationml.presentation</mime-type>\n </mime-mapping> \n ```\n \n ------------------------\n \n***java.lang.IllegalArgumentException: Illegal group reference***\n \n异常详细描叙\n ```\n2014-05-19 10:11:31,306 ERROR [STDERR] java.lang.IllegalArgumentException: Illegal group reference\n2014-05-19 10:11:31,306 ERROR [STDERR] at java.util.regex.Matcher.appendReplacement(Matcher.java:706)\n2014-05-19 10:11:31,307 ERROR [STDERR] at java.util.regex.Matcher.replaceAll(Matcher.java:806)\n2014-05-19 10:11:31,307 ERROR [STDERR] at java.lang.String.replaceAll(String.java:2000)\n```\n***异常产生原因： *** 在使用String的replaceAll方法中因为字符中含有字符 “$”与replaceAll方法中使用的“$”起冲突导致\n***解决办法： ***将字符“$”转义 “\\\\$” 或使用StringUtils的.replaceAll方法\n \n------------------------\n***org.apache.bsf.BSFException:javaScript Error:Function importClass must be called with a class:had\"[.....]\"***\n \n详细描述\n![BSFException](7aec54e736d12f2e1dbd40774cc2d56285356869.jpg)\n***解决办法：*** 将jdk1.5换成1.6\n\n------------------------\n\n***java.sql.SQLException:ORA-01795:列表中的最大表达式数为1000***\n\n详细描述\n![SQLException](58ee3d6d55fbb2fb1bceb6054c4a20a44723dcc4.jpg)\n***异常分析：***oracle 查询 in（）查询列表树最大支持1000\n***解决办法：*** 使用where col in (1...1000) or col in (1001....)\n\n------------------------\n\n***点击运行jboss run.bat 窗口一闪而过，提示“findstr”不是内部或外部命令***\n\n***环境：***windows2008\n***解决办法：*** 在环境变量PATH中添加%SystemRoot%\\system32;%SystemRoot%;\n\n------------------------\n\n***通过request.getRemoteAddr() 获取到值为0:0:0:0:0:0:0:1的问题***\n\n***解决办法：*** \n1、linux\n/etc/hosts 注释掉文件中的 # ::1 localhost 这一行\n2、windows\nC:\\Windows\\System32\\drivers\\etc\\hosts 注释掉文件中的 # ::1 localhost 这一行","slug":"Java开发过程中异常汇总及解决办法","published":1,"updated":"2016-05-14T08:30:36.572Z","_id":"cio6vlw9500054kybnbe9t0x8","layout":"post","photos":[],"link":"","content":"<p><strong><em>org.apache.jasper.JasperException:Unable to initialize TldLocationsCache:null</em></strong></p>\n<p>异常详细描叙<a id=\"more\"></a><br><img src=\"cdbf6c81800a19d86e32661230fa828ba61e46f0.jpg\" alt=\"JasperException\"></p>\n<p><strong><em>环境： </em></strong>操作系统：linux    中交件：jboss  jdk：1.5<br><strong><em>解决办法：</em></strong>添加对jdk如下设置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class=\"line\">PATH=$JAVA_HOME/bin:$PATH</span><br></pre></td></tr></table></figure></p>\n<hr>\n<p><strong><em>org.apache.jasper.JasperException:Unable to compile class for JSP</em></strong></p>\n<p>异常详细描叙<br><img src=\"b03533fa828ba61e7fad2a384234970a304e5962.jpg\" alt=\"JasperException\"><br><strong><em>环境：</em></strong>  操作系统：linux    中交件：jboss  jdk：1.5<br><strong><em>解决办法：</em></strong>添加对jdk如下设置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class=\"line\">PATH=$JAVA_HOME/bin:$PATH</span><br></pre></td></tr></table></figure></p>\n<hr>\n<p><strong><em>附件下载docx、xlsx、pptx 提示无法复制文件：无法读取文件或磁盘</em></strong></p>\n<p>问题详细描述<br><img src=\"5366d0160924ab1893c50c2036fae6cd7a890bd1.jpg\" alt=\"无法读取文件或磁盘\"><br><strong><em>解决办法</em></strong>：在下载的方法中添加<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(filetype.indexOf(<span class=\"string\">\".docx\"</span>) ==<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    response.setContentType(<span class=\"string\">\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"</span>);</span><br><span class=\"line\">&#125;elseif(filetype.indexOf(<span class=\"string\">\".xlsx\"</span>) ==<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    response.setContentType(<span class=\"string\">\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"</span>);</span><br><span class=\"line\">&#125;elseif(filetype.indexOf(<span class=\"string\">\".pptx\"</span>) ==<span class=\"number\">0</span>) &#123;    </span><br><span class=\"line\">    response.setContentType(<span class=\"string\">\"application/vnd.openxmlformats-officedocument.presentationml.presentation\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在web.xml中添加<br> <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mime-mapping</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">extension</span>&gt;</span>docx<span class=\"tag\">&lt;/<span class=\"name\">extension</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">mime-type</span>&gt;</span>application/vnd.openxmlformats-officedocument.wordprocessingml.document<span class=\"tag\">&lt;/<span class=\"name\">mime-type</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mime-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mime-mapping</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">extension</span>&gt;</span>xlsx<span class=\"tag\">&lt;/<span class=\"name\">extension</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">mime-type</span>&gt;</span>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet<span class=\"tag\">&lt;/<span class=\"name\">mime-type</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mime-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mime-mapping</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">extension</span>&gt;</span>pptx<span class=\"tag\">&lt;/<span class=\"name\">extension</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">mime-type</span>&gt;</span>application/vnd.openxmlformats-officedocument.presentationml.presentation<span class=\"tag\">&lt;/<span class=\"name\">mime-type</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mime-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<hr>\n<p><strong><em>java.lang.IllegalArgumentException: Illegal group reference</em></strong></p>\n<p>异常详细描叙<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2014-05-19 10:11:31,306 ERROR [STDERR] java.lang.IllegalArgumentException: Illegal group reference</span><br><span class=\"line\">2014-05-19 10:11:31,306 ERROR [STDERR] at java.util.regex.Matcher.appendReplacement(Matcher.java:706)</span><br><span class=\"line\">2014-05-19 10:11:31,307 ERROR [STDERR] at java.util.regex.Matcher.replaceAll(Matcher.java:806)</span><br><span class=\"line\">2014-05-19 10:11:31,307 ERROR [STDERR] at java.lang.String.replaceAll(String.java:2000)</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>异常产生原因： </em></strong> 在使用String的replaceAll方法中因为字符中含有字符 “$”与replaceAll方法中使用的“$”起冲突导致<br><strong><em>解决办法： </em></strong>将字符“$”转义 “\\$” 或使用StringUtils的.replaceAll方法</p>\n<hr>\n<p><strong><em>org.apache.bsf.BSFException:javaScript Error:Function importClass must be called with a class:had”[…..]”</em></strong></p>\n<p>详细描述<br><img src=\"7aec54e736d12f2e1dbd40774cc2d56285356869.jpg\" alt=\"BSFException\"><br><strong><em>解决办法：</em></strong> 将jdk1.5换成1.6</p>\n<hr>\n<p><strong><em>java.sql.SQLException:ORA-01795:列表中的最大表达式数为1000</em></strong></p>\n<p>详细描述<br><img src=\"58ee3d6d55fbb2fb1bceb6054c4a20a44723dcc4.jpg\" alt=\"SQLException\"><br><strong><em>异常分析：</em></strong>oracle 查询 in（）查询列表树最大支持1000<br><strong><em>解决办法：</em></strong> 使用where col in (1…1000) or col in (1001….)</p>\n<hr>\n<p><strong><em>点击运行jboss run.bat 窗口一闪而过，提示“findstr”不是内部或外部命令</em></strong></p>\n<p><strong><em>环境：</em></strong>windows2008<br><strong><em>解决办法：</em></strong> 在环境变量PATH中添加%SystemRoot%\\system32;%SystemRoot%;</p>\n<hr>\n<p><strong><em>通过request.getRemoteAddr() 获取到值为0:0:0:0:0:0:0:1的问题</em></strong></p>\n<p><strong><em>解决办法：</em></strong><br>1、linux<br>/etc/hosts 注释掉文件中的 # ::1 localhost 这一行<br>2、windows<br>C:\\Windows\\System32\\drivers\\etc\\hosts 注释掉文件中的 # ::1 localhost 这一行</p>\n","excerpt":"<p><strong><em>org.apache.jasper.JasperException:Unable to initialize TldLocationsCache:null</em></strong></p>\n<p>异常详细描叙","more":"<br><img src=\"cdbf6c81800a19d86e32661230fa828ba61e46f0.jpg\" alt=\"JasperException\"></p>\n<p><strong><em>环境： </em></strong>操作系统：linux    中交件：jboss  jdk：1.5<br><strong><em>解决办法：</em></strong>添加对jdk如下设置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class=\"line\">PATH=$JAVA_HOME/bin:$PATH</span><br></pre></td></tr></table></figure></p>\n<hr>\n<p><strong><em>org.apache.jasper.JasperException:Unable to compile class for JSP</em></strong></p>\n<p>异常详细描叙<br><img src=\"b03533fa828ba61e7fad2a384234970a304e5962.jpg\" alt=\"JasperException\"><br><strong><em>环境：</em></strong>  操作系统：linux    中交件：jboss  jdk：1.5<br><strong><em>解决办法：</em></strong>添加对jdk如下设置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class=\"line\">PATH=$JAVA_HOME/bin:$PATH</span><br></pre></td></tr></table></figure></p>\n<hr>\n<p><strong><em>附件下载docx、xlsx、pptx 提示无法复制文件：无法读取文件或磁盘</em></strong></p>\n<p>问题详细描述<br><img src=\"5366d0160924ab1893c50c2036fae6cd7a890bd1.jpg\" alt=\"无法读取文件或磁盘\"><br><strong><em>解决办法</em></strong>：在下载的方法中添加<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">if</span>(filetype.indexOf(<span class=\"string\">\".docx\"</span>) ==<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    response.setContentType(<span class=\"string\">\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"</span>);</span><br><span class=\"line\">&#125;elseif(filetype.indexOf(<span class=\"string\">\".xlsx\"</span>) ==<span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">    response.setContentType(<span class=\"string\">\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\"</span>);</span><br><span class=\"line\">&#125;elseif(filetype.indexOf(<span class=\"string\">\".pptx\"</span>) ==<span class=\"number\">0</span>) &#123;    </span><br><span class=\"line\">    response.setContentType(<span class=\"string\">\"application/vnd.openxmlformats-officedocument.presentationml.presentation\"</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在web.xml中添加<br> <figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mime-mapping</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">extension</span>&gt;</span>docx<span class=\"tag\">&lt;/<span class=\"name\">extension</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">mime-type</span>&gt;</span>application/vnd.openxmlformats-officedocument.wordprocessingml.document<span class=\"tag\">&lt;/<span class=\"name\">mime-type</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mime-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mime-mapping</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">extension</span>&gt;</span>xlsx<span class=\"tag\">&lt;/<span class=\"name\">extension</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">mime-type</span>&gt;</span>application/vnd.openxmlformats-officedocument.spreadsheetml.sheet<span class=\"tag\">&lt;/<span class=\"name\">mime-type</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mime-mapping</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">mime-mapping</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">extension</span>&gt;</span>pptx<span class=\"tag\">&lt;/<span class=\"name\">extension</span>&gt;</span></span><br><span class=\"line\"> <span class=\"tag\">&lt;<span class=\"name\">mime-type</span>&gt;</span>application/vnd.openxmlformats-officedocument.presentationml.presentation<span class=\"tag\">&lt;/<span class=\"name\">mime-type</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">mime-mapping</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<hr>\n<p><strong><em>java.lang.IllegalArgumentException: Illegal group reference</em></strong></p>\n<p>异常详细描叙<br> <figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2014-05-19 10:11:31,306 ERROR [STDERR] java.lang.IllegalArgumentException: Illegal group reference</span><br><span class=\"line\">2014-05-19 10:11:31,306 ERROR [STDERR] at java.util.regex.Matcher.appendReplacement(Matcher.java:706)</span><br><span class=\"line\">2014-05-19 10:11:31,307 ERROR [STDERR] at java.util.regex.Matcher.replaceAll(Matcher.java:806)</span><br><span class=\"line\">2014-05-19 10:11:31,307 ERROR [STDERR] at java.lang.String.replaceAll(String.java:2000)</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>异常产生原因： </em></strong> 在使用String的replaceAll方法中因为字符中含有字符 “$”与replaceAll方法中使用的“$”起冲突导致<br><strong><em>解决办法： </em></strong>将字符“$”转义 “\\$” 或使用StringUtils的.replaceAll方法</p>\n<hr>\n<p><strong><em>org.apache.bsf.BSFException:javaScript Error:Function importClass must be called with a class:had”[…..]”</em></strong></p>\n<p>详细描述<br><img src=\"7aec54e736d12f2e1dbd40774cc2d56285356869.jpg\" alt=\"BSFException\"><br><strong><em>解决办法：</em></strong> 将jdk1.5换成1.6</p>\n<hr>\n<p><strong><em>java.sql.SQLException:ORA-01795:列表中的最大表达式数为1000</em></strong></p>\n<p>详细描述<br><img src=\"58ee3d6d55fbb2fb1bceb6054c4a20a44723dcc4.jpg\" alt=\"SQLException\"><br><strong><em>异常分析：</em></strong>oracle 查询 in（）查询列表树最大支持1000<br><strong><em>解决办法：</em></strong> 使用where col in (1…1000) or col in (1001….)</p>\n<hr>\n<p><strong><em>点击运行jboss run.bat 窗口一闪而过，提示“findstr”不是内部或外部命令</em></strong></p>\n<p><strong><em>环境：</em></strong>windows2008<br><strong><em>解决办法：</em></strong> 在环境变量PATH中添加%SystemRoot%\\system32;%SystemRoot%;</p>\n<hr>\n<p><strong><em>通过request.getRemoteAddr() 获取到值为0:0:0:0:0:0:0:1的问题</em></strong></p>\n<p><strong><em>解决办法：</em></strong><br>1、linux<br>/etc/hosts 注释掉文件中的 # ::1 localhost 这一行<br>2、windows<br>C:\\Windows\\System32\\drivers\\etc\\hosts 注释掉文件中的 # ::1 localhost 这一行</p>"},{"title":"中间件远程调试设置","date":"2014-09-04T13:28:01.000Z","comments":1,"toc":true,"_content":"\n## 中间件\n\n### Jboss\n打开jboss的安装目录\\bin\\run.bat 使用文本编辑打开找到   \n```\nset JAVA_OPTS=-classic -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=n\n```\n将参数***suspend=n*** 设置为 y\n<!--more-->\n### Weblogic\n打开weblogic应用安装路径启动脚本文件 我的是 D:\\bea\\user_projects\\domains\\base_domain\\bin\\startWebLogic.cmd\n使用文本编辑打开startWebLogic.cmd 添加如下设置\n```\nset JAVA_DEBUG=-Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=y\n```\n在将参数 JAVA_DEBUG加入到下面脚本当中\n```\n%JAVA_HOME%\\bin\\java %JAVA_VM% %MEM_ARGS% %JAVA_OPTIONS% -Dweblogic.Name=%SERVER_NAME% -Djava.security.policy=%WL_HOME%\\server\\lib\\weblogic.policy\n```\n最后如下\n```\n%JAVA_HOME%\\bin\\java %JAVA_VM% %JAVA_DEBUG% %MEM_ARGS% %JAVA_OPTIONS% -Dweblogic.Name=%SERVER_NAME% -Djava.security.policy=%WL_HOME%\\server\\lib\\weblogic.policy %PROXY_SETTINGS%\n```\n\n## Eclipse\n![Eclipse](b2de9c82d158ccbfbe89542d1ad8bc3eb13541f4.jpg)","source":"_posts/中间件远程调试设置.md","raw":"---\ntitle: 中间件远程调试设置\ndate: 2014-09-04 21:28:01\ncomments: true\ncategories: Eclipse\ntoc: true \n---\n\n## 中间件\n\n### Jboss\n打开jboss的安装目录\\bin\\run.bat 使用文本编辑打开找到   \n```\nset JAVA_OPTS=-classic -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=n\n```\n将参数***suspend=n*** 设置为 y\n<!--more-->\n### Weblogic\n打开weblogic应用安装路径启动脚本文件 我的是 D:\\bea\\user_projects\\domains\\base_domain\\bin\\startWebLogic.cmd\n使用文本编辑打开startWebLogic.cmd 添加如下设置\n```\nset JAVA_DEBUG=-Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=y\n```\n在将参数 JAVA_DEBUG加入到下面脚本当中\n```\n%JAVA_HOME%\\bin\\java %JAVA_VM% %MEM_ARGS% %JAVA_OPTIONS% -Dweblogic.Name=%SERVER_NAME% -Djava.security.policy=%WL_HOME%\\server\\lib\\weblogic.policy\n```\n最后如下\n```\n%JAVA_HOME%\\bin\\java %JAVA_VM% %JAVA_DEBUG% %MEM_ARGS% %JAVA_OPTIONS% -Dweblogic.Name=%SERVER_NAME% -Djava.security.policy=%WL_HOME%\\server\\lib\\weblogic.policy %PROXY_SETTINGS%\n```\n\n## Eclipse\n![Eclipse](b2de9c82d158ccbfbe89542d1ad8bc3eb13541f4.jpg)","slug":"中间件远程调试设置","published":1,"updated":"2016-05-14T08:39:38.662Z","_id":"cio6wb5w300074kyb8znepkzp","layout":"post","photos":[],"link":"","content":"<h2 id=\"中间件\"><a href=\"#中间件\" class=\"headerlink\" title=\"中间件\"></a>中间件</h2><h3 id=\"Jboss\"><a href=\"#Jboss\" class=\"headerlink\" title=\"Jboss\"></a>Jboss</h3><p>打开jboss的安装目录\\bin\\run.bat 使用文本编辑打开找到<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set JAVA_OPTS=-classic -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=n</span><br></pre></td></tr></table></figure></p>\n<p>将参数<strong><em>suspend=n</em></strong> 设置为 y<br><a id=\"more\"></a></p>\n<h3 id=\"Weblogic\"><a href=\"#Weblogic\" class=\"headerlink\" title=\"Weblogic\"></a>Weblogic</h3><p>打开weblogic应用安装路径启动脚本文件 我的是 D:\\bea\\user_projects\\domains\\base_domain\\bin\\startWebLogic.cmd<br>使用文本编辑打开startWebLogic.cmd 添加如下设置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set JAVA_DEBUG=-Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=y</span><br></pre></td></tr></table></figure></p>\n<p>在将参数 JAVA_DEBUG加入到下面脚本当中<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%JAVA_HOME%\\bin\\java %JAVA_VM% %MEM_ARGS% %JAVA_OPTIONS% -Dweblogic.Name=%SERVER_NAME% -Djava.security.policy=%WL_HOME%\\server\\lib\\weblogic.policy</span><br></pre></td></tr></table></figure></p>\n<p>最后如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%JAVA_HOME%\\bin\\java %JAVA_VM% %JAVA_DEBUG% %MEM_ARGS% %JAVA_OPTIONS% -Dweblogic.Name=%SERVER_NAME% -Djava.security.policy=%WL_HOME%\\server\\lib\\weblogic.policy %PROXY_SETTINGS%</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Eclipse\"><a href=\"#Eclipse\" class=\"headerlink\" title=\"Eclipse\"></a>Eclipse</h2><p><img src=\"b2de9c82d158ccbfbe89542d1ad8bc3eb13541f4.jpg\" alt=\"Eclipse\"></p>\n","excerpt":"<h2 id=\"中间件\"><a href=\"#中间件\" class=\"headerlink\" title=\"中间件\"></a>中间件</h2><h3 id=\"Jboss\"><a href=\"#Jboss\" class=\"headerlink\" title=\"Jboss\"></a>Jboss</h3><p>打开jboss的安装目录\\bin\\run.bat 使用文本编辑打开找到<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set JAVA_OPTS=-classic -Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=n</span><br></pre></td></tr></table></figure></p>\n<p>将参数<strong><em>suspend=n</em></strong> 设置为 y<br>","more":"</p>\n<h3 id=\"Weblogic\"><a href=\"#Weblogic\" class=\"headerlink\" title=\"Weblogic\"></a>Weblogic</h3><p>打开weblogic应用安装路径启动脚本文件 我的是 D:\\bea\\user_projects\\domains\\base_domain\\bin\\startWebLogic.cmd<br>使用文本编辑打开startWebLogic.cmd 添加如下设置<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">set JAVA_DEBUG=-Xdebug -Xnoagent -Xrunjdwp:transport=dt_socket,address=8787,server=y,suspend=y</span><br></pre></td></tr></table></figure></p>\n<p>在将参数 JAVA_DEBUG加入到下面脚本当中<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%JAVA_HOME%\\bin\\java %JAVA_VM% %MEM_ARGS% %JAVA_OPTIONS% -Dweblogic.Name=%SERVER_NAME% -Djava.security.policy=%WL_HOME%\\server\\lib\\weblogic.policy</span><br></pre></td></tr></table></figure></p>\n<p>最后如下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">%JAVA_HOME%\\bin\\java %JAVA_VM% %JAVA_DEBUG% %MEM_ARGS% %JAVA_OPTIONS% -Dweblogic.Name=%SERVER_NAME% -Djava.security.policy=%WL_HOME%\\server\\lib\\weblogic.policy %PROXY_SETTINGS%</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"Eclipse\"><a href=\"#Eclipse\" class=\"headerlink\" title=\"Eclipse\"></a>Eclipse</h2><p><img src=\"b2de9c82d158ccbfbe89542d1ad8bc3eb13541f4.jpg\" alt=\"Eclipse\"></p>"},{"title":"JavaScript常用脚本","date":"2014-02-13T13:28:01.000Z","comments":1,"toc":true,"_content":"\n## 字符串函数\n\n### 是否包含\n```javascript\nString.prototype.Contains = function (A) {\n    return (this.indexOf(A) > -1);\n};\n```\n<!--more-->\n### 是否相等\n```javascript\nString.prototype.Equals = function () {\n    var A = arguments;\n    if (A.length == 1 && A[0].pop)\n        A = A[0];\n    for (var i = 0; i < A.length; i++) {\n        if (this == A[i])\n            return true;\n    };\n    return false;\n};\n```\n\n### 是否相等(不区分大小写)\n```javascript\nString.prototype.IEquals = function () {\n    var A = this.toUpperCase();\n    var B = arguments;\n    if (B.length == 1 && B[0].pop)\n        B = B[0];\n    for (var i = 0; i < B.length; i++) {\n        if (A == B[i].toUpperCase())\n            return true;\n    };\n    return false;\n};\n```\n\n### 替换所有\n```javascript\nString.prototype.ReplaceAll = function (A, B) {\n    var C = this;\n    for (var i = 0; i < A.length; i++) {\n        C = C.replace(A[i], B[i]);\n    };\n    return C;\n}; \n或\nString.prototype.ReplaceAll = function(A,B){\n       var C = this;\n       C=C.replace(/A/g,B);\n       return C;  \n}\n```\n\n### StartsWith\n```javascript\nString.prototype.StartsWith = function (A) {\n    return (this.substr(0, A.length) == A);\n};\n```\n\n### EndsWith\n```javascript\nString.prototype.EndsWith = function (A, B) {\n    var C = this.length;\n    var D = A.length;\n    if (D > C)\n        return false;\n    if (B) {\n        var E = new RegExp(A + '$', 'i');\n        return E.test(this);\n    } else\n        return (D == 0 || this.substr(C - D, D) == A);\n};\n```\n\n### Remove\n```javascript\nString.prototype.Remove = function (A, B) {\n    var s = '';\n    if (A > 0)\n        s = this.substring(0, A);\n    if (A + B < this.length)\n        s += this.substring(A + B, this.length);\n    return s;\n};\n```\n\n### Trim\n```javascript\nString.prototype.Trim = function () {\n    return this.replace(/(^[ \\t\\n\\r]*)|([ \\t\\n\\r]*$)/g, '');\n};\n```\n\n### LTrim\n```javascript\nString.prototype.LTrim = function () {\n    return this.replace(/^[ \\t\\n\\r]*/g, '');\n};\n```\n\n### RTrim\n```javascript\nString.prototype.RTrim = function () {\n    return this.replace(/[ \\t\\n\\r]*$/g, '');\n}\n```\n\n### ReplaceNewLineChars\n```javascript\nString.prototype.ReplaceNewLineChars = function (A) {\n    return this.replace(/\\n/g, A);\n};\n```\n\n### Replace\n```javascript\nString.prototype.Replace = function (A, B, C) {\n    if (typeof B == 'function') {\n        return this.replace(A, function () {\n            return B.apply(C || this, arguments);\n        });\n    } else\n        return this.replace(A, B);\n};\n```\n\n## 获取浏览器信息\n```javascript\n var gecko = /gecko\\/\\d/i.test(navigator.userAgent);\n var ie = /MSIE \\d/.test(navigator.userAgent);\n var ie_lt8 = ie && (document.documentMode == null || document.documentMode < 8);\n var ie_lt9 = ie && (document.documentMode == null || document.documentMode < 9);\n var webkit = /WebKit\\//.test(navigator.userAgent);\n var qtwebkit = webkit && /Qt\\/\\d+\\.\\d+/.test(navigator.userAgent);\n var chrome = /Chrome\\//.test(navigator.userAgent);\n var opera = /Opera\\//.test(navigator.userAgent);\n var safari = /Apple Computer/.test(navigator.vendor);\n var khtml = /KHTML\\//.test(navigator.userAgent);\n var mac_geLion = /Mac OS X 1\\d\\D([7-9]|\\d\\d)\\D/.test(navigator.userAgent);\n var mac_geMountainLion = /Mac OS X 1\\d\\D([8-9]|\\d\\d)\\D/.test(navigator.userAgent);\n var phantom = /PhantomJS/.test(navigator.userAgent);\n ```\n \n ## 获取操作系统信息\n ```javascript\n var ios = /AppleWebKit/.test(navigator.userAgent) && /Mobile\\/\\w+/.test(navigator.userAgent);\n // This is woefully incomplete. Suggestions for alternative methods welcome.\n var mobile = ios || /Android|webOS|BlackBerry|Opera Mini|Opera Mobi|IEMobile/i.test(navigator.userAgent);\n var mac = ios || /Mac/.test(navigator.platform);\n var windows = /win/i.test(navigator.platform);\n ```","source":"_posts/JavaScript常用脚本.md","raw":"---\ntitle: JavaScript常用脚本\ndate: 2014-02-13 21:28:01\ncomments: true\ncategories: JavaScript\ntoc: true \n---\n\n## 字符串函数\n\n### 是否包含\n```javascript\nString.prototype.Contains = function (A) {\n    return (this.indexOf(A) > -1);\n};\n```\n<!--more-->\n### 是否相等\n```javascript\nString.prototype.Equals = function () {\n    var A = arguments;\n    if (A.length == 1 && A[0].pop)\n        A = A[0];\n    for (var i = 0; i < A.length; i++) {\n        if (this == A[i])\n            return true;\n    };\n    return false;\n};\n```\n\n### 是否相等(不区分大小写)\n```javascript\nString.prototype.IEquals = function () {\n    var A = this.toUpperCase();\n    var B = arguments;\n    if (B.length == 1 && B[0].pop)\n        B = B[0];\n    for (var i = 0; i < B.length; i++) {\n        if (A == B[i].toUpperCase())\n            return true;\n    };\n    return false;\n};\n```\n\n### 替换所有\n```javascript\nString.prototype.ReplaceAll = function (A, B) {\n    var C = this;\n    for (var i = 0; i < A.length; i++) {\n        C = C.replace(A[i], B[i]);\n    };\n    return C;\n}; \n或\nString.prototype.ReplaceAll = function(A,B){\n       var C = this;\n       C=C.replace(/A/g,B);\n       return C;  \n}\n```\n\n### StartsWith\n```javascript\nString.prototype.StartsWith = function (A) {\n    return (this.substr(0, A.length) == A);\n};\n```\n\n### EndsWith\n```javascript\nString.prototype.EndsWith = function (A, B) {\n    var C = this.length;\n    var D = A.length;\n    if (D > C)\n        return false;\n    if (B) {\n        var E = new RegExp(A + '$', 'i');\n        return E.test(this);\n    } else\n        return (D == 0 || this.substr(C - D, D) == A);\n};\n```\n\n### Remove\n```javascript\nString.prototype.Remove = function (A, B) {\n    var s = '';\n    if (A > 0)\n        s = this.substring(0, A);\n    if (A + B < this.length)\n        s += this.substring(A + B, this.length);\n    return s;\n};\n```\n\n### Trim\n```javascript\nString.prototype.Trim = function () {\n    return this.replace(/(^[ \\t\\n\\r]*)|([ \\t\\n\\r]*$)/g, '');\n};\n```\n\n### LTrim\n```javascript\nString.prototype.LTrim = function () {\n    return this.replace(/^[ \\t\\n\\r]*/g, '');\n};\n```\n\n### RTrim\n```javascript\nString.prototype.RTrim = function () {\n    return this.replace(/[ \\t\\n\\r]*$/g, '');\n}\n```\n\n### ReplaceNewLineChars\n```javascript\nString.prototype.ReplaceNewLineChars = function (A) {\n    return this.replace(/\\n/g, A);\n};\n```\n\n### Replace\n```javascript\nString.prototype.Replace = function (A, B, C) {\n    if (typeof B == 'function') {\n        return this.replace(A, function () {\n            return B.apply(C || this, arguments);\n        });\n    } else\n        return this.replace(A, B);\n};\n```\n\n## 获取浏览器信息\n```javascript\n var gecko = /gecko\\/\\d/i.test(navigator.userAgent);\n var ie = /MSIE \\d/.test(navigator.userAgent);\n var ie_lt8 = ie && (document.documentMode == null || document.documentMode < 8);\n var ie_lt9 = ie && (document.documentMode == null || document.documentMode < 9);\n var webkit = /WebKit\\//.test(navigator.userAgent);\n var qtwebkit = webkit && /Qt\\/\\d+\\.\\d+/.test(navigator.userAgent);\n var chrome = /Chrome\\//.test(navigator.userAgent);\n var opera = /Opera\\//.test(navigator.userAgent);\n var safari = /Apple Computer/.test(navigator.vendor);\n var khtml = /KHTML\\//.test(navigator.userAgent);\n var mac_geLion = /Mac OS X 1\\d\\D([7-9]|\\d\\d)\\D/.test(navigator.userAgent);\n var mac_geMountainLion = /Mac OS X 1\\d\\D([8-9]|\\d\\d)\\D/.test(navigator.userAgent);\n var phantom = /PhantomJS/.test(navigator.userAgent);\n ```\n \n ## 获取操作系统信息\n ```javascript\n var ios = /AppleWebKit/.test(navigator.userAgent) && /Mobile\\/\\w+/.test(navigator.userAgent);\n // This is woefully incomplete. Suggestions for alternative methods welcome.\n var mobile = ios || /Android|webOS|BlackBerry|Opera Mini|Opera Mobi|IEMobile/i.test(navigator.userAgent);\n var mac = ios || /Mac/.test(navigator.platform);\n var windows = /win/i.test(navigator.platform);\n ```","slug":"JavaScript常用脚本","published":1,"updated":"2016-05-14T08:47:40.145Z","_id":"cio6wm9o7000g4kybgoxb6ud8","layout":"post","photos":[],"link":"","content":"<h2 id=\"字符串函数\"><a href=\"#字符串函数\" class=\"headerlink\" title=\"字符串函数\"></a>字符串函数</h2><h3 id=\"是否包含\"><a href=\"#是否包含\" class=\"headerlink\" title=\"是否包含\"></a>是否包含</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.Contains = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">A</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (<span class=\"keyword\">this</span>.indexOf(A) &gt; <span class=\"number\">-1</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<h3 id=\"是否相等\"><a href=\"#是否相等\" class=\"headerlink\" title=\"是否相等\"></a>是否相等</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.Equals = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> A = <span class=\"built_in\">arguments</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A.length == <span class=\"number\">1</span> &amp;&amp; A[<span class=\"number\">0</span>].pop)</span><br><span class=\"line\">        A = A[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; A.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span> == A[i])</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"是否相等-不区分大小写\"><a href=\"#是否相等-不区分大小写\" class=\"headerlink\" title=\"是否相等(不区分大小写)\"></a>是否相等(不区分大小写)</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.IEquals = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> A = <span class=\"keyword\">this</span>.toUpperCase();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> B = <span class=\"built_in\">arguments</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (B.length == <span class=\"number\">1</span> &amp;&amp; B[<span class=\"number\">0</span>].pop)</span><br><span class=\"line\">        B = B[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; B.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (A == B[i].toUpperCase())</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"替换所有\"><a href=\"#替换所有\" class=\"headerlink\" title=\"替换所有\"></a>替换所有</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.ReplaceAll = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">A, B</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> C = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; A.length; i++) &#123;</span><br><span class=\"line\">        C = C.replace(A[i], B[i]);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> C;</span><br><span class=\"line\">&#125;; </span><br><span class=\"line\">或</span><br><span class=\"line\"><span class=\"built_in\">String</span>.prototype.ReplaceAll = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">A,B</span>)</span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">var</span> C = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">       C=C.replace(<span class=\"regexp\">/A/g</span>,B);</span><br><span class=\"line\">       <span class=\"keyword\">return</span> C;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"StartsWith\"><a href=\"#StartsWith\" class=\"headerlink\" title=\"StartsWith\"></a>StartsWith</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.StartsWith = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">A</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (<span class=\"keyword\">this</span>.substr(<span class=\"number\">0</span>, A.length) == A);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"EndsWith\"><a href=\"#EndsWith\" class=\"headerlink\" title=\"EndsWith\"></a>EndsWith</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.EndsWith = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">A, B</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> C = <span class=\"keyword\">this</span>.length;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> D = A.length;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (D &gt; C)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (B) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> E = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(A + <span class=\"string\">'$'</span>, <span class=\"string\">'i'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> E.test(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (D == <span class=\"number\">0</span> || <span class=\"keyword\">this</span>.substr(C - D, D) == A);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Remove\"><a href=\"#Remove\" class=\"headerlink\" title=\"Remove\"></a>Remove</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.Remove = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">A, B</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> s = <span class=\"string\">''</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        s = <span class=\"keyword\">this</span>.substring(<span class=\"number\">0</span>, A);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A + B &lt; <span class=\"keyword\">this</span>.length)</span><br><span class=\"line\">        s += <span class=\"keyword\">this</span>.substring(A + B, <span class=\"keyword\">this</span>.length);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Trim\"><a href=\"#Trim\" class=\"headerlink\" title=\"Trim\"></a>Trim</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.Trim = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.replace(<span class=\"regexp\">/(^[ \\t\\n\\r]*)|([ \\t\\n\\r]*$)/g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"LTrim\"><a href=\"#LTrim\" class=\"headerlink\" title=\"LTrim\"></a>LTrim</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.LTrim = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.replace(<span class=\"regexp\">/^[ \\t\\n\\r]*/g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"RTrim\"><a href=\"#RTrim\" class=\"headerlink\" title=\"RTrim\"></a>RTrim</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.RTrim = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.replace(<span class=\"regexp\">/[ \\t\\n\\r]*$/g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"ReplaceNewLineChars\"><a href=\"#ReplaceNewLineChars\" class=\"headerlink\" title=\"ReplaceNewLineChars\"></a>ReplaceNewLineChars</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.ReplaceNewLineChars = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">A</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.replace(<span class=\"regexp\">/\\n/g</span>, A);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Replace\"><a href=\"#Replace\" class=\"headerlink\" title=\"Replace\"></a>Replace</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.Replace = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">A, B, C</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> B == <span class=\"string\">'function'</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.replace(A, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> B.apply(C || <span class=\"keyword\">this</span>, <span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.replace(A, B);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"获取浏览器信息\"><a href=\"#获取浏览器信息\" class=\"headerlink\" title=\"获取浏览器信息\"></a>获取浏览器信息</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gecko = <span class=\"regexp\">/gecko\\/\\d/i</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"keyword\">var</span> ie = <span class=\"regexp\">/MSIE \\d/</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"keyword\">var</span> ie_lt8 = ie &amp;&amp; (<span class=\"built_in\">document</span>.documentMode == <span class=\"literal\">null</span> || <span class=\"built_in\">document</span>.documentMode &lt; <span class=\"number\">8</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> ie_lt9 = ie &amp;&amp; (<span class=\"built_in\">document</span>.documentMode == <span class=\"literal\">null</span> || <span class=\"built_in\">document</span>.documentMode &lt; <span class=\"number\">9</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webkit = <span class=\"regexp\">/WebKit\\//</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"keyword\">var</span> qtwebkit = webkit &amp;&amp; <span class=\"regexp\">/Qt\\/\\d+\\.\\d+/</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"keyword\">var</span> chrome = <span class=\"regexp\">/Chrome\\//</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"keyword\">var</span> opera = <span class=\"regexp\">/Opera\\//</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"keyword\">var</span> safari = <span class=\"regexp\">/Apple Computer/</span>.test(navigator.vendor);</span><br><span class=\"line\"><span class=\"keyword\">var</span> khtml = <span class=\"regexp\">/KHTML\\//</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"keyword\">var</span> mac_geLion = <span class=\"regexp\">/Mac OS X 1\\d\\D([7-9]|\\d\\d)\\D/</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"keyword\">var</span> mac_geMountainLion = <span class=\"regexp\">/Mac OS X 1\\d\\D([8-9]|\\d\\d)\\D/</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"keyword\">var</span> phantom = <span class=\"regexp\">/PhantomJS/</span>.test(navigator.userAgent);</span><br></pre></td></tr></table></figure>\n<h2 id=\"获取操作系统信息\"><a href=\"#获取操作系统信息\" class=\"headerlink\" title=\"获取操作系统信息\"></a>获取操作系统信息</h2> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ios = <span class=\"regexp\">/AppleWebKit/</span>.test(navigator.userAgent) &amp;&amp; <span class=\"regexp\">/Mobile\\/\\w+/</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"comment\">// This is woefully incomplete. Suggestions for alternative methods welcome.</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mobile = ios || <span class=\"regexp\">/Android|webOS|BlackBerry|Opera Mini|Opera Mobi|IEMobile/i</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"keyword\">var</span> mac = ios || <span class=\"regexp\">/Mac/</span>.test(navigator.platform);</span><br><span class=\"line\"><span class=\"keyword\">var</span> windows = <span class=\"regexp\">/win/i</span>.test(navigator.platform);</span><br></pre></td></tr></table></figure>","excerpt":"<h2 id=\"字符串函数\"><a href=\"#字符串函数\" class=\"headerlink\" title=\"字符串函数\"></a>字符串函数</h2><h3 id=\"是否包含\"><a href=\"#是否包含\" class=\"headerlink\" title=\"是否包含\"></a>是否包含</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.Contains = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">A</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (<span class=\"keyword\">this</span>.indexOf(A) &gt; <span class=\"number\">-1</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>","more":"<h3 id=\"是否相等\"><a href=\"#是否相等\" class=\"headerlink\" title=\"是否相等\"></a>是否相等</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.Equals = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> A = <span class=\"built_in\">arguments</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A.length == <span class=\"number\">1</span> &amp;&amp; A[<span class=\"number\">0</span>].pop)</span><br><span class=\"line\">        A = A[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; A.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">this</span> == A[i])</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"是否相等-不区分大小写\"><a href=\"#是否相等-不区分大小写\" class=\"headerlink\" title=\"是否相等(不区分大小写)\"></a>是否相等(不区分大小写)</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.IEquals = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> A = <span class=\"keyword\">this</span>.toUpperCase();</span><br><span class=\"line\">    <span class=\"keyword\">var</span> B = <span class=\"built_in\">arguments</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (B.length == <span class=\"number\">1</span> &amp;&amp; B[<span class=\"number\">0</span>].pop)</span><br><span class=\"line\">        B = B[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; B.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (A == B[i].toUpperCase())</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"替换所有\"><a href=\"#替换所有\" class=\"headerlink\" title=\"替换所有\"></a>替换所有</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.ReplaceAll = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">A, B</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> C = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (<span class=\"keyword\">var</span> i = <span class=\"number\">0</span>; i &lt; A.length; i++) &#123;</span><br><span class=\"line\">        C = C.replace(A[i], B[i]);</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> C;</span><br><span class=\"line\">&#125;; </span><br><span class=\"line\">或</span><br><span class=\"line\"><span class=\"built_in\">String</span>.prototype.ReplaceAll = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">A,B</span>)</span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">var</span> C = <span class=\"keyword\">this</span>;</span><br><span class=\"line\">       C=C.replace(<span class=\"regexp\">/A/g</span>,B);</span><br><span class=\"line\">       <span class=\"keyword\">return</span> C;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"StartsWith\"><a href=\"#StartsWith\" class=\"headerlink\" title=\"StartsWith\"></a>StartsWith</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.StartsWith = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">A</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (<span class=\"keyword\">this</span>.substr(<span class=\"number\">0</span>, A.length) == A);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"EndsWith\"><a href=\"#EndsWith\" class=\"headerlink\" title=\"EndsWith\"></a>EndsWith</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.EndsWith = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">A, B</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> C = <span class=\"keyword\">this</span>.length;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> D = A.length;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (D &gt; C)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (B) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> E = <span class=\"keyword\">new</span> <span class=\"built_in\">RegExp</span>(A + <span class=\"string\">'$'</span>, <span class=\"string\">'i'</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> E.test(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> (D == <span class=\"number\">0</span> || <span class=\"keyword\">this</span>.substr(C - D, D) == A);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Remove\"><a href=\"#Remove\" class=\"headerlink\" title=\"Remove\"></a>Remove</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.Remove = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">A, B</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> s = <span class=\"string\">''</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A &gt; <span class=\"number\">0</span>)</span><br><span class=\"line\">        s = <span class=\"keyword\">this</span>.substring(<span class=\"number\">0</span>, A);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (A + B &lt; <span class=\"keyword\">this</span>.length)</span><br><span class=\"line\">        s += <span class=\"keyword\">this</span>.substring(A + B, <span class=\"keyword\">this</span>.length);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> s;</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Trim\"><a href=\"#Trim\" class=\"headerlink\" title=\"Trim\"></a>Trim</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.Trim = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.replace(<span class=\"regexp\">/(^[ \\t\\n\\r]*)|([ \\t\\n\\r]*$)/g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"LTrim\"><a href=\"#LTrim\" class=\"headerlink\" title=\"LTrim\"></a>LTrim</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.LTrim = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.replace(<span class=\"regexp\">/^[ \\t\\n\\r]*/g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"RTrim\"><a href=\"#RTrim\" class=\"headerlink\" title=\"RTrim\"></a>RTrim</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.RTrim = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.replace(<span class=\"regexp\">/[ \\t\\n\\r]*$/g</span>, <span class=\"string\">''</span>);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"ReplaceNewLineChars\"><a href=\"#ReplaceNewLineChars\" class=\"headerlink\" title=\"ReplaceNewLineChars\"></a>ReplaceNewLineChars</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.ReplaceNewLineChars = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">A</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.replace(<span class=\"regexp\">/\\n/g</span>, A);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h3 id=\"Replace\"><a href=\"#Replace\" class=\"headerlink\" title=\"Replace\"></a>Replace</h3><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">String</span>.prototype.Replace = <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\">A, B, C</span>) </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">typeof</span> B == <span class=\"string\">'function'</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.replace(A, <span class=\"function\"><span class=\"keyword\">function</span> (<span class=\"params\"></span>) </span>&#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> B.apply(C || <span class=\"keyword\">this</span>, <span class=\"built_in\">arguments</span>);</span><br><span class=\"line\">        &#125;);</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.replace(A, B);</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<h2 id=\"获取浏览器信息\"><a href=\"#获取浏览器信息\" class=\"headerlink\" title=\"获取浏览器信息\"></a>获取浏览器信息</h2><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> gecko = <span class=\"regexp\">/gecko\\/\\d/i</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"keyword\">var</span> ie = <span class=\"regexp\">/MSIE \\d/</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"keyword\">var</span> ie_lt8 = ie &amp;&amp; (<span class=\"built_in\">document</span>.documentMode == <span class=\"literal\">null</span> || <span class=\"built_in\">document</span>.documentMode &lt; <span class=\"number\">8</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> ie_lt9 = ie &amp;&amp; (<span class=\"built_in\">document</span>.documentMode == <span class=\"literal\">null</span> || <span class=\"built_in\">document</span>.documentMode &lt; <span class=\"number\">9</span>);</span><br><span class=\"line\"><span class=\"keyword\">var</span> webkit = <span class=\"regexp\">/WebKit\\//</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"keyword\">var</span> qtwebkit = webkit &amp;&amp; <span class=\"regexp\">/Qt\\/\\d+\\.\\d+/</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"keyword\">var</span> chrome = <span class=\"regexp\">/Chrome\\//</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"keyword\">var</span> opera = <span class=\"regexp\">/Opera\\//</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"keyword\">var</span> safari = <span class=\"regexp\">/Apple Computer/</span>.test(navigator.vendor);</span><br><span class=\"line\"><span class=\"keyword\">var</span> khtml = <span class=\"regexp\">/KHTML\\//</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"keyword\">var</span> mac_geLion = <span class=\"regexp\">/Mac OS X 1\\d\\D([7-9]|\\d\\d)\\D/</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"keyword\">var</span> mac_geMountainLion = <span class=\"regexp\">/Mac OS X 1\\d\\D([8-9]|\\d\\d)\\D/</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"keyword\">var</span> phantom = <span class=\"regexp\">/PhantomJS/</span>.test(navigator.userAgent);</span><br></pre></td></tr></table></figure>\n<h2 id=\"获取操作系统信息\"><a href=\"#获取操作系统信息\" class=\"headerlink\" title=\"获取操作系统信息\"></a>获取操作系统信息</h2> <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> ios = <span class=\"regexp\">/AppleWebKit/</span>.test(navigator.userAgent) &amp;&amp; <span class=\"regexp\">/Mobile\\/\\w+/</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"comment\">// This is woefully incomplete. Suggestions for alternative methods welcome.</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> mobile = ios || <span class=\"regexp\">/Android|webOS|BlackBerry|Opera Mini|Opera Mobi|IEMobile/i</span>.test(navigator.userAgent);</span><br><span class=\"line\"><span class=\"keyword\">var</span> mac = ios || <span class=\"regexp\">/Mac/</span>.test(navigator.platform);</span><br><span class=\"line\"><span class=\"keyword\">var</span> windows = <span class=\"regexp\">/win/i</span>.test(navigator.platform);</span><br></pre></td></tr></table></figure>"},{"title":"Jar转exe","date":"2013-11-24T13:28:01.000Z","comments":1,"toc":true,"_content":"\n最近使用exe4j将java执行文件“jar”转为“exe”执行文件收获良多。在网上有关这反面的资料还是相对比较少，尤其是通过在Eclipse中通过ANT构建那更是少之又少而且起不到实际的帮助作用。通过一晚上的研究颇有成功和心得，现在记录下来以备以后忘记也和大家一起共享下。\n<!--more-->\n\n## 前言\n***为什么要将Jar转成exe执行文件***\n1、  开发人员开发出来的软件一般都是给普通用户使用，而普通用户一般都是使用的window系统。而exe是window系统上的可执行文件，根据符合大众的习惯和常识。\n\n2、从商业软件的角度来说 对于普通用户而言 jar还是有很多不方便的地方比如说用户的机器.jar格式文件是默认以其它方式打开(如rar), 那么双击jar文件时就不能正常运行再比如说用户没有装jre, 那么程序不能运行，且不能给出友好的提示而如果是exe的话，由于没装jre而不能运行的话，则可以友好的告诉用户还没安装jre 提示安装\n\n3、  引用程序图标问题jar执行文件不能更改图标而exe是可以的。\n\n## 安装exe4j\n\n1、  下载exe4j并进行安装\n[exe4j下载路径](http://www.ej-technologies.com/download/exe4j/files)选择符合自己操作系统的安装程序。如何安装在这就不多说了直接一直按next就ok了。\n\n## Jar转exe\n1、准备好需要转换成exe的jar前提条件就是要保证jar值可执行的文件不能是一个错误的jar包\n2、运行exe4j打开的界面如下图\n![exe4j](d0c8a786c9177f3ea3573f0c72cf3bc79f3d5654.jpg)\n3、获取license\n![获取license](a686c9177f3e67090c1786fe39c79f3df8dc5598.jpg)\n4、点击Next进入下一步\n![exe4j](f2deb48f8c5494ee6c91cc182ff5e0fe99257e04.jpg)\n在这个界面中我们将选择“JAR”in“EXE”mode选项\n5、点击Next进入下一步\n![exe4j](ac6eddc451da81cbd80640cc5066d016082431cb.jpg)\n6、点击Next继续下一步\n![exe4j](d0c8a786c9177f3ea39a3f0c72cf3bc79f3d5601.jpg)\nIcon File是选择应用程序的图标\nExecutable name 是应用程序的名称\n在Advanced Options选项中我们选择32-bit or 64-bit这样更好的兼容的兼容系统，选择32-bit or 64-bit后进来界面\n![exe4j](4610b912c8fcc3ce12f40b329045d688d43f20ff.jpg)\n7、点击Next继续下一步\n![exe4j](c83d70cf3bc79f3d30562631b8a1cd11728b2978.jpg)\n8、点击Next继续下一步\n![exe4j](0df431adcbef760930385b9e2cdda3cc7cd99e84.jpg)\n点击界面中的“＋”号选择目标Jar文件\n![exe4j](2e2eb9389b504fc259ec7204e7dde71190ef6d04.jpg)\n选择Main函数所在的class类文件\n![exe4j](4d086e061d950a7b2a1a8cc508d162d9f2d3c980.jpg)\nVM Parameters是有关虚拟机的一些设置参数在这里我们可以不填直接按Next\n9、点击Next继续下一步\n![exe4j](7a899e510fb30f24acb42e02ca95d143ad4b0381.jpg)\n在这里 Minimum version 和Maximum version 是输入的Jre的最小和最大版本\n10、点击Next继续下一步\n![exe4j](b151f8198618367acea2bddc2c738bd4b31ce58c.jpg)\n11、点击Next继续下一步\n![exe4j](96dda144ad345982c72127930ef431adcbef840c.jpg)\n12、点击Next继续下一步\n![exe4j](e4dde71190ef76c63577392a9f16fdfaaf51670e.jpg)\n稍等片刻就到了下个界面\n![exe4j](96dda144ad345982c7ab27930ef431adcbef848a.jpg)\n点击Click Here to Start the Application 进行测试\n![exe4j](c8ea15ce36d3d539d610c2c23887e950352ab086.jpg)\n测试运行\n![exe4j](c8ea15ce36d3d539d7c2cdc23887e950352ab030.jpg)\n测试成功。\n\n我们在来看看我们设置的输出路径看看我们的文件有没有生成，呵呵文件果然生成了\n![win.exe](5bafa40f4bfbfbed5277fb7e7af0f736afc31f81.jpg)\n点击win.exe\n![win.exe](1e30e924b899a90168ce99371f950a7b0208f53c.jpg)\n\n## Ant自动构建EXE\n### 新建项目\n创建好工程目录并写Mian函数类\n![java工程](4ec2d5628535e5dd690b68de74c6a7efce1b6288.jpg)\n### 获取exe4j的配置文件\n运行exe4j\n![运行exe4j](3b87e950352ac65c7624ab72f9f2b21193138a8a.jpg)\n点击Open选择exe4j的配置文件\n我们选择exe4j安装目录下的/config/template.exe4j，一直按照上面的操作重新做一遍这里就不做重复最后点击关闭\n![运行exe4j](42166d224f4a20a4063cf1c692529822720ed095.jpg)\n弹出对话框我们选择保存\n在到template.exe4j所在目录复制template.exe4j到Eclipse工程config/template/目录下，我们也可以看看template.exe4j文件的内容选择文件右键文本文件打开。如下图就是我们刚才设置的一写参数，如果你对这些很熟当然也可直接在这里进行编辑。下面我们就会说到这这个文件里对参数进行编辑。\n\n我们需要对得到的配置文件进行先修改修改成如下，将修改好的文件放到Eclipse工程config/template目录下\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<exe4j version=\"4.5.2\" transformSequenceNumber=\"1\">\n  <directoryPresets config=\"H:/Program Files (x86)/Java\" />\n  <application name=\"PMS\" distributionSourceDir=\"@distributionSourceDir@\">\n    <languages>\n      <principalLanguage id=\"en\" customLocalizationFile=\"\" />\n    </languages>\n  </application>\n  <executable name=\"@app.name@\" type=\"2\" iconSet=\"true\" iconFile=\"@iconFile@\" executableDir=\"\" redirectStderr=\"true\" stderrFile=\"error.log\" stderrMode=\"overwrite\" redirectStdout=\"false\" stdoutFile=\"output.log\" stdoutMode=\"overwrite\" failOnStderrOutput=\"true\" executableMode=\"1\" changeWorkingDirectory=\"true\" workingDirectory=\".\" singleInstance=\"false\" serviceStartType=\"2\" serviceDependencies=\"\" serviceDescription=\"\" jreLocation=\"\" executionLevel=\"asInvoker\" checkConsoleParameter=\"false\" globalSingleInstance=\"false\" amd64=\"true\">\n    <messageSet />\n    <versionInfo include=\"false\" fileVersion=\"\" fileDescription=\"\" legalCopyright=\"\" internalName=\"\" productName=\"\" companyName=\"\" productVersion=\"\" />\n  </executable>\n  <splashScreen show=\"false\" autoOff=\"true\" alwaysOnTop=\"true\" width=\"0\" height=\"0\" bitmapFile=\"\" java6SplashScreen=\"false\">\n    <text>\n      <statusLine x=\"20\" y=\"20\" text=\"\" font=\"Arial\" fontSize=\"8\" fontColor=\"0,0,0\" fontWeight=\"500\" />\n      <versionLine x=\"20\" y=\"40\" text=\"version %VERSION%\" font=\"Arial\" fontSize=\"8\" fontColor=\"0,0,0\" fontWeight=\"500\" />\n    </text>\n  </splashScreen>\n  <java mainClass=\"@mianclass@\" vmParameters=\"\" arguments=\"\" allowVMPassthroughParameters=\"true\" preferredVM=\"client\" bundleRuntime=\"true\" minVersion=\"1.4\" maxVersion=\"1.7\" allowBetaVM=\"false\" jdkOnly=\"false\">\n    <searchSequence>\n      <registry />\n      <envVar name=\"JAVA_HOME\" />\n      <envVar name=\"JDK_HOME\" />\n      <directory location=\"H:/Program Files (x86)/Java/jre7\" />\n    </searchSequence>\n    <classPath>\n      <archive location=\"@todir@\" failOnError=\"false\" />\n    </classPath>\n    <nativeLibraryDirectories />\n  </java>\n  <includedFiles />\n  <unextractableFiles />\n</exe4j>\n```\n\n### build.xml\n```xml\n<?xml version=\"1.0\" encoding=\"GBK\"?>\n<project name=\"jar2exe\" basedir=\".\">\n\t<property file=\"build.properties\"/>\n\t<property name=\"lib.dir\" location=\"lib\"/>\n\t<property name=\"src.dir\" location=\"src\"/>\n\t<property name=\"dist.dir\" location=\"dist\"/>\n\t<property name=\"build.dir\" location=\"build\"/>\n\t<property name=\"config.dir\" location=\"config\"/>\n\t<property name=\"build.source\" value=\"1.5\" />\n\t<property name=\"build.target\" value=\"1.5\" />\n\t<property name=\"app.dir\" location=\"app\" />\n\t<property name=\"exe4j.template.dir\" location=\"config/template\"/>\n\t<path id=\"exe4j.path\">\n\t\t<pathelement path=\"${exe4j.ant.jar}\"/>\n\t</path>\n\t<target name=\"init\">\n\t\t<echo message=\"init\"/>\n\t\t<path id=\"base.path\"/>\n\t</target>\n    <target name=\"clean\" depends=\"init\">\n\t    <echo message=\"clean\"/>\n\t    <delete dir=\"${build.dir}\"/>\n\t    <delete dir=\"${dist.dir}\"/>\n    </target>\n    <target name=\"prepare\" depends=\"init,clean\">\n\t    <echo message=\"prepare\"/>\n\t    <mkdir dir=\"${build.dir}\"/>\n\t    <mkdir dir=\"${dist.dir}\"/>\n    </target>\n    <target name=\"build.exe4j\">\n\t\t<copy todir=\"${config.dir}\" overwrite=\"true\">\n\t\t\t<fileset dir=\"${exe4j.template.dir}\" includes=\"template.exe4j\" />\n\t\t</copy>\n\t\t<replace file=\"${config.dir}/template.exe4j\">\n\t\t\t<replacefilter token=\"@distributionSourceDir@\" value=\"${distributionSourceDir}\" />\n\t\t\t<replacefilter token=\"@app.name@\" value=\"${app.name}\" />\n\t\t\t<replacefilter token=\"@amd64@\" value=\"${amd64}\" />\n\t\t\t<replacefilter token=\"@iconFile@\" value=\"${iconFile}\" />\n\t\t\t<replacefilter token=\"@mianclass@\" value=\"${mianclass}\" />\n\t\t\t<replacefilter token=\"@todir@\" value=\"${todir}\" />\n \t\t</replace>\n    </target>\n\t\n\t <target name=\"copy-file\">\n\t \t<copy todir=\"${distributionSourceDir}/app\" overwrite=\"true\">\n\t\t\t<fileset dir=\"${app.dir}\">\n\t\t\t\t<include name=\"**/*\" />\n\t\t\t</fileset>\n  \t\t</copy>\n\t </target>\n\t  \n  <target name=\"javac-project\" depends=\"prepare,copy-file\">\n\t   <echo message=\"javac\"/>\n\t   <javac srcdir=\"${src.dir}\" verbose=\"true\" destdir=\"${build.dir}\" classpathref=\"base.path\"  optimize=\"true\" target=\"${build.target}\" source=\"${build.source}\" debuglevel=\"none\">\n\t\t\t<classpath>\n\t\t\t\t<fileset dir=\"${lib.dir}\">\n\t\t\t\t\t<include name=\"**/*jar\" />\n\t\t\t\t</fileset>\n\t\t\t\t<pathelement location=\"bin\" />\n\t\t\t</classpath>\n\t\t</javac>\n  </target>\n\t\n\t <target name=\"unjar\">\n\t\t<unjar src=\"${lib.dir}/DJNativeSwing-SWT.jar\" dest=\"${build.dir}\"/>\n\t \t<unjar src=\"${lib.dir}/DJNativeSwing.jar\" dest=\"${build.dir}\"/>\n\t\t<unjar src=\"${lib.dir}/swt.zip\" dest=\"${build.dir}\"/>\n\t </target>\n\t\n\t  <target name=\"jar-project\"  depends=\"javac-project,unjar\">\n\t\t   <echo message=\"jar-project\"/>\n\t\t   <jar jarfile=\"${dist.dir}/FileManager.jar\">\n\t\t\t    <fileset dir=\"${build.dir}\">\n\t\t\t\t     <include name=\"**/*.class\"/>\n\t\t\t\t     <include name=\"**/*.t\"/>\n\t\t\t    \t <include name=\"**/*.gif\"/>\n\t\t\t    \t <include name=\"**/*.png\"/>\n\t\t\t    \t <include name=\"**/*.jpg\"/>\n\t\t\t    \t <include name=\"**/*.dll\"/>\n\t\t\t\t     <!-- msutil.jar中的*.properties必须包含进来，否则运行时出错-->\n\t\t\t\t     <include name=\"**/*.properties\"/>\n\t\t\t    </fileset>\n\t\t  \t \t<manifest>\n\t                <attribute name=\"Class-Path\" value=\".\"/>\n\t                <attribute name=\"Main-Class\" value=\"${mianclass}\"/>\n\t            </manifest>\n\t\t   </jar>\n\t  </target>\n\t\n\t  <taskdef name=\"exe4j\" classname=\"com.exe4j.Exe4JTask\">\n\t   \t\t<classpath refid=\"exe4j.path\"/>\n\t  </taskdef>\n\t\n\t  <target name=\"jar2exe\" depends=\"build.exe4j,jar-project\">\n\t  \t \t<exe4j projectfile=\"${app.exe4j}\"/>\n\t  </target>\n\t\n\t  <target name=\"finish\" depends=\"jar2exe\">\n\t   \t\t<echo message=\"finish\"/>\n\t  </target>\n</project>\n```\n### build.properties\n文件内容已经参数说明\n```properties\n#exe4j ant jar包路径\nexe4j.ant.jar=H:/ProgramFiles(x86)/exe4j/bin/ant.jar\n#文件保存路径\ndistributionSourceDir=C:/Users/yanwuyang/Desktop/test\n#exe4j模板配置文件路径\napp.template.exe4j=config/template/template.exe4j\n#exe4j配置文件路径\napp.exe4j=config/template.exe4j\n#应用程序main函数类路径\nmianclass=cn.com.win.Main\n#应用程序名称\napp.name=PMS\n#应用程序图标\niconFile=G:/image/ICO/4594/200.ico\n#jar输出路径\ntodir=F:/Users/yanwuyang/workspace/WinExample/res/PMS.jar\n```\n经过上面这几个步骤ANT自动构建算是完成了下面我们就运行下\n![finish](caef76094b36acaf525e5bfd7ed98d1001e99c71.jpg)\n点击finish\n![finish](023b5bb5c9ea15ce68f52d08b4003af33a87b29c.jpg)\n呵呵成功了到我们配置输出的目录看看生成exe的文件是否存在\n![finish](c8ea15ce36d3d539d688c2c23887e950352ab07e.jpg)\n","source":"_posts/Jar转exe.md","raw":"---\ntitle: Jar转exe\ndate: 2013-11-24 21:28:01\ncomments: true\ncategories: EXE4J\ntoc: true \n---\n\n最近使用exe4j将java执行文件“jar”转为“exe”执行文件收获良多。在网上有关这反面的资料还是相对比较少，尤其是通过在Eclipse中通过ANT构建那更是少之又少而且起不到实际的帮助作用。通过一晚上的研究颇有成功和心得，现在记录下来以备以后忘记也和大家一起共享下。\n<!--more-->\n\n## 前言\n***为什么要将Jar转成exe执行文件***\n1、  开发人员开发出来的软件一般都是给普通用户使用，而普通用户一般都是使用的window系统。而exe是window系统上的可执行文件，根据符合大众的习惯和常识。\n\n2、从商业软件的角度来说 对于普通用户而言 jar还是有很多不方便的地方比如说用户的机器.jar格式文件是默认以其它方式打开(如rar), 那么双击jar文件时就不能正常运行再比如说用户没有装jre, 那么程序不能运行，且不能给出友好的提示而如果是exe的话，由于没装jre而不能运行的话，则可以友好的告诉用户还没安装jre 提示安装\n\n3、  引用程序图标问题jar执行文件不能更改图标而exe是可以的。\n\n## 安装exe4j\n\n1、  下载exe4j并进行安装\n[exe4j下载路径](http://www.ej-technologies.com/download/exe4j/files)选择符合自己操作系统的安装程序。如何安装在这就不多说了直接一直按next就ok了。\n\n## Jar转exe\n1、准备好需要转换成exe的jar前提条件就是要保证jar值可执行的文件不能是一个错误的jar包\n2、运行exe4j打开的界面如下图\n![exe4j](d0c8a786c9177f3ea3573f0c72cf3bc79f3d5654.jpg)\n3、获取license\n![获取license](a686c9177f3e67090c1786fe39c79f3df8dc5598.jpg)\n4、点击Next进入下一步\n![exe4j](f2deb48f8c5494ee6c91cc182ff5e0fe99257e04.jpg)\n在这个界面中我们将选择“JAR”in“EXE”mode选项\n5、点击Next进入下一步\n![exe4j](ac6eddc451da81cbd80640cc5066d016082431cb.jpg)\n6、点击Next继续下一步\n![exe4j](d0c8a786c9177f3ea39a3f0c72cf3bc79f3d5601.jpg)\nIcon File是选择应用程序的图标\nExecutable name 是应用程序的名称\n在Advanced Options选项中我们选择32-bit or 64-bit这样更好的兼容的兼容系统，选择32-bit or 64-bit后进来界面\n![exe4j](4610b912c8fcc3ce12f40b329045d688d43f20ff.jpg)\n7、点击Next继续下一步\n![exe4j](c83d70cf3bc79f3d30562631b8a1cd11728b2978.jpg)\n8、点击Next继续下一步\n![exe4j](0df431adcbef760930385b9e2cdda3cc7cd99e84.jpg)\n点击界面中的“＋”号选择目标Jar文件\n![exe4j](2e2eb9389b504fc259ec7204e7dde71190ef6d04.jpg)\n选择Main函数所在的class类文件\n![exe4j](4d086e061d950a7b2a1a8cc508d162d9f2d3c980.jpg)\nVM Parameters是有关虚拟机的一些设置参数在这里我们可以不填直接按Next\n9、点击Next继续下一步\n![exe4j](7a899e510fb30f24acb42e02ca95d143ad4b0381.jpg)\n在这里 Minimum version 和Maximum version 是输入的Jre的最小和最大版本\n10、点击Next继续下一步\n![exe4j](b151f8198618367acea2bddc2c738bd4b31ce58c.jpg)\n11、点击Next继续下一步\n![exe4j](96dda144ad345982c72127930ef431adcbef840c.jpg)\n12、点击Next继续下一步\n![exe4j](e4dde71190ef76c63577392a9f16fdfaaf51670e.jpg)\n稍等片刻就到了下个界面\n![exe4j](96dda144ad345982c7ab27930ef431adcbef848a.jpg)\n点击Click Here to Start the Application 进行测试\n![exe4j](c8ea15ce36d3d539d610c2c23887e950352ab086.jpg)\n测试运行\n![exe4j](c8ea15ce36d3d539d7c2cdc23887e950352ab030.jpg)\n测试成功。\n\n我们在来看看我们设置的输出路径看看我们的文件有没有生成，呵呵文件果然生成了\n![win.exe](5bafa40f4bfbfbed5277fb7e7af0f736afc31f81.jpg)\n点击win.exe\n![win.exe](1e30e924b899a90168ce99371f950a7b0208f53c.jpg)\n\n## Ant自动构建EXE\n### 新建项目\n创建好工程目录并写Mian函数类\n![java工程](4ec2d5628535e5dd690b68de74c6a7efce1b6288.jpg)\n### 获取exe4j的配置文件\n运行exe4j\n![运行exe4j](3b87e950352ac65c7624ab72f9f2b21193138a8a.jpg)\n点击Open选择exe4j的配置文件\n我们选择exe4j安装目录下的/config/template.exe4j，一直按照上面的操作重新做一遍这里就不做重复最后点击关闭\n![运行exe4j](42166d224f4a20a4063cf1c692529822720ed095.jpg)\n弹出对话框我们选择保存\n在到template.exe4j所在目录复制template.exe4j到Eclipse工程config/template/目录下，我们也可以看看template.exe4j文件的内容选择文件右键文本文件打开。如下图就是我们刚才设置的一写参数，如果你对这些很熟当然也可直接在这里进行编辑。下面我们就会说到这这个文件里对参数进行编辑。\n\n我们需要对得到的配置文件进行先修改修改成如下，将修改好的文件放到Eclipse工程config/template目录下\n```xml\n<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<exe4j version=\"4.5.2\" transformSequenceNumber=\"1\">\n  <directoryPresets config=\"H:/Program Files (x86)/Java\" />\n  <application name=\"PMS\" distributionSourceDir=\"@distributionSourceDir@\">\n    <languages>\n      <principalLanguage id=\"en\" customLocalizationFile=\"\" />\n    </languages>\n  </application>\n  <executable name=\"@app.name@\" type=\"2\" iconSet=\"true\" iconFile=\"@iconFile@\" executableDir=\"\" redirectStderr=\"true\" stderrFile=\"error.log\" stderrMode=\"overwrite\" redirectStdout=\"false\" stdoutFile=\"output.log\" stdoutMode=\"overwrite\" failOnStderrOutput=\"true\" executableMode=\"1\" changeWorkingDirectory=\"true\" workingDirectory=\".\" singleInstance=\"false\" serviceStartType=\"2\" serviceDependencies=\"\" serviceDescription=\"\" jreLocation=\"\" executionLevel=\"asInvoker\" checkConsoleParameter=\"false\" globalSingleInstance=\"false\" amd64=\"true\">\n    <messageSet />\n    <versionInfo include=\"false\" fileVersion=\"\" fileDescription=\"\" legalCopyright=\"\" internalName=\"\" productName=\"\" companyName=\"\" productVersion=\"\" />\n  </executable>\n  <splashScreen show=\"false\" autoOff=\"true\" alwaysOnTop=\"true\" width=\"0\" height=\"0\" bitmapFile=\"\" java6SplashScreen=\"false\">\n    <text>\n      <statusLine x=\"20\" y=\"20\" text=\"\" font=\"Arial\" fontSize=\"8\" fontColor=\"0,0,0\" fontWeight=\"500\" />\n      <versionLine x=\"20\" y=\"40\" text=\"version %VERSION%\" font=\"Arial\" fontSize=\"8\" fontColor=\"0,0,0\" fontWeight=\"500\" />\n    </text>\n  </splashScreen>\n  <java mainClass=\"@mianclass@\" vmParameters=\"\" arguments=\"\" allowVMPassthroughParameters=\"true\" preferredVM=\"client\" bundleRuntime=\"true\" minVersion=\"1.4\" maxVersion=\"1.7\" allowBetaVM=\"false\" jdkOnly=\"false\">\n    <searchSequence>\n      <registry />\n      <envVar name=\"JAVA_HOME\" />\n      <envVar name=\"JDK_HOME\" />\n      <directory location=\"H:/Program Files (x86)/Java/jre7\" />\n    </searchSequence>\n    <classPath>\n      <archive location=\"@todir@\" failOnError=\"false\" />\n    </classPath>\n    <nativeLibraryDirectories />\n  </java>\n  <includedFiles />\n  <unextractableFiles />\n</exe4j>\n```\n\n### build.xml\n```xml\n<?xml version=\"1.0\" encoding=\"GBK\"?>\n<project name=\"jar2exe\" basedir=\".\">\n\t<property file=\"build.properties\"/>\n\t<property name=\"lib.dir\" location=\"lib\"/>\n\t<property name=\"src.dir\" location=\"src\"/>\n\t<property name=\"dist.dir\" location=\"dist\"/>\n\t<property name=\"build.dir\" location=\"build\"/>\n\t<property name=\"config.dir\" location=\"config\"/>\n\t<property name=\"build.source\" value=\"1.5\" />\n\t<property name=\"build.target\" value=\"1.5\" />\n\t<property name=\"app.dir\" location=\"app\" />\n\t<property name=\"exe4j.template.dir\" location=\"config/template\"/>\n\t<path id=\"exe4j.path\">\n\t\t<pathelement path=\"${exe4j.ant.jar}\"/>\n\t</path>\n\t<target name=\"init\">\n\t\t<echo message=\"init\"/>\n\t\t<path id=\"base.path\"/>\n\t</target>\n    <target name=\"clean\" depends=\"init\">\n\t    <echo message=\"clean\"/>\n\t    <delete dir=\"${build.dir}\"/>\n\t    <delete dir=\"${dist.dir}\"/>\n    </target>\n    <target name=\"prepare\" depends=\"init,clean\">\n\t    <echo message=\"prepare\"/>\n\t    <mkdir dir=\"${build.dir}\"/>\n\t    <mkdir dir=\"${dist.dir}\"/>\n    </target>\n    <target name=\"build.exe4j\">\n\t\t<copy todir=\"${config.dir}\" overwrite=\"true\">\n\t\t\t<fileset dir=\"${exe4j.template.dir}\" includes=\"template.exe4j\" />\n\t\t</copy>\n\t\t<replace file=\"${config.dir}/template.exe4j\">\n\t\t\t<replacefilter token=\"@distributionSourceDir@\" value=\"${distributionSourceDir}\" />\n\t\t\t<replacefilter token=\"@app.name@\" value=\"${app.name}\" />\n\t\t\t<replacefilter token=\"@amd64@\" value=\"${amd64}\" />\n\t\t\t<replacefilter token=\"@iconFile@\" value=\"${iconFile}\" />\n\t\t\t<replacefilter token=\"@mianclass@\" value=\"${mianclass}\" />\n\t\t\t<replacefilter token=\"@todir@\" value=\"${todir}\" />\n \t\t</replace>\n    </target>\n\t\n\t <target name=\"copy-file\">\n\t \t<copy todir=\"${distributionSourceDir}/app\" overwrite=\"true\">\n\t\t\t<fileset dir=\"${app.dir}\">\n\t\t\t\t<include name=\"**/*\" />\n\t\t\t</fileset>\n  \t\t</copy>\n\t </target>\n\t  \n  <target name=\"javac-project\" depends=\"prepare,copy-file\">\n\t   <echo message=\"javac\"/>\n\t   <javac srcdir=\"${src.dir}\" verbose=\"true\" destdir=\"${build.dir}\" classpathref=\"base.path\"  optimize=\"true\" target=\"${build.target}\" source=\"${build.source}\" debuglevel=\"none\">\n\t\t\t<classpath>\n\t\t\t\t<fileset dir=\"${lib.dir}\">\n\t\t\t\t\t<include name=\"**/*jar\" />\n\t\t\t\t</fileset>\n\t\t\t\t<pathelement location=\"bin\" />\n\t\t\t</classpath>\n\t\t</javac>\n  </target>\n\t\n\t <target name=\"unjar\">\n\t\t<unjar src=\"${lib.dir}/DJNativeSwing-SWT.jar\" dest=\"${build.dir}\"/>\n\t \t<unjar src=\"${lib.dir}/DJNativeSwing.jar\" dest=\"${build.dir}\"/>\n\t\t<unjar src=\"${lib.dir}/swt.zip\" dest=\"${build.dir}\"/>\n\t </target>\n\t\n\t  <target name=\"jar-project\"  depends=\"javac-project,unjar\">\n\t\t   <echo message=\"jar-project\"/>\n\t\t   <jar jarfile=\"${dist.dir}/FileManager.jar\">\n\t\t\t    <fileset dir=\"${build.dir}\">\n\t\t\t\t     <include name=\"**/*.class\"/>\n\t\t\t\t     <include name=\"**/*.t\"/>\n\t\t\t    \t <include name=\"**/*.gif\"/>\n\t\t\t    \t <include name=\"**/*.png\"/>\n\t\t\t    \t <include name=\"**/*.jpg\"/>\n\t\t\t    \t <include name=\"**/*.dll\"/>\n\t\t\t\t     <!-- msutil.jar中的*.properties必须包含进来，否则运行时出错-->\n\t\t\t\t     <include name=\"**/*.properties\"/>\n\t\t\t    </fileset>\n\t\t  \t \t<manifest>\n\t                <attribute name=\"Class-Path\" value=\".\"/>\n\t                <attribute name=\"Main-Class\" value=\"${mianclass}\"/>\n\t            </manifest>\n\t\t   </jar>\n\t  </target>\n\t\n\t  <taskdef name=\"exe4j\" classname=\"com.exe4j.Exe4JTask\">\n\t   \t\t<classpath refid=\"exe4j.path\"/>\n\t  </taskdef>\n\t\n\t  <target name=\"jar2exe\" depends=\"build.exe4j,jar-project\">\n\t  \t \t<exe4j projectfile=\"${app.exe4j}\"/>\n\t  </target>\n\t\n\t  <target name=\"finish\" depends=\"jar2exe\">\n\t   \t\t<echo message=\"finish\"/>\n\t  </target>\n</project>\n```\n### build.properties\n文件内容已经参数说明\n```properties\n#exe4j ant jar包路径\nexe4j.ant.jar=H:/ProgramFiles(x86)/exe4j/bin/ant.jar\n#文件保存路径\ndistributionSourceDir=C:/Users/yanwuyang/Desktop/test\n#exe4j模板配置文件路径\napp.template.exe4j=config/template/template.exe4j\n#exe4j配置文件路径\napp.exe4j=config/template.exe4j\n#应用程序main函数类路径\nmianclass=cn.com.win.Main\n#应用程序名称\napp.name=PMS\n#应用程序图标\niconFile=G:/image/ICO/4594/200.ico\n#jar输出路径\ntodir=F:/Users/yanwuyang/workspace/WinExample/res/PMS.jar\n```\n经过上面这几个步骤ANT自动构建算是完成了下面我们就运行下\n![finish](caef76094b36acaf525e5bfd7ed98d1001e99c71.jpg)\n点击finish\n![finish](023b5bb5c9ea15ce68f52d08b4003af33a87b29c.jpg)\n呵呵成功了到我们配置输出的目录看看生成exe的文件是否存在\n![finish](c8ea15ce36d3d539d688c2c23887e950352ab07e.jpg)\n","slug":"Jar转exe","published":1,"updated":"2016-05-14T09:24:01.462Z","_id":"cio6wx4eq000i4kybsc7a3fm2","layout":"post","photos":[],"link":"","content":"<p>最近使用exe4j将java执行文件“jar”转为“exe”执行文件收获良多。在网上有关这反面的资料还是相对比较少，尤其是通过在Eclipse中通过ANT构建那更是少之又少而且起不到实际的帮助作用。通过一晚上的研究颇有成功和心得，现在记录下来以备以后忘记也和大家一起共享下。<br><a id=\"more\"></a></p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p><strong><em>为什么要将Jar转成exe执行文件</em></strong><br>1、  开发人员开发出来的软件一般都是给普通用户使用，而普通用户一般都是使用的window系统。而exe是window系统上的可执行文件，根据符合大众的习惯和常识。</p>\n<p>2、从商业软件的角度来说 对于普通用户而言 jar还是有很多不方便的地方比如说用户的机器.jar格式文件是默认以其它方式打开(如rar), 那么双击jar文件时就不能正常运行再比如说用户没有装jre, 那么程序不能运行，且不能给出友好的提示而如果是exe的话，由于没装jre而不能运行的话，则可以友好的告诉用户还没安装jre 提示安装</p>\n<p>3、  引用程序图标问题jar执行文件不能更改图标而exe是可以的。</p>\n<h2 id=\"安装exe4j\"><a href=\"#安装exe4j\" class=\"headerlink\" title=\"安装exe4j\"></a>安装exe4j</h2><p>1、  下载exe4j并进行安装<br><a href=\"http://www.ej-technologies.com/download/exe4j/files\" target=\"_blank\" rel=\"external\">exe4j下载路径</a>选择符合自己操作系统的安装程序。如何安装在这就不多说了直接一直按next就ok了。</p>\n<h2 id=\"Jar转exe\"><a href=\"#Jar转exe\" class=\"headerlink\" title=\"Jar转exe\"></a>Jar转exe</h2><p>1、准备好需要转换成exe的jar前提条件就是要保证jar值可执行的文件不能是一个错误的jar包<br>2、运行exe4j打开的界面如下图<br><img src=\"d0c8a786c9177f3ea3573f0c72cf3bc79f3d5654.jpg\" alt=\"exe4j\"><br>3、获取license<br><img src=\"a686c9177f3e67090c1786fe39c79f3df8dc5598.jpg\" alt=\"获取license\"><br>4、点击Next进入下一步<br><img src=\"f2deb48f8c5494ee6c91cc182ff5e0fe99257e04.jpg\" alt=\"exe4j\"><br>在这个界面中我们将选择“JAR”in“EXE”mode选项<br>5、点击Next进入下一步<br><img src=\"ac6eddc451da81cbd80640cc5066d016082431cb.jpg\" alt=\"exe4j\"><br>6、点击Next继续下一步<br><img src=\"d0c8a786c9177f3ea39a3f0c72cf3bc79f3d5601.jpg\" alt=\"exe4j\"><br>Icon File是选择应用程序的图标<br>Executable name 是应用程序的名称<br>在Advanced Options选项中我们选择32-bit or 64-bit这样更好的兼容的兼容系统，选择32-bit or 64-bit后进来界面<br><img src=\"4610b912c8fcc3ce12f40b329045d688d43f20ff.jpg\" alt=\"exe4j\"><br>7、点击Next继续下一步<br><img src=\"c83d70cf3bc79f3d30562631b8a1cd11728b2978.jpg\" alt=\"exe4j\"><br>8、点击Next继续下一步<br><img src=\"0df431adcbef760930385b9e2cdda3cc7cd99e84.jpg\" alt=\"exe4j\"><br>点击界面中的“＋”号选择目标Jar文件<br><img src=\"2e2eb9389b504fc259ec7204e7dde71190ef6d04.jpg\" alt=\"exe4j\"><br>选择Main函数所在的class类文件<br><img src=\"4d086e061d950a7b2a1a8cc508d162d9f2d3c980.jpg\" alt=\"exe4j\"><br>VM Parameters是有关虚拟机的一些设置参数在这里我们可以不填直接按Next<br>9、点击Next继续下一步<br><img src=\"7a899e510fb30f24acb42e02ca95d143ad4b0381.jpg\" alt=\"exe4j\"><br>在这里 Minimum version 和Maximum version 是输入的Jre的最小和最大版本<br>10、点击Next继续下一步<br><img src=\"b151f8198618367acea2bddc2c738bd4b31ce58c.jpg\" alt=\"exe4j\"><br>11、点击Next继续下一步<br><img src=\"96dda144ad345982c72127930ef431adcbef840c.jpg\" alt=\"exe4j\"><br>12、点击Next继续下一步<br><img src=\"e4dde71190ef76c63577392a9f16fdfaaf51670e.jpg\" alt=\"exe4j\"><br>稍等片刻就到了下个界面<br><img src=\"96dda144ad345982c7ab27930ef431adcbef848a.jpg\" alt=\"exe4j\"><br>点击Click Here to Start the Application 进行测试<br><img src=\"c8ea15ce36d3d539d610c2c23887e950352ab086.jpg\" alt=\"exe4j\"><br>测试运行<br><img src=\"c8ea15ce36d3d539d7c2cdc23887e950352ab030.jpg\" alt=\"exe4j\"><br>测试成功。</p>\n<p>我们在来看看我们设置的输出路径看看我们的文件有没有生成，呵呵文件果然生成了<br><img src=\"5bafa40f4bfbfbed5277fb7e7af0f736afc31f81.jpg\" alt=\"win.exe\"><br>点击win.exe<br><img src=\"1e30e924b899a90168ce99371f950a7b0208f53c.jpg\" alt=\"win.exe\"></p>\n<h2 id=\"Ant自动构建EXE\"><a href=\"#Ant自动构建EXE\" class=\"headerlink\" title=\"Ant自动构建EXE\"></a>Ant自动构建EXE</h2><h3 id=\"新建项目\"><a href=\"#新建项目\" class=\"headerlink\" title=\"新建项目\"></a>新建项目</h3><p>创建好工程目录并写Mian函数类<br><img src=\"4ec2d5628535e5dd690b68de74c6a7efce1b6288.jpg\" alt=\"java工程\"></p>\n<h3 id=\"获取exe4j的配置文件\"><a href=\"#获取exe4j的配置文件\" class=\"headerlink\" title=\"获取exe4j的配置文件\"></a>获取exe4j的配置文件</h3><p>运行exe4j<br><img src=\"3b87e950352ac65c7624ab72f9f2b21193138a8a.jpg\" alt=\"运行exe4j\"><br>点击Open选择exe4j的配置文件<br>我们选择exe4j安装目录下的/config/template.exe4j，一直按照上面的操作重新做一遍这里就不做重复最后点击关闭<br><img src=\"42166d224f4a20a4063cf1c692529822720ed095.jpg\" alt=\"运行exe4j\"><br>弹出对话框我们选择保存<br>在到template.exe4j所在目录复制template.exe4j到Eclipse工程config/template/目录下，我们也可以看看template.exe4j文件的内容选择文件右键文本文件打开。如下图就是我们刚才设置的一写参数，如果你对这些很熟当然也可直接在这里进行编辑。下面我们就会说到这这个文件里对参数进行编辑。</p>\n<p>我们需要对得到的配置文件进行先修改修改成如下，将修改好的文件放到Eclipse工程config/template目录下<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">exe4j</span> <span class=\"attr\">version</span>=<span class=\"string\">\"4.5.2\"</span> <span class=\"attr\">transformSequenceNumber</span>=<span class=\"string\">\"1\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">directoryPresets</span> <span class=\"attr\">config</span>=<span class=\"string\">\"H:/Program Files (x86)/Java\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">application</span> <span class=\"attr\">name</span>=<span class=\"string\">\"PMS\"</span> <span class=\"attr\">distributionSourceDir</span>=<span class=\"string\">\"@distributionSourceDir@\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">languages</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">principalLanguage</span> <span class=\"attr\">id</span>=<span class=\"string\">\"en\"</span> <span class=\"attr\">customLocalizationFile</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">languages</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">application</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">executable</span> <span class=\"attr\">name</span>=<span class=\"string\">\"@app.name@\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">iconSet</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">iconFile</span>=<span class=\"string\">\"@iconFile@\"</span> <span class=\"attr\">executableDir</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">redirectStderr</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">stderrFile</span>=<span class=\"string\">\"error.log\"</span> <span class=\"attr\">stderrMode</span>=<span class=\"string\">\"overwrite\"</span> <span class=\"attr\">redirectStdout</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">stdoutFile</span>=<span class=\"string\">\"output.log\"</span> <span class=\"attr\">stdoutMode</span>=<span class=\"string\">\"overwrite\"</span> <span class=\"attr\">failOnStderrOutput</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">executableMode</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">changeWorkingDirectory</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">workingDirectory</span>=<span class=\"string\">\".\"</span> <span class=\"attr\">singleInstance</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">serviceStartType</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">serviceDependencies</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">serviceDescription</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">jreLocation</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">executionLevel</span>=<span class=\"string\">\"asInvoker\"</span> <span class=\"attr\">checkConsoleParameter</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">globalSingleInstance</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">amd64</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">messageSet</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">versionInfo</span> <span class=\"attr\">include</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">fileVersion</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">fileDescription</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">legalCopyright</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">internalName</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">productName</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">companyName</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">productVersion</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">executable</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">splashScreen</span> <span class=\"attr\">show</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">autoOff</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">alwaysOnTop</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">bitmapFile</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">java6SplashScreen</span>=<span class=\"string\">\"false\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">statusLine</span> <span class=\"attr\">x</span>=<span class=\"string\">\"20\"</span> <span class=\"attr\">y</span>=<span class=\"string\">\"20\"</span> <span class=\"attr\">text</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">font</span>=<span class=\"string\">\"Arial\"</span> <span class=\"attr\">fontSize</span>=<span class=\"string\">\"8\"</span> <span class=\"attr\">fontColor</span>=<span class=\"string\">\"0,0,0\"</span> <span class=\"attr\">fontWeight</span>=<span class=\"string\">\"500\"</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">versionLine</span> <span class=\"attr\">x</span>=<span class=\"string\">\"20\"</span> <span class=\"attr\">y</span>=<span class=\"string\">\"40\"</span> <span class=\"attr\">text</span>=<span class=\"string\">\"version %VERSION%\"</span> <span class=\"attr\">font</span>=<span class=\"string\">\"Arial\"</span> <span class=\"attr\">fontSize</span>=<span class=\"string\">\"8\"</span> <span class=\"attr\">fontColor</span>=<span class=\"string\">\"0,0,0\"</span> <span class=\"attr\">fontWeight</span>=<span class=\"string\">\"500\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">splashScreen</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">java</span> <span class=\"attr\">mainClass</span>=<span class=\"string\">\"@mianclass@\"</span> <span class=\"attr\">vmParameters</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">arguments</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">allowVMPassthroughParameters</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">preferredVM</span>=<span class=\"string\">\"client\"</span> <span class=\"attr\">bundleRuntime</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">minVersion</span>=<span class=\"string\">\"1.4\"</span> <span class=\"attr\">maxVersion</span>=<span class=\"string\">\"1.7\"</span> <span class=\"attr\">allowBetaVM</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">jdkOnly</span>=<span class=\"string\">\"false\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">searchSequence</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">registry</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">envVar</span> <span class=\"attr\">name</span>=<span class=\"string\">\"JAVA_HOME\"</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">envVar</span> <span class=\"attr\">name</span>=<span class=\"string\">\"JDK_HOME\"</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">directory</span> <span class=\"attr\">location</span>=<span class=\"string\">\"H:/Program Files (x86)/Java/jre7\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">searchSequence</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">classPath</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">archive</span> <span class=\"attr\">location</span>=<span class=\"string\">\"@todir@\"</span> <span class=\"attr\">failOnError</span>=<span class=\"string\">\"false\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">classPath</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">nativeLibraryDirectories</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">java</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">includedFiles</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">unextractableFiles</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">exe4j</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"build-xml\"><a href=\"#build-xml\" class=\"headerlink\" title=\"build.xml\"></a>build.xml</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"GBK\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jar2exe\"</span> <span class=\"attr\">basedir</span>=<span class=\"string\">\".\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">file</span>=<span class=\"string\">\"build.properties\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lib.dir\"</span> <span class=\"attr\">location</span>=<span class=\"string\">\"lib\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"src.dir\"</span> <span class=\"attr\">location</span>=<span class=\"string\">\"src\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dist.dir\"</span> <span class=\"attr\">location</span>=<span class=\"string\">\"dist\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"build.dir\"</span> <span class=\"attr\">location</span>=<span class=\"string\">\"build\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"config.dir\"</span> <span class=\"attr\">location</span>=<span class=\"string\">\"config\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"build.source\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1.5\"</span> /&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"build.target\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1.5\"</span> /&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"app.dir\"</span> <span class=\"attr\">location</span>=<span class=\"string\">\"app\"</span> /&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"exe4j.template.dir\"</span> <span class=\"attr\">location</span>=<span class=\"string\">\"config/template\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">id</span>=<span class=\"string\">\"exe4j.path\"</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">pathelement</span> <span class=\"attr\">path</span>=<span class=\"string\">\"$&#123;exe4j.ant.jar&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">path</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">target</span> <span class=\"attr\">name</span>=<span class=\"string\">\"init\"</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">echo</span> <span class=\"attr\">message</span>=<span class=\"string\">\"init\"</span>/&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">id</span>=<span class=\"string\">\"base.path\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">target</span> <span class=\"attr\">name</span>=<span class=\"string\">\"clean\"</span> <span class=\"attr\">depends</span>=<span class=\"string\">\"init\"</span>&gt;</span></span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">echo</span> <span class=\"attr\">message</span>=<span class=\"string\">\"clean\"</span>/&gt;</span></span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">delete</span> <span class=\"attr\">dir</span>=<span class=\"string\">\"$&#123;build.dir&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">delete</span> <span class=\"attr\">dir</span>=<span class=\"string\">\"$&#123;dist.dir&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">target</span> <span class=\"attr\">name</span>=<span class=\"string\">\"prepare\"</span> <span class=\"attr\">depends</span>=<span class=\"string\">\"init,clean\"</span>&gt;</span></span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">echo</span> <span class=\"attr\">message</span>=<span class=\"string\">\"prepare\"</span>/&gt;</span></span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">mkdir</span> <span class=\"attr\">dir</span>=<span class=\"string\">\"$&#123;build.dir&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">mkdir</span> <span class=\"attr\">dir</span>=<span class=\"string\">\"$&#123;dist.dir&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">target</span> <span class=\"attr\">name</span>=<span class=\"string\">\"build.exe4j\"</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">copy</span> <span class=\"attr\">todir</span>=<span class=\"string\">\"$&#123;config.dir&#125;\"</span> <span class=\"attr\">overwrite</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">fileset</span> <span class=\"attr\">dir</span>=<span class=\"string\">\"$&#123;exe4j.template.dir&#125;\"</span> <span class=\"attr\">includes</span>=<span class=\"string\">\"template.exe4j\"</span> /&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">copy</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">replace</span> <span class=\"attr\">file</span>=<span class=\"string\">\"$&#123;config.dir&#125;/template.exe4j\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">replacefilter</span> <span class=\"attr\">token</span>=<span class=\"string\">\"@distributionSourceDir@\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;distributionSourceDir&#125;\"</span> /&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">replacefilter</span> <span class=\"attr\">token</span>=<span class=\"string\">\"@app.name@\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;app.name&#125;\"</span> /&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">replacefilter</span> <span class=\"attr\">token</span>=<span class=\"string\">\"@amd64@\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;amd64&#125;\"</span> /&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">replacefilter</span> <span class=\"attr\">token</span>=<span class=\"string\">\"@iconFile@\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;iconFile&#125;\"</span> /&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">replacefilter</span> <span class=\"attr\">token</span>=<span class=\"string\">\"@mianclass@\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;mianclass&#125;\"</span> /&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">replacefilter</span> <span class=\"attr\">token</span>=<span class=\"string\">\"@todir@\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;todir&#125;\"</span> /&gt;</span></span><br><span class=\"line\"> \t\t<span class=\"tag\">&lt;/<span class=\"name\">replace</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t <span class=\"tag\">&lt;<span class=\"name\">target</span> <span class=\"attr\">name</span>=<span class=\"string\">\"copy-file\"</span>&gt;</span></span><br><span class=\"line\">\t \t<span class=\"tag\">&lt;<span class=\"name\">copy</span> <span class=\"attr\">todir</span>=<span class=\"string\">\"$&#123;distributionSourceDir&#125;/app\"</span> <span class=\"attr\">overwrite</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">fileset</span> <span class=\"attr\">dir</span>=<span class=\"string\">\"$&#123;app.dir&#125;\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">name</span>=<span class=\"string\">\"**/*\"</span> /&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">fileset</span>&gt;</span></span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;/<span class=\"name\">copy</span>&gt;</span></span><br><span class=\"line\">\t <span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">\t  </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">target</span> <span class=\"attr\">name</span>=<span class=\"string\">\"javac-project\"</span> <span class=\"attr\">depends</span>=<span class=\"string\">\"prepare,copy-file\"</span>&gt;</span></span><br><span class=\"line\">\t   <span class=\"tag\">&lt;<span class=\"name\">echo</span> <span class=\"attr\">message</span>=<span class=\"string\">\"javac\"</span>/&gt;</span></span><br><span class=\"line\">\t   <span class=\"tag\">&lt;<span class=\"name\">javac</span> <span class=\"attr\">srcdir</span>=<span class=\"string\">\"$&#123;src.dir&#125;\"</span> <span class=\"attr\">verbose</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">destdir</span>=<span class=\"string\">\"$&#123;build.dir&#125;\"</span> <span class=\"attr\">classpathref</span>=<span class=\"string\">\"base.path\"</span>  <span class=\"attr\">optimize</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">target</span>=<span class=\"string\">\"$&#123;build.target&#125;\"</span> <span class=\"attr\">source</span>=<span class=\"string\">\"$&#123;build.source&#125;\"</span> <span class=\"attr\">debuglevel</span>=<span class=\"string\">\"none\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">classpath</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">fileset</span> <span class=\"attr\">dir</span>=<span class=\"string\">\"$&#123;lib.dir&#125;\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">name</span>=<span class=\"string\">\"**/*jar\"</span> /&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">fileset</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">pathelement</span> <span class=\"attr\">location</span>=<span class=\"string\">\"bin\"</span> /&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">classpath</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">javac</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t <span class=\"tag\">&lt;<span class=\"name\">target</span> <span class=\"attr\">name</span>=<span class=\"string\">\"unjar\"</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">unjar</span> <span class=\"attr\">src</span>=<span class=\"string\">\"$&#123;lib.dir&#125;/DJNativeSwing-SWT.jar\"</span> <span class=\"attr\">dest</span>=<span class=\"string\">\"$&#123;build.dir&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t \t<span class=\"tag\">&lt;<span class=\"name\">unjar</span> <span class=\"attr\">src</span>=<span class=\"string\">\"$&#123;lib.dir&#125;/DJNativeSwing.jar\"</span> <span class=\"attr\">dest</span>=<span class=\"string\">\"$&#123;build.dir&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">unjar</span> <span class=\"attr\">src</span>=<span class=\"string\">\"$&#123;lib.dir&#125;/swt.zip\"</span> <span class=\"attr\">dest</span>=<span class=\"string\">\"$&#123;build.dir&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t <span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t  <span class=\"tag\">&lt;<span class=\"name\">target</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jar-project\"</span>  <span class=\"attr\">depends</span>=<span class=\"string\">\"javac-project,unjar\"</span>&gt;</span></span><br><span class=\"line\">\t\t   <span class=\"tag\">&lt;<span class=\"name\">echo</span> <span class=\"attr\">message</span>=<span class=\"string\">\"jar-project\"</span>/&gt;</span></span><br><span class=\"line\">\t\t   <span class=\"tag\">&lt;<span class=\"name\">jar</span> <span class=\"attr\">jarfile</span>=<span class=\"string\">\"$&#123;dist.dir&#125;/FileManager.jar\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t    <span class=\"tag\">&lt;<span class=\"name\">fileset</span> <span class=\"attr\">dir</span>=<span class=\"string\">\"$&#123;build.dir&#125;\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t     <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">name</span>=<span class=\"string\">\"**/*.class\"</span>/&gt;</span></span><br><span class=\"line\">\t\t\t\t     <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">name</span>=<span class=\"string\">\"**/*.t\"</span>/&gt;</span></span><br><span class=\"line\">\t\t\t    \t <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">name</span>=<span class=\"string\">\"**/*.gif\"</span>/&gt;</span></span><br><span class=\"line\">\t\t\t    \t <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">name</span>=<span class=\"string\">\"**/*.png\"</span>/&gt;</span></span><br><span class=\"line\">\t\t\t    \t <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">name</span>=<span class=\"string\">\"**/*.jpg\"</span>/&gt;</span></span><br><span class=\"line\">\t\t\t    \t <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">name</span>=<span class=\"string\">\"**/*.dll\"</span>/&gt;</span></span><br><span class=\"line\">\t\t\t\t     <span class=\"comment\">&lt;!-- msutil.jar中的*.properties必须包含进来，否则运行时出错--&gt;</span></span><br><span class=\"line\">\t\t\t\t     <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">name</span>=<span class=\"string\">\"**/*.properties\"</span>/&gt;</span></span><br><span class=\"line\">\t\t\t    <span class=\"tag\">&lt;/<span class=\"name\">fileset</span>&gt;</span></span><br><span class=\"line\">\t\t  \t \t<span class=\"tag\">&lt;<span class=\"name\">manifest</span>&gt;</span></span><br><span class=\"line\">\t                <span class=\"tag\">&lt;<span class=\"name\">attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Class-Path\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\".\"</span>/&gt;</span></span><br><span class=\"line\">\t                <span class=\"tag\">&lt;<span class=\"name\">attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Main-Class\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;mianclass&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t            <span class=\"tag\">&lt;/<span class=\"name\">manifest</span>&gt;</span></span><br><span class=\"line\">\t\t   <span class=\"tag\">&lt;/<span class=\"name\">jar</span>&gt;</span></span><br><span class=\"line\">\t  <span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t  <span class=\"tag\">&lt;<span class=\"name\">taskdef</span> <span class=\"attr\">name</span>=<span class=\"string\">\"exe4j\"</span> <span class=\"attr\">classname</span>=<span class=\"string\">\"com.exe4j.Exe4JTask\"</span>&gt;</span></span><br><span class=\"line\">\t   \t\t<span class=\"tag\">&lt;<span class=\"name\">classpath</span> <span class=\"attr\">refid</span>=<span class=\"string\">\"exe4j.path\"</span>/&gt;</span></span><br><span class=\"line\">\t  <span class=\"tag\">&lt;/<span class=\"name\">taskdef</span>&gt;</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t  <span class=\"tag\">&lt;<span class=\"name\">target</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jar2exe\"</span> <span class=\"attr\">depends</span>=<span class=\"string\">\"build.exe4j,jar-project\"</span>&gt;</span></span><br><span class=\"line\">\t  \t \t<span class=\"tag\">&lt;<span class=\"name\">exe4j</span> <span class=\"attr\">projectfile</span>=<span class=\"string\">\"$&#123;app.exe4j&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t  <span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t  <span class=\"tag\">&lt;<span class=\"name\">target</span> <span class=\"attr\">name</span>=<span class=\"string\">\"finish\"</span> <span class=\"attr\">depends</span>=<span class=\"string\">\"jar2exe\"</span>&gt;</span></span><br><span class=\"line\">\t   \t\t<span class=\"tag\">&lt;<span class=\"name\">echo</span> <span class=\"attr\">message</span>=<span class=\"string\">\"finish\"</span>/&gt;</span></span><br><span class=\"line\">\t  <span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"build-properties\"><a href=\"#build-properties\" class=\"headerlink\" title=\"build.properties\"></a>build.properties</h3><p>文件内容已经参数说明<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#exe4j ant jar包路径</span><br><span class=\"line\">exe4j.ant.jar=H:/ProgramFiles(x86)/exe4j/bin/ant.jar</span><br><span class=\"line\">#文件保存路径</span><br><span class=\"line\">distributionSourceDir=C:/Users/yanwuyang/Desktop/test</span><br><span class=\"line\">#exe4j模板配置文件路径</span><br><span class=\"line\">app.template.exe4j=config/template/template.exe4j</span><br><span class=\"line\">#exe4j配置文件路径</span><br><span class=\"line\">app.exe4j=config/template.exe4j</span><br><span class=\"line\">#应用程序main函数类路径</span><br><span class=\"line\">mianclass=cn.com.win.Main</span><br><span class=\"line\">#应用程序名称</span><br><span class=\"line\">app.name=PMS</span><br><span class=\"line\">#应用程序图标</span><br><span class=\"line\">iconFile=G:/image/ICO/4594/200.ico</span><br><span class=\"line\">#jar输出路径</span><br><span class=\"line\">todir=F:/Users/yanwuyang/workspace/WinExample/res/PMS.jar</span><br></pre></td></tr></table></figure></p>\n<p>经过上面这几个步骤ANT自动构建算是完成了下面我们就运行下<br><img src=\"caef76094b36acaf525e5bfd7ed98d1001e99c71.jpg\" alt=\"finish\"><br>点击finish<br><img src=\"023b5bb5c9ea15ce68f52d08b4003af33a87b29c.jpg\" alt=\"finish\"><br>呵呵成功了到我们配置输出的目录看看生成exe的文件是否存在<br><img src=\"c8ea15ce36d3d539d688c2c23887e950352ab07e.jpg\" alt=\"finish\"></p>\n","excerpt":"<p>最近使用exe4j将java执行文件“jar”转为“exe”执行文件收获良多。在网上有关这反面的资料还是相对比较少，尤其是通过在Eclipse中通过ANT构建那更是少之又少而且起不到实际的帮助作用。通过一晚上的研究颇有成功和心得，现在记录下来以备以后忘记也和大家一起共享下。<br>","more":"</p>\n<h2 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h2><p><strong><em>为什么要将Jar转成exe执行文件</em></strong><br>1、  开发人员开发出来的软件一般都是给普通用户使用，而普通用户一般都是使用的window系统。而exe是window系统上的可执行文件，根据符合大众的习惯和常识。</p>\n<p>2、从商业软件的角度来说 对于普通用户而言 jar还是有很多不方便的地方比如说用户的机器.jar格式文件是默认以其它方式打开(如rar), 那么双击jar文件时就不能正常运行再比如说用户没有装jre, 那么程序不能运行，且不能给出友好的提示而如果是exe的话，由于没装jre而不能运行的话，则可以友好的告诉用户还没安装jre 提示安装</p>\n<p>3、  引用程序图标问题jar执行文件不能更改图标而exe是可以的。</p>\n<h2 id=\"安装exe4j\"><a href=\"#安装exe4j\" class=\"headerlink\" title=\"安装exe4j\"></a>安装exe4j</h2><p>1、  下载exe4j并进行安装<br><a href=\"http://www.ej-technologies.com/download/exe4j/files\">exe4j下载路径</a>选择符合自己操作系统的安装程序。如何安装在这就不多说了直接一直按next就ok了。</p>\n<h2 id=\"Jar转exe\"><a href=\"#Jar转exe\" class=\"headerlink\" title=\"Jar转exe\"></a>Jar转exe</h2><p>1、准备好需要转换成exe的jar前提条件就是要保证jar值可执行的文件不能是一个错误的jar包<br>2、运行exe4j打开的界面如下图<br><img src=\"d0c8a786c9177f3ea3573f0c72cf3bc79f3d5654.jpg\" alt=\"exe4j\"><br>3、获取license<br><img src=\"a686c9177f3e67090c1786fe39c79f3df8dc5598.jpg\" alt=\"获取license\"><br>4、点击Next进入下一步<br><img src=\"f2deb48f8c5494ee6c91cc182ff5e0fe99257e04.jpg\" alt=\"exe4j\"><br>在这个界面中我们将选择“JAR”in“EXE”mode选项<br>5、点击Next进入下一步<br><img src=\"ac6eddc451da81cbd80640cc5066d016082431cb.jpg\" alt=\"exe4j\"><br>6、点击Next继续下一步<br><img src=\"d0c8a786c9177f3ea39a3f0c72cf3bc79f3d5601.jpg\" alt=\"exe4j\"><br>Icon File是选择应用程序的图标<br>Executable name 是应用程序的名称<br>在Advanced Options选项中我们选择32-bit or 64-bit这样更好的兼容的兼容系统，选择32-bit or 64-bit后进来界面<br><img src=\"4610b912c8fcc3ce12f40b329045d688d43f20ff.jpg\" alt=\"exe4j\"><br>7、点击Next继续下一步<br><img src=\"c83d70cf3bc79f3d30562631b8a1cd11728b2978.jpg\" alt=\"exe4j\"><br>8、点击Next继续下一步<br><img src=\"0df431adcbef760930385b9e2cdda3cc7cd99e84.jpg\" alt=\"exe4j\"><br>点击界面中的“＋”号选择目标Jar文件<br><img src=\"2e2eb9389b504fc259ec7204e7dde71190ef6d04.jpg\" alt=\"exe4j\"><br>选择Main函数所在的class类文件<br><img src=\"4d086e061d950a7b2a1a8cc508d162d9f2d3c980.jpg\" alt=\"exe4j\"><br>VM Parameters是有关虚拟机的一些设置参数在这里我们可以不填直接按Next<br>9、点击Next继续下一步<br><img src=\"7a899e510fb30f24acb42e02ca95d143ad4b0381.jpg\" alt=\"exe4j\"><br>在这里 Minimum version 和Maximum version 是输入的Jre的最小和最大版本<br>10、点击Next继续下一步<br><img src=\"b151f8198618367acea2bddc2c738bd4b31ce58c.jpg\" alt=\"exe4j\"><br>11、点击Next继续下一步<br><img src=\"96dda144ad345982c72127930ef431adcbef840c.jpg\" alt=\"exe4j\"><br>12、点击Next继续下一步<br><img src=\"e4dde71190ef76c63577392a9f16fdfaaf51670e.jpg\" alt=\"exe4j\"><br>稍等片刻就到了下个界面<br><img src=\"96dda144ad345982c7ab27930ef431adcbef848a.jpg\" alt=\"exe4j\"><br>点击Click Here to Start the Application 进行测试<br><img src=\"c8ea15ce36d3d539d610c2c23887e950352ab086.jpg\" alt=\"exe4j\"><br>测试运行<br><img src=\"c8ea15ce36d3d539d7c2cdc23887e950352ab030.jpg\" alt=\"exe4j\"><br>测试成功。</p>\n<p>我们在来看看我们设置的输出路径看看我们的文件有没有生成，呵呵文件果然生成了<br><img src=\"5bafa40f4bfbfbed5277fb7e7af0f736afc31f81.jpg\" alt=\"win.exe\"><br>点击win.exe<br><img src=\"1e30e924b899a90168ce99371f950a7b0208f53c.jpg\" alt=\"win.exe\"></p>\n<h2 id=\"Ant自动构建EXE\"><a href=\"#Ant自动构建EXE\" class=\"headerlink\" title=\"Ant自动构建EXE\"></a>Ant自动构建EXE</h2><h3 id=\"新建项目\"><a href=\"#新建项目\" class=\"headerlink\" title=\"新建项目\"></a>新建项目</h3><p>创建好工程目录并写Mian函数类<br><img src=\"4ec2d5628535e5dd690b68de74c6a7efce1b6288.jpg\" alt=\"java工程\"></p>\n<h3 id=\"获取exe4j的配置文件\"><a href=\"#获取exe4j的配置文件\" class=\"headerlink\" title=\"获取exe4j的配置文件\"></a>获取exe4j的配置文件</h3><p>运行exe4j<br><img src=\"3b87e950352ac65c7624ab72f9f2b21193138a8a.jpg\" alt=\"运行exe4j\"><br>点击Open选择exe4j的配置文件<br>我们选择exe4j安装目录下的/config/template.exe4j，一直按照上面的操作重新做一遍这里就不做重复最后点击关闭<br><img src=\"42166d224f4a20a4063cf1c692529822720ed095.jpg\" alt=\"运行exe4j\"><br>弹出对话框我们选择保存<br>在到template.exe4j所在目录复制template.exe4j到Eclipse工程config/template/目录下，我们也可以看看template.exe4j文件的内容选择文件右键文本文件打开。如下图就是我们刚才设置的一写参数，如果你对这些很熟当然也可直接在这里进行编辑。下面我们就会说到这这个文件里对参数进行编辑。</p>\n<p>我们需要对得到的配置文件进行先修改修改成如下，将修改好的文件放到Eclipse工程config/template目录下<br><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">exe4j</span> <span class=\"attr\">version</span>=<span class=\"string\">\"4.5.2\"</span> <span class=\"attr\">transformSequenceNumber</span>=<span class=\"string\">\"1\"</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">directoryPresets</span> <span class=\"attr\">config</span>=<span class=\"string\">\"H:/Program Files (x86)/Java\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">application</span> <span class=\"attr\">name</span>=<span class=\"string\">\"PMS\"</span> <span class=\"attr\">distributionSourceDir</span>=<span class=\"string\">\"@distributionSourceDir@\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">languages</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">principalLanguage</span> <span class=\"attr\">id</span>=<span class=\"string\">\"en\"</span> <span class=\"attr\">customLocalizationFile</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">languages</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">application</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">executable</span> <span class=\"attr\">name</span>=<span class=\"string\">\"@app.name@\"</span> <span class=\"attr\">type</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">iconSet</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">iconFile</span>=<span class=\"string\">\"@iconFile@\"</span> <span class=\"attr\">executableDir</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">redirectStderr</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">stderrFile</span>=<span class=\"string\">\"error.log\"</span> <span class=\"attr\">stderrMode</span>=<span class=\"string\">\"overwrite\"</span> <span class=\"attr\">redirectStdout</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">stdoutFile</span>=<span class=\"string\">\"output.log\"</span> <span class=\"attr\">stdoutMode</span>=<span class=\"string\">\"overwrite\"</span> <span class=\"attr\">failOnStderrOutput</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">executableMode</span>=<span class=\"string\">\"1\"</span> <span class=\"attr\">changeWorkingDirectory</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">workingDirectory</span>=<span class=\"string\">\".\"</span> <span class=\"attr\">singleInstance</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">serviceStartType</span>=<span class=\"string\">\"2\"</span> <span class=\"attr\">serviceDependencies</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">serviceDescription</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">jreLocation</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">executionLevel</span>=<span class=\"string\">\"asInvoker\"</span> <span class=\"attr\">checkConsoleParameter</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">globalSingleInstance</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">amd64</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">messageSet</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">versionInfo</span> <span class=\"attr\">include</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">fileVersion</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">fileDescription</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">legalCopyright</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">internalName</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">productName</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">companyName</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">productVersion</span>=<span class=\"string\">\"\"</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">executable</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">splashScreen</span> <span class=\"attr\">show</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">autoOff</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">alwaysOnTop</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">width</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">height</span>=<span class=\"string\">\"0\"</span> <span class=\"attr\">bitmapFile</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">java6SplashScreen</span>=<span class=\"string\">\"false\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">statusLine</span> <span class=\"attr\">x</span>=<span class=\"string\">\"20\"</span> <span class=\"attr\">y</span>=<span class=\"string\">\"20\"</span> <span class=\"attr\">text</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">font</span>=<span class=\"string\">\"Arial\"</span> <span class=\"attr\">fontSize</span>=<span class=\"string\">\"8\"</span> <span class=\"attr\">fontColor</span>=<span class=\"string\">\"0,0,0\"</span> <span class=\"attr\">fontWeight</span>=<span class=\"string\">\"500\"</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">versionLine</span> <span class=\"attr\">x</span>=<span class=\"string\">\"20\"</span> <span class=\"attr\">y</span>=<span class=\"string\">\"40\"</span> <span class=\"attr\">text</span>=<span class=\"string\">\"version %VERSION%\"</span> <span class=\"attr\">font</span>=<span class=\"string\">\"Arial\"</span> <span class=\"attr\">fontSize</span>=<span class=\"string\">\"8\"</span> <span class=\"attr\">fontColor</span>=<span class=\"string\">\"0,0,0\"</span> <span class=\"attr\">fontWeight</span>=<span class=\"string\">\"500\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">text</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">splashScreen</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">java</span> <span class=\"attr\">mainClass</span>=<span class=\"string\">\"@mianclass@\"</span> <span class=\"attr\">vmParameters</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">arguments</span>=<span class=\"string\">\"\"</span> <span class=\"attr\">allowVMPassthroughParameters</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">preferredVM</span>=<span class=\"string\">\"client\"</span> <span class=\"attr\">bundleRuntime</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">minVersion</span>=<span class=\"string\">\"1.4\"</span> <span class=\"attr\">maxVersion</span>=<span class=\"string\">\"1.7\"</span> <span class=\"attr\">allowBetaVM</span>=<span class=\"string\">\"false\"</span> <span class=\"attr\">jdkOnly</span>=<span class=\"string\">\"false\"</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">searchSequence</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">registry</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">envVar</span> <span class=\"attr\">name</span>=<span class=\"string\">\"JAVA_HOME\"</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">envVar</span> <span class=\"attr\">name</span>=<span class=\"string\">\"JDK_HOME\"</span> /&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">directory</span> <span class=\"attr\">location</span>=<span class=\"string\">\"H:/Program Files (x86)/Java/jre7\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">searchSequence</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">classPath</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">archive</span> <span class=\"attr\">location</span>=<span class=\"string\">\"@todir@\"</span> <span class=\"attr\">failOnError</span>=<span class=\"string\">\"false\"</span> /&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">classPath</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">nativeLibraryDirectories</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">java</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">includedFiles</span> /&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">unextractableFiles</span> /&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">exe4j</span>&gt;</span></span><br></pre></td></tr></table></figure></p>\n<h3 id=\"build-xml\"><a href=\"#build-xml\" class=\"headerlink\" title=\"build.xml\"></a>build.xml</h3><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=\"1.0\" encoding=\"GBK\"?&gt;</span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">project</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jar2exe\"</span> <span class=\"attr\">basedir</span>=<span class=\"string\">\".\"</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">file</span>=<span class=\"string\">\"build.properties\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"lib.dir\"</span> <span class=\"attr\">location</span>=<span class=\"string\">\"lib\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"src.dir\"</span> <span class=\"attr\">location</span>=<span class=\"string\">\"src\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"dist.dir\"</span> <span class=\"attr\">location</span>=<span class=\"string\">\"dist\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"build.dir\"</span> <span class=\"attr\">location</span>=<span class=\"string\">\"build\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"config.dir\"</span> <span class=\"attr\">location</span>=<span class=\"string\">\"config\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"build.source\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1.5\"</span> /&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"build.target\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"1.5\"</span> /&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"app.dir\"</span> <span class=\"attr\">location</span>=<span class=\"string\">\"app\"</span> /&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span> <span class=\"attr\">name</span>=<span class=\"string\">\"exe4j.template.dir\"</span> <span class=\"attr\">location</span>=<span class=\"string\">\"config/template\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">id</span>=<span class=\"string\">\"exe4j.path\"</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">pathelement</span> <span class=\"attr\">path</span>=<span class=\"string\">\"$&#123;exe4j.ant.jar&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">path</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">target</span> <span class=\"attr\">name</span>=<span class=\"string\">\"init\"</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">echo</span> <span class=\"attr\">message</span>=<span class=\"string\">\"init\"</span>/&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">path</span> <span class=\"attr\">id</span>=<span class=\"string\">\"base.path\"</span>/&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">target</span> <span class=\"attr\">name</span>=<span class=\"string\">\"clean\"</span> <span class=\"attr\">depends</span>=<span class=\"string\">\"init\"</span>&gt;</span></span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">echo</span> <span class=\"attr\">message</span>=<span class=\"string\">\"clean\"</span>/&gt;</span></span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">delete</span> <span class=\"attr\">dir</span>=<span class=\"string\">\"$&#123;build.dir&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">delete</span> <span class=\"attr\">dir</span>=<span class=\"string\">\"$&#123;dist.dir&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">target</span> <span class=\"attr\">name</span>=<span class=\"string\">\"prepare\"</span> <span class=\"attr\">depends</span>=<span class=\"string\">\"init,clean\"</span>&gt;</span></span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">echo</span> <span class=\"attr\">message</span>=<span class=\"string\">\"prepare\"</span>/&gt;</span></span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">mkdir</span> <span class=\"attr\">dir</span>=<span class=\"string\">\"$&#123;build.dir&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t    <span class=\"tag\">&lt;<span class=\"name\">mkdir</span> <span class=\"attr\">dir</span>=<span class=\"string\">\"$&#123;dist.dir&#125;\"</span>/&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">target</span> <span class=\"attr\">name</span>=<span class=\"string\">\"build.exe4j\"</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">copy</span> <span class=\"attr\">todir</span>=<span class=\"string\">\"$&#123;config.dir&#125;\"</span> <span class=\"attr\">overwrite</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">fileset</span> <span class=\"attr\">dir</span>=<span class=\"string\">\"$&#123;exe4j.template.dir&#125;\"</span> <span class=\"attr\">includes</span>=<span class=\"string\">\"template.exe4j\"</span> /&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">copy</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">replace</span> <span class=\"attr\">file</span>=<span class=\"string\">\"$&#123;config.dir&#125;/template.exe4j\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">replacefilter</span> <span class=\"attr\">token</span>=<span class=\"string\">\"@distributionSourceDir@\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;distributionSourceDir&#125;\"</span> /&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">replacefilter</span> <span class=\"attr\">token</span>=<span class=\"string\">\"@app.name@\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;app.name&#125;\"</span> /&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">replacefilter</span> <span class=\"attr\">token</span>=<span class=\"string\">\"@amd64@\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;amd64&#125;\"</span> /&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">replacefilter</span> <span class=\"attr\">token</span>=<span class=\"string\">\"@iconFile@\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;iconFile&#125;\"</span> /&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">replacefilter</span> <span class=\"attr\">token</span>=<span class=\"string\">\"@mianclass@\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;mianclass&#125;\"</span> /&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">replacefilter</span> <span class=\"attr\">token</span>=<span class=\"string\">\"@todir@\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;todir&#125;\"</span> /&gt;</span></span><br><span class=\"line\"> \t\t<span class=\"tag\">&lt;/<span class=\"name\">replace</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t <span class=\"tag\">&lt;<span class=\"name\">target</span> <span class=\"attr\">name</span>=<span class=\"string\">\"copy-file\"</span>&gt;</span></span><br><span class=\"line\">\t \t<span class=\"tag\">&lt;<span class=\"name\">copy</span> <span class=\"attr\">todir</span>=<span class=\"string\">\"$&#123;distributionSourceDir&#125;/app\"</span> <span class=\"attr\">overwrite</span>=<span class=\"string\">\"true\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">fileset</span> <span class=\"attr\">dir</span>=<span class=\"string\">\"$&#123;app.dir&#125;\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">name</span>=<span class=\"string\">\"**/*\"</span> /&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">fileset</span>&gt;</span></span><br><span class=\"line\">  \t\t<span class=\"tag\">&lt;/<span class=\"name\">copy</span>&gt;</span></span><br><span class=\"line\">\t <span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">\t  </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">target</span> <span class=\"attr\">name</span>=<span class=\"string\">\"javac-project\"</span> <span class=\"attr\">depends</span>=<span class=\"string\">\"prepare,copy-file\"</span>&gt;</span></span><br><span class=\"line\">\t   <span class=\"tag\">&lt;<span class=\"name\">echo</span> <span class=\"attr\">message</span>=<span class=\"string\">\"javac\"</span>/&gt;</span></span><br><span class=\"line\">\t   <span class=\"tag\">&lt;<span class=\"name\">javac</span> <span class=\"attr\">srcdir</span>=<span class=\"string\">\"$&#123;src.dir&#125;\"</span> <span class=\"attr\">verbose</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">destdir</span>=<span class=\"string\">\"$&#123;build.dir&#125;\"</span> <span class=\"attr\">classpathref</span>=<span class=\"string\">\"base.path\"</span>  <span class=\"attr\">optimize</span>=<span class=\"string\">\"true\"</span> <span class=\"attr\">target</span>=<span class=\"string\">\"$&#123;build.target&#125;\"</span> <span class=\"attr\">source</span>=<span class=\"string\">\"$&#123;build.source&#125;\"</span> <span class=\"attr\">debuglevel</span>=<span class=\"string\">\"none\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;<span class=\"name\">classpath</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">fileset</span> <span class=\"attr\">dir</span>=<span class=\"string\">\"$&#123;lib.dir&#125;\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">name</span>=<span class=\"string\">\"**/*jar\"</span> /&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">fileset</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"tag\">&lt;<span class=\"name\">pathelement</span> <span class=\"attr\">location</span>=<span class=\"string\">\"bin\"</span> /&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"tag\">&lt;/<span class=\"name\">classpath</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;/<span class=\"name\">javac</span>&gt;</span></span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t <span class=\"tag\">&lt;<span class=\"name\">target</span> <span class=\"attr\">name</span>=<span class=\"string\">\"unjar\"</span>&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">unjar</span> <span class=\"attr\">src</span>=<span class=\"string\">\"$&#123;lib.dir&#125;/DJNativeSwing-SWT.jar\"</span> <span class=\"attr\">dest</span>=<span class=\"string\">\"$&#123;build.dir&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t \t<span class=\"tag\">&lt;<span class=\"name\">unjar</span> <span class=\"attr\">src</span>=<span class=\"string\">\"$&#123;lib.dir&#125;/DJNativeSwing.jar\"</span> <span class=\"attr\">dest</span>=<span class=\"string\">\"$&#123;build.dir&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t\t<span class=\"tag\">&lt;<span class=\"name\">unjar</span> <span class=\"attr\">src</span>=<span class=\"string\">\"$&#123;lib.dir&#125;/swt.zip\"</span> <span class=\"attr\">dest</span>=<span class=\"string\">\"$&#123;build.dir&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t <span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t  <span class=\"tag\">&lt;<span class=\"name\">target</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jar-project\"</span>  <span class=\"attr\">depends</span>=<span class=\"string\">\"javac-project,unjar\"</span>&gt;</span></span><br><span class=\"line\">\t\t   <span class=\"tag\">&lt;<span class=\"name\">echo</span> <span class=\"attr\">message</span>=<span class=\"string\">\"jar-project\"</span>/&gt;</span></span><br><span class=\"line\">\t\t   <span class=\"tag\">&lt;<span class=\"name\">jar</span> <span class=\"attr\">jarfile</span>=<span class=\"string\">\"$&#123;dist.dir&#125;/FileManager.jar\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t    <span class=\"tag\">&lt;<span class=\"name\">fileset</span> <span class=\"attr\">dir</span>=<span class=\"string\">\"$&#123;build.dir&#125;\"</span>&gt;</span></span><br><span class=\"line\">\t\t\t\t     <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">name</span>=<span class=\"string\">\"**/*.class\"</span>/&gt;</span></span><br><span class=\"line\">\t\t\t\t     <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">name</span>=<span class=\"string\">\"**/*.t\"</span>/&gt;</span></span><br><span class=\"line\">\t\t\t    \t <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">name</span>=<span class=\"string\">\"**/*.gif\"</span>/&gt;</span></span><br><span class=\"line\">\t\t\t    \t <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">name</span>=<span class=\"string\">\"**/*.png\"</span>/&gt;</span></span><br><span class=\"line\">\t\t\t    \t <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">name</span>=<span class=\"string\">\"**/*.jpg\"</span>/&gt;</span></span><br><span class=\"line\">\t\t\t    \t <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">name</span>=<span class=\"string\">\"**/*.dll\"</span>/&gt;</span></span><br><span class=\"line\">\t\t\t\t     <span class=\"comment\">&lt;!-- msutil.jar中的*.properties必须包含进来，否则运行时出错--&gt;</span></span><br><span class=\"line\">\t\t\t\t     <span class=\"tag\">&lt;<span class=\"name\">include</span> <span class=\"attr\">name</span>=<span class=\"string\">\"**/*.properties\"</span>/&gt;</span></span><br><span class=\"line\">\t\t\t    <span class=\"tag\">&lt;/<span class=\"name\">fileset</span>&gt;</span></span><br><span class=\"line\">\t\t  \t \t<span class=\"tag\">&lt;<span class=\"name\">manifest</span>&gt;</span></span><br><span class=\"line\">\t                <span class=\"tag\">&lt;<span class=\"name\">attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Class-Path\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\".\"</span>/&gt;</span></span><br><span class=\"line\">\t                <span class=\"tag\">&lt;<span class=\"name\">attribute</span> <span class=\"attr\">name</span>=<span class=\"string\">\"Main-Class\"</span> <span class=\"attr\">value</span>=<span class=\"string\">\"$&#123;mianclass&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t            <span class=\"tag\">&lt;/<span class=\"name\">manifest</span>&gt;</span></span><br><span class=\"line\">\t\t   <span class=\"tag\">&lt;/<span class=\"name\">jar</span>&gt;</span></span><br><span class=\"line\">\t  <span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t  <span class=\"tag\">&lt;<span class=\"name\">taskdef</span> <span class=\"attr\">name</span>=<span class=\"string\">\"exe4j\"</span> <span class=\"attr\">classname</span>=<span class=\"string\">\"com.exe4j.Exe4JTask\"</span>&gt;</span></span><br><span class=\"line\">\t   \t\t<span class=\"tag\">&lt;<span class=\"name\">classpath</span> <span class=\"attr\">refid</span>=<span class=\"string\">\"exe4j.path\"</span>/&gt;</span></span><br><span class=\"line\">\t  <span class=\"tag\">&lt;/<span class=\"name\">taskdef</span>&gt;</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t  <span class=\"tag\">&lt;<span class=\"name\">target</span> <span class=\"attr\">name</span>=<span class=\"string\">\"jar2exe\"</span> <span class=\"attr\">depends</span>=<span class=\"string\">\"build.exe4j,jar-project\"</span>&gt;</span></span><br><span class=\"line\">\t  \t \t<span class=\"tag\">&lt;<span class=\"name\">exe4j</span> <span class=\"attr\">projectfile</span>=<span class=\"string\">\"$&#123;app.exe4j&#125;\"</span>/&gt;</span></span><br><span class=\"line\">\t  <span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t  <span class=\"tag\">&lt;<span class=\"name\">target</span> <span class=\"attr\">name</span>=<span class=\"string\">\"finish\"</span> <span class=\"attr\">depends</span>=<span class=\"string\">\"jar2exe\"</span>&gt;</span></span><br><span class=\"line\">\t   \t\t<span class=\"tag\">&lt;<span class=\"name\">echo</span> <span class=\"attr\">message</span>=<span class=\"string\">\"finish\"</span>/&gt;</span></span><br><span class=\"line\">\t  <span class=\"tag\">&lt;/<span class=\"name\">target</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">project</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"build-properties\"><a href=\"#build-properties\" class=\"headerlink\" title=\"build.properties\"></a>build.properties</h3><p>文件内容已经参数说明<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#exe4j ant jar包路径</span><br><span class=\"line\">exe4j.ant.jar=H:/ProgramFiles(x86)/exe4j/bin/ant.jar</span><br><span class=\"line\">#文件保存路径</span><br><span class=\"line\">distributionSourceDir=C:/Users/yanwuyang/Desktop/test</span><br><span class=\"line\">#exe4j模板配置文件路径</span><br><span class=\"line\">app.template.exe4j=config/template/template.exe4j</span><br><span class=\"line\">#exe4j配置文件路径</span><br><span class=\"line\">app.exe4j=config/template.exe4j</span><br><span class=\"line\">#应用程序main函数类路径</span><br><span class=\"line\">mianclass=cn.com.win.Main</span><br><span class=\"line\">#应用程序名称</span><br><span class=\"line\">app.name=PMS</span><br><span class=\"line\">#应用程序图标</span><br><span class=\"line\">iconFile=G:/image/ICO/4594/200.ico</span><br><span class=\"line\">#jar输出路径</span><br><span class=\"line\">todir=F:/Users/yanwuyang/workspace/WinExample/res/PMS.jar</span><br></pre></td></tr></table></figure></p>\n<p>经过上面这几个步骤ANT自动构建算是完成了下面我们就运行下<br><img src=\"caef76094b36acaf525e5bfd7ed98d1001e99c71.jpg\" alt=\"finish\"><br>点击finish<br><img src=\"023b5bb5c9ea15ce68f52d08b4003af33a87b29c.jpg\" alt=\"finish\"><br>呵呵成功了到我们配置输出的目录看看生成exe的文件是否存在<br><img src=\"c8ea15ce36d3d539d688c2c23887e950352ab07e.jpg\" alt=\"finish\"></p>"},{"title":"JavaScript函数","date":"2013-07-17T16:00:00.000Z","comments":1,"toc":true,"_content":"\n## 函数概念\n函数对任何语言来说都是一个核心的概念。通过函数可以封装任何多条语句，而且可以在任何地方任何时候调用执行，ECMAScript中的函数使用function关键字来声明，后跟一组参数以及函数体。函数的基本语法如下所示\n<!--more-->\n```javascript\nfunction funName(arg0,arg1,.....argN){\n    statements\n} \n//以下是函数示例\nfunction syaHi(name,message){\n    alert(\"hello \"+ name + \" ,\"+ message);\n}\n```\n这个函数可以通过其函数名来调用，后面还要加上一对括号和参数（圆括号中的参数如果有多个，可以用逗号隔开）。调用sayHi()函数代码如下所示：\n```javascript\nsayHi(\"Nicholas\",\"how are you today?\");\n```\nECMAScript 中的函数在定义时不必指定是否返回值，实际上，任何函数在任何时候都可以通过return语句后跟要返回值来实现返回值\n```javascript\nfunction sum(num1,num2){\n    return num1+num2;\n}\n```\n这个sum()函数的作用是把两个值加起来返回一个结果。我们注意到，除了return语句之外，没有任何声明表示该函数会返回一个值。调用这个函数的示例代码如下：\n```javascript\nvar result = sum(5,10);\n```\n这个函数会再执行完return语句之后停止并立即退出。因此，位于return语句之后的任何代码都永远不会执行。\n推荐的做法是要么让函数始终返回一个值，要么永远都不要返回值。否则，如果函数有时返回值，有时不返回值，会给调试代码带来不便。\n\n## 理解参数\nECMAScript 函数的参数与大多数其他语言中的函数参数有所不同。ECMAScript函数不介意传递进来多少个参数，也不在乎传进来参数是什么数据类型。也就是说，即便你定义的函数只接收两个参数，在调用这个函数时也未必一定要传递两个参数。可以传递一个、三个甚至不传，而解析器永远不会有什么怨言。只所以会这样，因为是ECMAScript中的参数在内部是用一个数组来表示的。函数接收到的始终都是这个数组，而不关心数组中包含哪些参数，在函数体内可以通过arguments对象来访问这个数组，从而获取传递给函数的每一个参数。\n其实，arguments对象只是与数组类似（它并不是Array的实例），因为可以用使用方括号语法访问它的每一个元素（即第一个元素是arguments[0],第二个元素是arguments[1],依次类推），使用length属性来确定传递进来多少个参数。\n```javascript\nfunction doAdd(num1,num2){\n    if(arguments[0]==num1){\n        alert(true);\n    }\n    if(argumengs[1]==num2){\n        alert(true);\n    }\n}\n```\n结果会弹出两个alert这说明 arguments[0]的值等于num1，因此他们可以互换使用。\n关于arguments的行为，还有一点比较有意思。那就是它的值永远与对应命名参数的值保持同步。\n```javascript\nfunction doAdd(num1,num2){\n    arguments[1]=10;\n    alert(arguments[0]+num2)；\n}\n```\n每次执行这个doAdd()函数都会重写第二个参数，将第二个参数的值改为10.因为arguments对象中的值会自动反映到对应的命名参数，所以修改了arguments[1],也就是修改了num2，结果他们的值都会变成10。不过，这并不是说明读取这两个值会访问相同的内存空间；它们的内存空间是独立的，但他们的值是同步的。另外只传入一个参数，那么为arguments[1]设置的值不会反应到命名参数中。这是因为arguments对象的长度是由传入的参数个数决定，不是由定义函数时的命名参数的个数决定的。\n\n##  没有重载\nECMAScript函数不能像传统意义上那样实现重载。而在其他语言（如Java）中，可以为一个函数编写两个定义，只要这两个函数的签名（接受的参数的类型和数量）不同即可。ECMAScript函数没有签名，因为其参数是由包含零或多个值得数组来表示。而没有函数签名，真正的重载是不可能做到的。如果再ECMAScript中定义了两个名字相同的函数，则改名字只属于后定义的函数。\n关于参数还要记住最后一点：没有传递值得命名参数将自动赋予undefined值。这跟定义了变量但又没有初始化一样，","source":"_posts/JavaScript函数.md","raw":"---\ntitle: JavaScript函数\ndate: 2013-07-18\ncomments: true\ncategories: JavaScript\ntoc: true \n---\n\n## 函数概念\n函数对任何语言来说都是一个核心的概念。通过函数可以封装任何多条语句，而且可以在任何地方任何时候调用执行，ECMAScript中的函数使用function关键字来声明，后跟一组参数以及函数体。函数的基本语法如下所示\n<!--more-->\n```javascript\nfunction funName(arg0,arg1,.....argN){\n    statements\n} \n//以下是函数示例\nfunction syaHi(name,message){\n    alert(\"hello \"+ name + \" ,\"+ message);\n}\n```\n这个函数可以通过其函数名来调用，后面还要加上一对括号和参数（圆括号中的参数如果有多个，可以用逗号隔开）。调用sayHi()函数代码如下所示：\n```javascript\nsayHi(\"Nicholas\",\"how are you today?\");\n```\nECMAScript 中的函数在定义时不必指定是否返回值，实际上，任何函数在任何时候都可以通过return语句后跟要返回值来实现返回值\n```javascript\nfunction sum(num1,num2){\n    return num1+num2;\n}\n```\n这个sum()函数的作用是把两个值加起来返回一个结果。我们注意到，除了return语句之外，没有任何声明表示该函数会返回一个值。调用这个函数的示例代码如下：\n```javascript\nvar result = sum(5,10);\n```\n这个函数会再执行完return语句之后停止并立即退出。因此，位于return语句之后的任何代码都永远不会执行。\n推荐的做法是要么让函数始终返回一个值，要么永远都不要返回值。否则，如果函数有时返回值，有时不返回值，会给调试代码带来不便。\n\n## 理解参数\nECMAScript 函数的参数与大多数其他语言中的函数参数有所不同。ECMAScript函数不介意传递进来多少个参数，也不在乎传进来参数是什么数据类型。也就是说，即便你定义的函数只接收两个参数，在调用这个函数时也未必一定要传递两个参数。可以传递一个、三个甚至不传，而解析器永远不会有什么怨言。只所以会这样，因为是ECMAScript中的参数在内部是用一个数组来表示的。函数接收到的始终都是这个数组，而不关心数组中包含哪些参数，在函数体内可以通过arguments对象来访问这个数组，从而获取传递给函数的每一个参数。\n其实，arguments对象只是与数组类似（它并不是Array的实例），因为可以用使用方括号语法访问它的每一个元素（即第一个元素是arguments[0],第二个元素是arguments[1],依次类推），使用length属性来确定传递进来多少个参数。\n```javascript\nfunction doAdd(num1,num2){\n    if(arguments[0]==num1){\n        alert(true);\n    }\n    if(argumengs[1]==num2){\n        alert(true);\n    }\n}\n```\n结果会弹出两个alert这说明 arguments[0]的值等于num1，因此他们可以互换使用。\n关于arguments的行为，还有一点比较有意思。那就是它的值永远与对应命名参数的值保持同步。\n```javascript\nfunction doAdd(num1,num2){\n    arguments[1]=10;\n    alert(arguments[0]+num2)；\n}\n```\n每次执行这个doAdd()函数都会重写第二个参数，将第二个参数的值改为10.因为arguments对象中的值会自动反映到对应的命名参数，所以修改了arguments[1],也就是修改了num2，结果他们的值都会变成10。不过，这并不是说明读取这两个值会访问相同的内存空间；它们的内存空间是独立的，但他们的值是同步的。另外只传入一个参数，那么为arguments[1]设置的值不会反应到命名参数中。这是因为arguments对象的长度是由传入的参数个数决定，不是由定义函数时的命名参数的个数决定的。\n\n##  没有重载\nECMAScript函数不能像传统意义上那样实现重载。而在其他语言（如Java）中，可以为一个函数编写两个定义，只要这两个函数的签名（接受的参数的类型和数量）不同即可。ECMAScript函数没有签名，因为其参数是由包含零或多个值得数组来表示。而没有函数签名，真正的重载是不可能做到的。如果再ECMAScript中定义了两个名字相同的函数，则改名字只属于后定义的函数。\n关于参数还要记住最后一点：没有传递值得命名参数将自动赋予undefined值。这跟定义了变量但又没有初始化一样，","slug":"JavaScript函数","published":1,"updated":"2016-05-14T09:31:06.162Z","_id":"cio6y75io000n4kybtdpszzq7","layout":"post","photos":[],"link":"","content":"<h2 id=\"函数概念\"><a href=\"#函数概念\" class=\"headerlink\" title=\"函数概念\"></a>函数概念</h2><p>函数对任何语言来说都是一个核心的概念。通过函数可以封装任何多条语句，而且可以在任何地方任何时候调用执行，ECMAScript中的函数使用function关键字来声明，后跟一组参数以及函数体。函数的基本语法如下所示<br><a id=\"more\"></a><br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">funName</span>(<span class=\"params\">arg0,arg1,.....argN</span>)</span>&#123;</span><br><span class=\"line\">    statements</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"comment\">//以下是函数示例</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">syaHi</span>(<span class=\"params\">name,message</span>)</span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"hello \"</span>+ name + <span class=\"string\">\" ,\"</span>+ message);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这个函数可以通过其函数名来调用，后面还要加上一对括号和参数（圆括号中的参数如果有多个，可以用逗号隔开）。调用sayHi()函数代码如下所示：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sayHi(<span class=\"string\">\"Nicholas\"</span>,<span class=\"string\">\"how are you today?\"</span>);</span><br></pre></td></tr></table></figure></p>\n<p>ECMAScript 中的函数在定义时不必指定是否返回值，实际上，任何函数在任何时候都可以通过return语句后跟要返回值来实现返回值<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sum</span>(<span class=\"params\">num1,num2</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num1+num2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这个sum()函数的作用是把两个值加起来返回一个结果。我们注意到，除了return语句之外，没有任何声明表示该函数会返回一个值。调用这个函数的示例代码如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> result = sum(<span class=\"number\">5</span>,<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure></p>\n<p>这个函数会再执行完return语句之后停止并立即退出。因此，位于return语句之后的任何代码都永远不会执行。<br>推荐的做法是要么让函数始终返回一个值，要么永远都不要返回值。否则，如果函数有时返回值，有时不返回值，会给调试代码带来不便。</p>\n<h2 id=\"理解参数\"><a href=\"#理解参数\" class=\"headerlink\" title=\"理解参数\"></a>理解参数</h2><p>ECMAScript 函数的参数与大多数其他语言中的函数参数有所不同。ECMAScript函数不介意传递进来多少个参数，也不在乎传进来参数是什么数据类型。也就是说，即便你定义的函数只接收两个参数，在调用这个函数时也未必一定要传递两个参数。可以传递一个、三个甚至不传，而解析器永远不会有什么怨言。只所以会这样，因为是ECMAScript中的参数在内部是用一个数组来表示的。函数接收到的始终都是这个数组，而不关心数组中包含哪些参数，在函数体内可以通过arguments对象来访问这个数组，从而获取传递给函数的每一个参数。<br>其实，arguments对象只是与数组类似（它并不是Array的实例），因为可以用使用方括号语法访问它的每一个元素（即第一个元素是arguments[0],第二个元素是arguments[1],依次类推），使用length属性来确定传递进来多少个参数。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doAdd</span>(<span class=\"params\">num1,num2</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>]==num1)&#123;</span><br><span class=\"line\">        alert(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(argumengs[<span class=\"number\">1</span>]==num2)&#123;</span><br><span class=\"line\">        alert(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>结果会弹出两个alert这说明 arguments[0]的值等于num1，因此他们可以互换使用。<br>关于arguments的行为，还有一点比较有意思。那就是它的值永远与对应命名参数的值保持同步。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doAdd</span>(<span class=\"params\">num1,num2</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">arguments</span>[<span class=\"number\">1</span>]=<span class=\"number\">10</span>;</span><br><span class=\"line\">    alert(<span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>]+num2)；</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>每次执行这个doAdd()函数都会重写第二个参数，将第二个参数的值改为10.因为arguments对象中的值会自动反映到对应的命名参数，所以修改了arguments[1],也就是修改了num2，结果他们的值都会变成10。不过，这并不是说明读取这两个值会访问相同的内存空间；它们的内存空间是独立的，但他们的值是同步的。另外只传入一个参数，那么为arguments[1]设置的值不会反应到命名参数中。这是因为arguments对象的长度是由传入的参数个数决定，不是由定义函数时的命名参数的个数决定的。</p>\n<h2 id=\"没有重载\"><a href=\"#没有重载\" class=\"headerlink\" title=\"没有重载\"></a>没有重载</h2><p>ECMAScript函数不能像传统意义上那样实现重载。而在其他语言（如Java）中，可以为一个函数编写两个定义，只要这两个函数的签名（接受的参数的类型和数量）不同即可。ECMAScript函数没有签名，因为其参数是由包含零或多个值得数组来表示。而没有函数签名，真正的重载是不可能做到的。如果再ECMAScript中定义了两个名字相同的函数，则改名字只属于后定义的函数。<br>关于参数还要记住最后一点：没有传递值得命名参数将自动赋予undefined值。这跟定义了变量但又没有初始化一样，</p>\n","excerpt":"<h2 id=\"函数概念\"><a href=\"#函数概念\" class=\"headerlink\" title=\"函数概念\"></a>函数概念</h2><p>函数对任何语言来说都是一个核心的概念。通过函数可以封装任何多条语句，而且可以在任何地方任何时候调用执行，ECMAScript中的函数使用function关键字来声明，后跟一组参数以及函数体。函数的基本语法如下所示<br>","more":"<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">funName</span>(<span class=\"params\">arg0,arg1,.....argN</span>)</span>&#123;</span><br><span class=\"line\">    statements</span><br><span class=\"line\">&#125; </span><br><span class=\"line\"><span class=\"comment\">//以下是函数示例</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">syaHi</span>(<span class=\"params\">name,message</span>)</span>&#123;</span><br><span class=\"line\">    alert(<span class=\"string\">\"hello \"</span>+ name + <span class=\"string\">\" ,\"</span>+ message);</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这个函数可以通过其函数名来调用，后面还要加上一对括号和参数（圆括号中的参数如果有多个，可以用逗号隔开）。调用sayHi()函数代码如下所示：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sayHi(<span class=\"string\">\"Nicholas\"</span>,<span class=\"string\">\"how are you today?\"</span>);</span><br></pre></td></tr></table></figure></p>\n<p>ECMAScript 中的函数在定义时不必指定是否返回值，实际上，任何函数在任何时候都可以通过return语句后跟要返回值来实现返回值<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">sum</span>(<span class=\"params\">num1,num2</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> num1+num2;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>这个sum()函数的作用是把两个值加起来返回一个结果。我们注意到，除了return语句之外，没有任何声明表示该函数会返回一个值。调用这个函数的示例代码如下：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> result = sum(<span class=\"number\">5</span>,<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure></p>\n<p>这个函数会再执行完return语句之后停止并立即退出。因此，位于return语句之后的任何代码都永远不会执行。<br>推荐的做法是要么让函数始终返回一个值，要么永远都不要返回值。否则，如果函数有时返回值，有时不返回值，会给调试代码带来不便。</p>\n<h2 id=\"理解参数\"><a href=\"#理解参数\" class=\"headerlink\" title=\"理解参数\"></a>理解参数</h2><p>ECMAScript 函数的参数与大多数其他语言中的函数参数有所不同。ECMAScript函数不介意传递进来多少个参数，也不在乎传进来参数是什么数据类型。也就是说，即便你定义的函数只接收两个参数，在调用这个函数时也未必一定要传递两个参数。可以传递一个、三个甚至不传，而解析器永远不会有什么怨言。只所以会这样，因为是ECMAScript中的参数在内部是用一个数组来表示的。函数接收到的始终都是这个数组，而不关心数组中包含哪些参数，在函数体内可以通过arguments对象来访问这个数组，从而获取传递给函数的每一个参数。<br>其实，arguments对象只是与数组类似（它并不是Array的实例），因为可以用使用方括号语法访问它的每一个元素（即第一个元素是arguments[0],第二个元素是arguments[1],依次类推），使用length属性来确定传递进来多少个参数。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doAdd</span>(<span class=\"params\">num1,num2</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>]==num1)&#123;</span><br><span class=\"line\">        alert(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(argumengs[<span class=\"number\">1</span>]==num2)&#123;</span><br><span class=\"line\">        alert(<span class=\"literal\">true</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>结果会弹出两个alert这说明 arguments[0]的值等于num1，因此他们可以互换使用。<br>关于arguments的行为，还有一点比较有意思。那就是它的值永远与对应命名参数的值保持同步。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">doAdd</span>(<span class=\"params\">num1,num2</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"built_in\">arguments</span>[<span class=\"number\">1</span>]=<span class=\"number\">10</span>;</span><br><span class=\"line\">    alert(<span class=\"built_in\">arguments</span>[<span class=\"number\">0</span>]+num2)；</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>每次执行这个doAdd()函数都会重写第二个参数，将第二个参数的值改为10.因为arguments对象中的值会自动反映到对应的命名参数，所以修改了arguments[1],也就是修改了num2，结果他们的值都会变成10。不过，这并不是说明读取这两个值会访问相同的内存空间；它们的内存空间是独立的，但他们的值是同步的。另外只传入一个参数，那么为arguments[1]设置的值不会反应到命名参数中。这是因为arguments对象的长度是由传入的参数个数决定，不是由定义函数时的命名参数的个数决定的。</p>\n<h2 id=\"没有重载\"><a href=\"#没有重载\" class=\"headerlink\" title=\"没有重载\"></a>没有重载</h2><p>ECMAScript函数不能像传统意义上那样实现重载。而在其他语言（如Java）中，可以为一个函数编写两个定义，只要这两个函数的签名（接受的参数的类型和数量）不同即可。ECMAScript函数没有签名，因为其参数是由包含零或多个值得数组来表示。而没有函数签名，真正的重载是不可能做到的。如果再ECMAScript中定义了两个名字相同的函数，则改名字只属于后定义的函数。<br>关于参数还要记住最后一点：没有传递值得命名参数将自动赋予undefined值。这跟定义了变量但又没有初始化一样，</p>"},{"title":"JavaScript模仿块级作用域","date":"2013-07-16T16:00:00.000Z","comments":1,"toc":false,"_content":"\nJavaScript没有块级作用域的概念。这意味着在块语句中定义的变量，实际上是在包含函数中而非语句中创建的。\n```javascript\nfunction ouputNumbers(count){\n     for(var i=0;i<count;i++){\n                ...\n     }\n     alert(i);//i==count\n}\n```\n<!--more-->\n这个函数中定义了一个for函数，而变量i的初始值被设置为了0。在Java、C++等语言中，变量i只会在for循环的语句块中有定义，循环一旦结束，变量i就会别销毁。可是在JavaScript中，变量是定义在outputNumbers()的活动对象中的，因此从它定义开始，就可以在函数内部随处访问它，即使下面这样错误地声明同一个变量，也不会改变他的值。\n\n```javascript\nfunction outputNumbers(count){\n    for(var i=0;i<count;i++){\n        alert(i);\n    }\n    var i;//重新声明变量\n    alert(i);//i==count\n}\n```\nJavaScript从来不会告诉你是否多次声明了同一个变量；遇到这种情况，它只会对后续的声明视而不见（不过，它会执行后续声明中的变量初始化）。匿名函数可以用来模仿块级作用域并避免这个问题。\n用作块级作用域（通常称为私有作用域）的匿名函数语法如下所示\n```javascript\n(function(){\n    //这里是块级作用域\n})();\n```\n以上代码定义并立即调用了一个匿名函数。将函数声明包含在一对括号中，表示它实际上是一个函数表达式。而紧随其后的另一对括号会立即调用这个函数。如果有读者感觉这种语法不太好理解，可以在看看下面这个例子。\n```javascript\nvar count =5;\noutputNumbers(count);\n```\n这里初始化了变量count，将其值设为5，当然，这里的变量是没有这个必要的，因为可以把值直接传给函数。为了让代码更加简洁，我们在调用函数的时用5来代替变量count，如下所示。\n```javascript\noutputNumbers(5);\n```\n这样做之所以可行，是因为变量只不过是值得另一种表达式，因此用实际的值替换变量没有问题，在看下面的例子。\n```javascript\nvar someFunction = function(){\n    //这里是块级作用域\n};\nsomeFunction();\n```\n这个例子先定义了一个函数，然后立即调用了它，定义函数的方式是创建一个匿名函数，并吧匿名的函数赋值给变量someFunction。而调用函数的方式是在函数名称后面添加一对括号，即someFunction()。通过前面的例子我们知道，可以使用实际的值来取代变量count，那在这里是不是也可以用函数的值直接取代函数名呢？下面的代码却会导致错误。\n```javascript\nfunction(){\n    //这里是块级作用域\n}();//出错\n```\n这段代码会导致语言错误，是因为JavaScript将function关键字当作一个函数声明的开始，而函数声明后面不能跟园括号。然后，函数表达式的后面可以跟圆括号。要将函数声明转发转换成函数表达式。只要像下面这样的给他加上一对括号即可。\n```javascript\n(function(){\n    //这里是块级作用域\n})();\n```\n无论在什么地方，只要临时需要一些变量，就可以使用私有作用域，例如：\n```javascript\nfunction outputNumbers(count){\n    (function(){\n        for(var i=0;i<count;i++){\n            alert(i);\n        }\n    })();\n    alert(i);//导致一个错误！\n}\n```\n在这个重写的outputNumbers()函数中。我们在for循环外部插入了一个私有作用域。在匿名函数中定义的任何变量，都会在执行结束时被销毁。因此，变量i只能在循环中使用，使用后即销毁。而在私有作用域中能够访问变量count，是因为这个匿名函数是一个闭包，它能够访问包含作用域中的所有变量。\n这种技术经常在全局作用域中被用在函数外部，从而限制向全局作用域添加过多的变量和函数。一般来说，我们都应该尽量少向全局作用域中添加变量和函数。在一个由很多开发人员共同参与的大型应用程序中，过多的全局变量和函数很容易导致命名冲突，而通过创建私有作用域，每个开发人员即可以实用自己的变量，又不必担心搞乱全局作用域。例如：\n```javascript\n(function(){\n    var now = new Date();\n    if(now.getMont()==0 && now.getDate() ==1){\n        alert(\"Happy new year\");\n    }\n})();\n```\n把上面这段代码放在全局作用域中，可以用来确定那一天是1月1日；如果到了这一天，就会向用户显示一条祝贺新年的消息。其中的变量now现在是在匿名函数中的局部变量，而我们不必再全局作用域中创建他。\n\n***注意：***\n这种做法可以减少闭包占用的内存问题，因为没有指向匿名函数的引用。只要函数指向完毕，就可以理解销毁其作用域链了。","source":"_posts/JavaScript模仿块级作用域.md","raw":"---\ntitle: JavaScript模仿块级作用域\ndate: 2013-07-17\ncomments: true\ncategories: JavaScript\ntoc: false \n---\n\nJavaScript没有块级作用域的概念。这意味着在块语句中定义的变量，实际上是在包含函数中而非语句中创建的。\n```javascript\nfunction ouputNumbers(count){\n     for(var i=0;i<count;i++){\n                ...\n     }\n     alert(i);//i==count\n}\n```\n<!--more-->\n这个函数中定义了一个for函数，而变量i的初始值被设置为了0。在Java、C++等语言中，变量i只会在for循环的语句块中有定义，循环一旦结束，变量i就会别销毁。可是在JavaScript中，变量是定义在outputNumbers()的活动对象中的，因此从它定义开始，就可以在函数内部随处访问它，即使下面这样错误地声明同一个变量，也不会改变他的值。\n\n```javascript\nfunction outputNumbers(count){\n    for(var i=0;i<count;i++){\n        alert(i);\n    }\n    var i;//重新声明变量\n    alert(i);//i==count\n}\n```\nJavaScript从来不会告诉你是否多次声明了同一个变量；遇到这种情况，它只会对后续的声明视而不见（不过，它会执行后续声明中的变量初始化）。匿名函数可以用来模仿块级作用域并避免这个问题。\n用作块级作用域（通常称为私有作用域）的匿名函数语法如下所示\n```javascript\n(function(){\n    //这里是块级作用域\n})();\n```\n以上代码定义并立即调用了一个匿名函数。将函数声明包含在一对括号中，表示它实际上是一个函数表达式。而紧随其后的另一对括号会立即调用这个函数。如果有读者感觉这种语法不太好理解，可以在看看下面这个例子。\n```javascript\nvar count =5;\noutputNumbers(count);\n```\n这里初始化了变量count，将其值设为5，当然，这里的变量是没有这个必要的，因为可以把值直接传给函数。为了让代码更加简洁，我们在调用函数的时用5来代替变量count，如下所示。\n```javascript\noutputNumbers(5);\n```\n这样做之所以可行，是因为变量只不过是值得另一种表达式，因此用实际的值替换变量没有问题，在看下面的例子。\n```javascript\nvar someFunction = function(){\n    //这里是块级作用域\n};\nsomeFunction();\n```\n这个例子先定义了一个函数，然后立即调用了它，定义函数的方式是创建一个匿名函数，并吧匿名的函数赋值给变量someFunction。而调用函数的方式是在函数名称后面添加一对括号，即someFunction()。通过前面的例子我们知道，可以使用实际的值来取代变量count，那在这里是不是也可以用函数的值直接取代函数名呢？下面的代码却会导致错误。\n```javascript\nfunction(){\n    //这里是块级作用域\n}();//出错\n```\n这段代码会导致语言错误，是因为JavaScript将function关键字当作一个函数声明的开始，而函数声明后面不能跟园括号。然后，函数表达式的后面可以跟圆括号。要将函数声明转发转换成函数表达式。只要像下面这样的给他加上一对括号即可。\n```javascript\n(function(){\n    //这里是块级作用域\n})();\n```\n无论在什么地方，只要临时需要一些变量，就可以使用私有作用域，例如：\n```javascript\nfunction outputNumbers(count){\n    (function(){\n        for(var i=0;i<count;i++){\n            alert(i);\n        }\n    })();\n    alert(i);//导致一个错误！\n}\n```\n在这个重写的outputNumbers()函数中。我们在for循环外部插入了一个私有作用域。在匿名函数中定义的任何变量，都会在执行结束时被销毁。因此，变量i只能在循环中使用，使用后即销毁。而在私有作用域中能够访问变量count，是因为这个匿名函数是一个闭包，它能够访问包含作用域中的所有变量。\n这种技术经常在全局作用域中被用在函数外部，从而限制向全局作用域添加过多的变量和函数。一般来说，我们都应该尽量少向全局作用域中添加变量和函数。在一个由很多开发人员共同参与的大型应用程序中，过多的全局变量和函数很容易导致命名冲突，而通过创建私有作用域，每个开发人员即可以实用自己的变量，又不必担心搞乱全局作用域。例如：\n```javascript\n(function(){\n    var now = new Date();\n    if(now.getMont()==0 && now.getDate() ==1){\n        alert(\"Happy new year\");\n    }\n})();\n```\n把上面这段代码放在全局作用域中，可以用来确定那一天是1月1日；如果到了这一天，就会向用户显示一条祝贺新年的消息。其中的变量now现在是在匿名函数中的局部变量，而我们不必再全局作用域中创建他。\n\n***注意：***\n这种做法可以减少闭包占用的内存问题，因为没有指向匿名函数的引用。只要函数指向完毕，就可以理解销毁其作用域链了。","slug":"JavaScript模仿块级作用域","published":1,"updated":"2016-05-14T09:39:19.591Z","_id":"cio6ymvdn000p4kybophujy1n","layout":"post","photos":[],"link":"","content":"<p>JavaScript没有块级作用域的概念。这意味着在块语句中定义的变量，实际上是在包含函数中而非语句中创建的。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ouputNumbers</span>(<span class=\"params\">count</span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;count;i++)&#123;</span><br><span class=\"line\">                ...</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     alert(i);<span class=\"comment\">//i==count</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>这个函数中定义了一个for函数，而变量i的初始值被设置为了0。在Java、C++等语言中，变量i只会在for循环的语句块中有定义，循环一旦结束，变量i就会别销毁。可是在JavaScript中，变量是定义在outputNumbers()的活动对象中的，因此从它定义开始，就可以在函数内部随处访问它，即使下面这样错误地声明同一个变量，也不会改变他的值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">outputNumbers</span>(<span class=\"params\">count</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;count;i++)&#123;</span><br><span class=\"line\">        alert(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> i;<span class=\"comment\">//重新声明变量</span></span><br><span class=\"line\">    alert(i);<span class=\"comment\">//i==count</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JavaScript从来不会告诉你是否多次声明了同一个变量；遇到这种情况，它只会对后续的声明视而不见（不过，它会执行后续声明中的变量初始化）。匿名函数可以用来模仿块级作用域并避免这个问题。<br>用作块级作用域（通常称为私有作用域）的匿名函数语法如下所示<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//这里是块级作用域</span></span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure></p>\n<p>以上代码定义并立即调用了一个匿名函数。将函数声明包含在一对括号中，表示它实际上是一个函数表达式。而紧随其后的另一对括号会立即调用这个函数。如果有读者感觉这种语法不太好理解，可以在看看下面这个例子。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> count =<span class=\"number\">5</span>;</span><br><span class=\"line\">outputNumbers(count);</span><br></pre></td></tr></table></figure></p>\n<p>这里初始化了变量count，将其值设为5，当然，这里的变量是没有这个必要的，因为可以把值直接传给函数。为了让代码更加简洁，我们在调用函数的时用5来代替变量count，如下所示。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outputNumbers(<span class=\"number\">5</span>);</span><br></pre></td></tr></table></figure></p>\n<p>这样做之所以可行，是因为变量只不过是值得另一种表达式，因此用实际的值替换变量没有问题，在看下面的例子。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> someFunction = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//这里是块级作用域</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">someFunction();</span><br></pre></td></tr></table></figure></p>\n<p>这个例子先定义了一个函数，然后立即调用了它，定义函数的方式是创建一个匿名函数，并吧匿名的函数赋值给变量someFunction。而调用函数的方式是在函数名称后面添加一对括号，即someFunction()。通过前面的例子我们知道，可以使用实际的值来取代变量count，那在这里是不是也可以用函数的值直接取代函数名呢？下面的代码却会导致错误。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//这里是块级作用域</span></span><br><span class=\"line\">&#125;();<span class=\"comment\">//出错</span></span><br></pre></td></tr></table></figure></p>\n<p>这段代码会导致语言错误，是因为JavaScript将function关键字当作一个函数声明的开始，而函数声明后面不能跟园括号。然后，函数表达式的后面可以跟圆括号。要将函数声明转发转换成函数表达式。只要像下面这样的给他加上一对括号即可。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//这里是块级作用域</span></span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure></p>\n<p>无论在什么地方，只要临时需要一些变量，就可以使用私有作用域，例如：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">outputNumbers</span>(<span class=\"params\">count</span>)</span>&#123;</span><br><span class=\"line\">    (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;count;i++)&#123;</span><br><span class=\"line\">            alert(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)();</span><br><span class=\"line\">    alert(i);<span class=\"comment\">//导致一个错误！</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在这个重写的outputNumbers()函数中。我们在for循环外部插入了一个私有作用域。在匿名函数中定义的任何变量，都会在执行结束时被销毁。因此，变量i只能在循环中使用，使用后即销毁。而在私有作用域中能够访问变量count，是因为这个匿名函数是一个闭包，它能够访问包含作用域中的所有变量。<br>这种技术经常在全局作用域中被用在函数外部，从而限制向全局作用域添加过多的变量和函数。一般来说，我们都应该尽量少向全局作用域中添加变量和函数。在一个由很多开发人员共同参与的大型应用程序中，过多的全局变量和函数很容易导致命名冲突，而通过创建私有作用域，每个开发人员即可以实用自己的变量，又不必担心搞乱全局作用域。例如：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> now = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(now.getMont()==<span class=\"number\">0</span> &amp;&amp; now.getDate() ==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        alert(<span class=\"string\">\"Happy new year\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure></p>\n<p>把上面这段代码放在全局作用域中，可以用来确定那一天是1月1日；如果到了这一天，就会向用户显示一条祝贺新年的消息。其中的变量now现在是在匿名函数中的局部变量，而我们不必再全局作用域中创建他。</p>\n<p><strong><em>注意：</em></strong><br>这种做法可以减少闭包占用的内存问题，因为没有指向匿名函数的引用。只要函数指向完毕，就可以理解销毁其作用域链了。</p>\n","excerpt":"<p>JavaScript没有块级作用域的概念。这意味着在块语句中定义的变量，实际上是在包含函数中而非语句中创建的。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">ouputNumbers</span>(<span class=\"params\">count</span>)</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;count;i++)&#123;</span><br><span class=\"line\">                ...</span><br><span class=\"line\">     &#125;</span><br><span class=\"line\">     alert(i);<span class=\"comment\">//i==count</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>","more":"<p>这个函数中定义了一个for函数，而变量i的初始值被设置为了0。在Java、C++等语言中，变量i只会在for循环的语句块中有定义，循环一旦结束，变量i就会别销毁。可是在JavaScript中，变量是定义在outputNumbers()的活动对象中的，因此从它定义开始，就可以在函数内部随处访问它，即使下面这样错误地声明同一个变量，也不会改变他的值。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">outputNumbers</span>(<span class=\"params\">count</span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;count;i++)&#123;</span><br><span class=\"line\">        alert(i);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> i;<span class=\"comment\">//重新声明变量</span></span><br><span class=\"line\">    alert(i);<span class=\"comment\">//i==count</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>JavaScript从来不会告诉你是否多次声明了同一个变量；遇到这种情况，它只会对后续的声明视而不见（不过，它会执行后续声明中的变量初始化）。匿名函数可以用来模仿块级作用域并避免这个问题。<br>用作块级作用域（通常称为私有作用域）的匿名函数语法如下所示<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//这里是块级作用域</span></span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure></p>\n<p>以上代码定义并立即调用了一个匿名函数。将函数声明包含在一对括号中，表示它实际上是一个函数表达式。而紧随其后的另一对括号会立即调用这个函数。如果有读者感觉这种语法不太好理解，可以在看看下面这个例子。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> count =<span class=\"number\">5</span>;</span><br><span class=\"line\">outputNumbers(count);</span><br></pre></td></tr></table></figure></p>\n<p>这里初始化了变量count，将其值设为5，当然，这里的变量是没有这个必要的，因为可以把值直接传给函数。为了让代码更加简洁，我们在调用函数的时用5来代替变量count，如下所示。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">outputNumbers(<span class=\"number\">5</span>);</span><br></pre></td></tr></table></figure></p>\n<p>这样做之所以可行，是因为变量只不过是值得另一种表达式，因此用实际的值替换变量没有问题，在看下面的例子。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> someFunction = <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//这里是块级作用域</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">someFunction();</span><br></pre></td></tr></table></figure></p>\n<p>这个例子先定义了一个函数，然后立即调用了它，定义函数的方式是创建一个匿名函数，并吧匿名的函数赋值给变量someFunction。而调用函数的方式是在函数名称后面添加一对括号，即someFunction()。通过前面的例子我们知道，可以使用实际的值来取代变量count，那在这里是不是也可以用函数的值直接取代函数名呢？下面的代码却会导致错误。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//这里是块级作用域</span></span><br><span class=\"line\">&#125;();<span class=\"comment\">//出错</span></span><br></pre></td></tr></table></figure></p>\n<p>这段代码会导致语言错误，是因为JavaScript将function关键字当作一个函数声明的开始，而函数声明后面不能跟园括号。然后，函数表达式的后面可以跟圆括号。要将函数声明转发转换成函数表达式。只要像下面这样的给他加上一对括号即可。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"comment\">//这里是块级作用域</span></span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure></p>\n<p>无论在什么地方，只要临时需要一些变量，就可以使用私有作用域，例如：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">outputNumbers</span>(<span class=\"params\">count</span>)</span>&#123;</span><br><span class=\"line\">    (<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> i=<span class=\"number\">0</span>;i&lt;count;i++)&#123;</span><br><span class=\"line\">            alert(i);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;)();</span><br><span class=\"line\">    alert(i);<span class=\"comment\">//导致一个错误！</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p>在这个重写的outputNumbers()函数中。我们在for循环外部插入了一个私有作用域。在匿名函数中定义的任何变量，都会在执行结束时被销毁。因此，变量i只能在循环中使用，使用后即销毁。而在私有作用域中能够访问变量count，是因为这个匿名函数是一个闭包，它能够访问包含作用域中的所有变量。<br>这种技术经常在全局作用域中被用在函数外部，从而限制向全局作用域添加过多的变量和函数。一般来说，我们都应该尽量少向全局作用域中添加变量和函数。在一个由很多开发人员共同参与的大型应用程序中，过多的全局变量和函数很容易导致命名冲突，而通过创建私有作用域，每个开发人员即可以实用自己的变量，又不必担心搞乱全局作用域。例如：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">(<span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">var</span> now = <span class=\"keyword\">new</span> <span class=\"built_in\">Date</span>();</span><br><span class=\"line\">    <span class=\"keyword\">if</span>(now.getMont()==<span class=\"number\">0</span> &amp;&amp; now.getDate() ==<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">        alert(<span class=\"string\">\"Happy new year\"</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;)();</span><br></pre></td></tr></table></figure></p>\n<p>把上面这段代码放在全局作用域中，可以用来确定那一天是1月1日；如果到了这一天，就会向用户显示一条祝贺新年的消息。其中的变量now现在是在匿名函数中的局部变量，而我们不必再全局作用域中创建他。</p>\n<p><strong><em>注意：</em></strong><br>这种做法可以减少闭包占用的内存问题，因为没有指向匿名函数的引用。只要函数指向完毕，就可以理解销毁其作用域链了。</p>"},{"title":"JavaScript闭包","date":"2013-07-16T16:00:00.000Z","comments":1,"toc":false,"_content":"\n有很多开发人员总数搞不清匿名函数和闭包这两个概念，因此经常混合使用。闭包是指有权访问另一个匿名函数作用域中的变量函数。创建闭包的常见方式，就是在一个函数内部创建另一个函数。\n```javascript\nfunction createComparisonFunction(name){\n  return function(object1){\n       return object1[name];\n  }\n}\n```\n<!--more-->\n变量name即使这个内部函数被返回了，而且是在其他地方被调用了，但它仍然可以访问变量name，之所以还能够访问这个变量，是因为内部函数的作用域链中包含了createComparisonFunction的作用域。要彻底搞清楚其中的细节，必须要从理解函数第一次被调用的时候都发生什么入手。\n有关如何创建作用域链以及作用域链有什么作用细节，对彻底理解闭包至关重要。当某个函数被调用时，会创建一个执行环境以及相应的作用域链。然后，使用arguments和其他命名参数的值来初始化函数的活动对象。但在作用域链中，外部函数的活动对象始终处于第二位，外部函数的外部函数的活动对象处于第三位，......直至作为作用域链终点的全局执行环境。\n在函数执行过程中，为读取和写入变量的值，就需要在作用域中查找变量。来看下下面的例子。\n\n```javascript\nfunction compare(value1,value2){\n  if(value1<value2){\n     return -1;\n  }else if(value1>value2){\n     return 1;\n  }else{\n     return 0;\n  }  \n}\nvar result = compare(5,10);\n```\n以上代码先定义了compare()函数，然后又在全局作用域中调用了它，当第一次调用compare()时，会创建一个包含this、arguments、value1、value2的活动对象。全局执行环境的变量对象（包含this、result、和compare）在compare()执行环境的作用域链中则处于第二位。\n\n后台的每一个执行环境都有一个表示变量的对象——变量对象。全局的变量对象始终存在，而像compare()函数这样的局部环境中的变量对象，则只是在函数执行过程中存在。在创建compare()函数时，会创建一个预先包含全局变量对象的作用域链，这个作用域链被保存在内部的[[Scope]]属性中。当调用compare()函数时，会为函数创建一个执行环境，然后通过复制函数的[[Scope]]属性中的对象构建起执行环境的作用域链。此后，又有一个活动对象（在此作为变量对象使用）被创建并被推入执行环境作用域链的前端。对于这个例子中的compare()函数的执行环境而言，其作用域链中包含两个变量对象：本地活动对象和全局变量对象。显然，作用域链本质上是一个指向变量对象的指针列表，他只是引用但不时间包含变量对象。\n\n无论什么时候在函数中访问一个变量时，就会从作用域链中搜索具有相应名字的变量。一般来讲，当函数执行完毕后，局部活动对象就会被销毁，内存中仅保存全局作用域（全局执行环境的变量对象）。但是，闭包的情况又有所不同。\n\n在另一个函数内部定义的函数会将包含函数（及外部函数）的活动对象添加到他的作用域链中。因此，在createCompareFunction()函数内部定义的匿名函数的作用域链中，实际上将会包含外部函数createCompareFunction()的活动对象。\n\n由于闭包会携带包含的函数作用域，因此会比其他函数占用更多的内存资源。过度使用闭包可能会导致内存占用过多，我们建议只有在绝对必要时在考虑使用闭包。","source":"_posts/JavaScript闭包.md","raw":"---\ntitle: JavaScript闭包\ndate: 2013-07-17\ncomments: true\ncategories: JavaScript\ntoc: false \n---\n\n有很多开发人员总数搞不清匿名函数和闭包这两个概念，因此经常混合使用。闭包是指有权访问另一个匿名函数作用域中的变量函数。创建闭包的常见方式，就是在一个函数内部创建另一个函数。\n```javascript\nfunction createComparisonFunction(name){\n  return function(object1){\n       return object1[name];\n  }\n}\n```\n<!--more-->\n变量name即使这个内部函数被返回了，而且是在其他地方被调用了，但它仍然可以访问变量name，之所以还能够访问这个变量，是因为内部函数的作用域链中包含了createComparisonFunction的作用域。要彻底搞清楚其中的细节，必须要从理解函数第一次被调用的时候都发生什么入手。\n有关如何创建作用域链以及作用域链有什么作用细节，对彻底理解闭包至关重要。当某个函数被调用时，会创建一个执行环境以及相应的作用域链。然后，使用arguments和其他命名参数的值来初始化函数的活动对象。但在作用域链中，外部函数的活动对象始终处于第二位，外部函数的外部函数的活动对象处于第三位，......直至作为作用域链终点的全局执行环境。\n在函数执行过程中，为读取和写入变量的值，就需要在作用域中查找变量。来看下下面的例子。\n\n```javascript\nfunction compare(value1,value2){\n  if(value1<value2){\n     return -1;\n  }else if(value1>value2){\n     return 1;\n  }else{\n     return 0;\n  }  \n}\nvar result = compare(5,10);\n```\n以上代码先定义了compare()函数，然后又在全局作用域中调用了它，当第一次调用compare()时，会创建一个包含this、arguments、value1、value2的活动对象。全局执行环境的变量对象（包含this、result、和compare）在compare()执行环境的作用域链中则处于第二位。\n\n后台的每一个执行环境都有一个表示变量的对象——变量对象。全局的变量对象始终存在，而像compare()函数这样的局部环境中的变量对象，则只是在函数执行过程中存在。在创建compare()函数时，会创建一个预先包含全局变量对象的作用域链，这个作用域链被保存在内部的[[Scope]]属性中。当调用compare()函数时，会为函数创建一个执行环境，然后通过复制函数的[[Scope]]属性中的对象构建起执行环境的作用域链。此后，又有一个活动对象（在此作为变量对象使用）被创建并被推入执行环境作用域链的前端。对于这个例子中的compare()函数的执行环境而言，其作用域链中包含两个变量对象：本地活动对象和全局变量对象。显然，作用域链本质上是一个指向变量对象的指针列表，他只是引用但不时间包含变量对象。\n\n无论什么时候在函数中访问一个变量时，就会从作用域链中搜索具有相应名字的变量。一般来讲，当函数执行完毕后，局部活动对象就会被销毁，内存中仅保存全局作用域（全局执行环境的变量对象）。但是，闭包的情况又有所不同。\n\n在另一个函数内部定义的函数会将包含函数（及外部函数）的活动对象添加到他的作用域链中。因此，在createCompareFunction()函数内部定义的匿名函数的作用域链中，实际上将会包含外部函数createCompareFunction()的活动对象。\n\n由于闭包会携带包含的函数作用域，因此会比其他函数占用更多的内存资源。过度使用闭包可能会导致内存占用过多，我们建议只有在绝对必要时在考虑使用闭包。","slug":"JavaScript闭包","published":1,"updated":"2016-05-14T09:42:43.527Z","_id":"cio6yq5ro000r4kybrk3l8rrx","layout":"post","photos":[],"link":"","content":"<p>有很多开发人员总数搞不清匿名函数和闭包这两个概念，因此经常混合使用。闭包是指有权访问另一个匿名函数作用域中的变量函数。创建闭包的常见方式，就是在一个函数内部创建另一个函数。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createComparisonFunction</span>(<span class=\"params\">name</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">object1</span>)</span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> object1[name];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<a id=\"more\"></a>\n<p>变量name即使这个内部函数被返回了，而且是在其他地方被调用了，但它仍然可以访问变量name，之所以还能够访问这个变量，是因为内部函数的作用域链中包含了createComparisonFunction的作用域。要彻底搞清楚其中的细节，必须要从理解函数第一次被调用的时候都发生什么入手。<br>有关如何创建作用域链以及作用域链有什么作用细节，对彻底理解闭包至关重要。当某个函数被调用时，会创建一个执行环境以及相应的作用域链。然后，使用arguments和其他命名参数的值来初始化函数的活动对象。但在作用域链中，外部函数的活动对象始终处于第二位，外部函数的外部函数的活动对象处于第三位，……直至作为作用域链终点的全局执行环境。<br>在函数执行过程中，为读取和写入变量的值，就需要在作用域中查找变量。来看下下面的例子。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">compare</span>(<span class=\"params\">value1,value2</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(value1&lt;value2)&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(value1&gt;value2)&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = compare(<span class=\"number\">5</span>,<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure>\n<p>以上代码先定义了compare()函数，然后又在全局作用域中调用了它，当第一次调用compare()时，会创建一个包含this、arguments、value1、value2的活动对象。全局执行环境的变量对象（包含this、result、和compare）在compare()执行环境的作用域链中则处于第二位。</p>\n<p>后台的每一个执行环境都有一个表示变量的对象——变量对象。全局的变量对象始终存在，而像compare()函数这样的局部环境中的变量对象，则只是在函数执行过程中存在。在创建compare()函数时，会创建一个预先包含全局变量对象的作用域链，这个作用域链被保存在内部的[[Scope]]属性中。当调用compare()函数时，会为函数创建一个执行环境，然后通过复制函数的[[Scope]]属性中的对象构建起执行环境的作用域链。此后，又有一个活动对象（在此作为变量对象使用）被创建并被推入执行环境作用域链的前端。对于这个例子中的compare()函数的执行环境而言，其作用域链中包含两个变量对象：本地活动对象和全局变量对象。显然，作用域链本质上是一个指向变量对象的指针列表，他只是引用但不时间包含变量对象。</p>\n<p>无论什么时候在函数中访问一个变量时，就会从作用域链中搜索具有相应名字的变量。一般来讲，当函数执行完毕后，局部活动对象就会被销毁，内存中仅保存全局作用域（全局执行环境的变量对象）。但是，闭包的情况又有所不同。</p>\n<p>在另一个函数内部定义的函数会将包含函数（及外部函数）的活动对象添加到他的作用域链中。因此，在createCompareFunction()函数内部定义的匿名函数的作用域链中，实际上将会包含外部函数createCompareFunction()的活动对象。</p>\n<p>由于闭包会携带包含的函数作用域，因此会比其他函数占用更多的内存资源。过度使用闭包可能会导致内存占用过多，我们建议只有在绝对必要时在考虑使用闭包。</p>\n","excerpt":"<p>有很多开发人员总数搞不清匿名函数和闭包这两个概念，因此经常混合使用。闭包是指有权访问另一个匿名函数作用域中的变量函数。创建闭包的常见方式，就是在一个函数内部创建另一个函数。<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">createComparisonFunction</span>(<span class=\"params\">name</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">object1</span>)</span>&#123;</span><br><span class=\"line\">       <span class=\"keyword\">return</span> object1[name];</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>","more":"<p>变量name即使这个内部函数被返回了，而且是在其他地方被调用了，但它仍然可以访问变量name，之所以还能够访问这个变量，是因为内部函数的作用域链中包含了createComparisonFunction的作用域。要彻底搞清楚其中的细节，必须要从理解函数第一次被调用的时候都发生什么入手。<br>有关如何创建作用域链以及作用域链有什么作用细节，对彻底理解闭包至关重要。当某个函数被调用时，会创建一个执行环境以及相应的作用域链。然后，使用arguments和其他命名参数的值来初始化函数的活动对象。但在作用域链中，外部函数的活动对象始终处于第二位，外部函数的外部函数的活动对象处于第三位，……直至作为作用域链终点的全局执行环境。<br>在函数执行过程中，为读取和写入变量的值，就需要在作用域中查找变量。来看下下面的例子。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">compare</span>(<span class=\"params\">value1,value2</span>)</span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span>(value1&lt;value2)&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"number\">-1</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span>(value1&gt;value2)&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">  &#125;<span class=\"keyword\">else</span>&#123;</span><br><span class=\"line\">     <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">  &#125;  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">var</span> result = compare(<span class=\"number\">5</span>,<span class=\"number\">10</span>);</span><br></pre></td></tr></table></figure>\n<p>以上代码先定义了compare()函数，然后又在全局作用域中调用了它，当第一次调用compare()时，会创建一个包含this、arguments、value1、value2的活动对象。全局执行环境的变量对象（包含this、result、和compare）在compare()执行环境的作用域链中则处于第二位。</p>\n<p>后台的每一个执行环境都有一个表示变量的对象——变量对象。全局的变量对象始终存在，而像compare()函数这样的局部环境中的变量对象，则只是在函数执行过程中存在。在创建compare()函数时，会创建一个预先包含全局变量对象的作用域链，这个作用域链被保存在内部的[[Scope]]属性中。当调用compare()函数时，会为函数创建一个执行环境，然后通过复制函数的[[Scope]]属性中的对象构建起执行环境的作用域链。此后，又有一个活动对象（在此作为变量对象使用）被创建并被推入执行环境作用域链的前端。对于这个例子中的compare()函数的执行环境而言，其作用域链中包含两个变量对象：本地活动对象和全局变量对象。显然，作用域链本质上是一个指向变量对象的指针列表，他只是引用但不时间包含变量对象。</p>\n<p>无论什么时候在函数中访问一个变量时，就会从作用域链中搜索具有相应名字的变量。一般来讲，当函数执行完毕后，局部活动对象就会被销毁，内存中仅保存全局作用域（全局执行环境的变量对象）。但是，闭包的情况又有所不同。</p>\n<p>在另一个函数内部定义的函数会将包含函数（及外部函数）的活动对象添加到他的作用域链中。因此，在createCompareFunction()函数内部定义的匿名函数的作用域链中，实际上将会包含外部函数createCompareFunction()的活动对象。</p>\n<p>由于闭包会携带包含的函数作用域，因此会比其他函数占用更多的内存资源。过度使用闭包可能会导致内存占用过多，我们建议只有在绝对必要时在考虑使用闭包。</p>"},{"title":"为什么寄存器比内存快","date":"2013-10-14T16:00:00.000Z","comments":1,"toc":true,"_content":"\n计算机的存储层次（memory hierarchy）之中，寄存器（register）最快，内存其次，最慢的是硬盘。\n同样都是晶体管存储设备，为什么寄存器比内存快呢？\nMike Ash 写了一篇很好的解释，非常通俗地回答了这个问题，有助于加深对硬件的理解。下面就是我的简单翻译。\n<!--more-->\n\n## 原因一：距离不同\n距离不是主要因素，但是最好懂，所以放在最前面说。内存离 CPU 比较远，所以要耗费更长的时间读取。\n以 3GHz 的 CPU 为例，电流每秒钟可以振荡 30 亿次，每次耗时大约为 0.33纳秒。光在 1 纳秒的时间内，可以前进 30 厘米。也就是说，在 CPU 的一个时钟周期内，光可以前进 10 厘米。因此，如果内存距离 CPU 超过 5 厘米，就不可能在一个时钟周期内完成数据的读取，这还没有考虑硬件的限制和电流实际上达不到光速。相比之下，寄存器在 CPU 内部，当然读起来会快一点。\n距离对于桌面电脑影响很大，对于手机影响就要小得多。手机 CPU 的时钟频率比较慢（iPhone 5s 为 1.3GHz），而且手机的内存紧挨着 CPU。\n\n## 原因二：硬件设计不同\n苹果公司新推出的 iPhone 5s，CPU 是 A7，寄存器有 6000 多位（31 个 64 位寄存器，加上 32 个 128 位寄存器）。而 iPhone 5s 的内存是 1GB，约为 80 亿位（bit）。这意味着，高性能、高成本、高耗电的设计可以用在寄存器上，反正只有 6000 多位，而不能用在内存上。因为每个位的成本和能耗只要增加一点点，就会被放大 80 亿倍。\n\n事实上确实如此，内存的设计相对简单，每个位就是一个电容和一个晶体管，而寄存器的设计则完全不同，多出好几个电子元件。并且通电以后，寄存器的晶体管一直有电，而内存的晶体管只有用到的才有电，没用到的就没电，这样有利于省电。这些设计上的因素，决定了寄存器比内存读取速度更快。\n\n## 原因三：工作方式不同\n寄存器的工作方式很简单，只有两步：（1）找到相关的位，（2）读取这些位。\n\n内存的工作方式就要复杂得多：\n（1）找到数据的指针。（指针可能存放在寄存器内，所以这一步就已经包括寄存器的全部工作了。）\n（2）将指针送往内存管理单元（MMU），由 MMU 将虚拟的内存地址翻译成实际的物理地址。\n（3）将物理地址送往内存控制器（memory controller），由内存控制器找出该地址在哪一根内存插槽（bank）上。\n（4）确定数据在哪一个内存块（chunk）上，从该块读取数据。\n（5）数据先送回内存控制器，再送回 CPU，然后开始使用。\n内存的工作流程比寄存器多出许多步。每一步都会产生延迟，累积起来就使得内存比寄存器慢得多。\n为了缓解寄存器与内存之间的巨大速度差异，硬件设计师做出了许多努力，包括在 CPU 内部设置缓存、优化 CPU 工作方式，尽量一次性从内存读取指令所要用到的全部数据等等。\n","source":"_posts/为什么寄存器比内存快.md","raw":"---\ntitle: 为什么寄存器比内存快\ndate: 2013-10-15\ncomments: true\ncategories: Other\ntoc: true \n---\n\n计算机的存储层次（memory hierarchy）之中，寄存器（register）最快，内存其次，最慢的是硬盘。\n同样都是晶体管存储设备，为什么寄存器比内存快呢？\nMike Ash 写了一篇很好的解释，非常通俗地回答了这个问题，有助于加深对硬件的理解。下面就是我的简单翻译。\n<!--more-->\n\n## 原因一：距离不同\n距离不是主要因素，但是最好懂，所以放在最前面说。内存离 CPU 比较远，所以要耗费更长的时间读取。\n以 3GHz 的 CPU 为例，电流每秒钟可以振荡 30 亿次，每次耗时大约为 0.33纳秒。光在 1 纳秒的时间内，可以前进 30 厘米。也就是说，在 CPU 的一个时钟周期内，光可以前进 10 厘米。因此，如果内存距离 CPU 超过 5 厘米，就不可能在一个时钟周期内完成数据的读取，这还没有考虑硬件的限制和电流实际上达不到光速。相比之下，寄存器在 CPU 内部，当然读起来会快一点。\n距离对于桌面电脑影响很大，对于手机影响就要小得多。手机 CPU 的时钟频率比较慢（iPhone 5s 为 1.3GHz），而且手机的内存紧挨着 CPU。\n\n## 原因二：硬件设计不同\n苹果公司新推出的 iPhone 5s，CPU 是 A7，寄存器有 6000 多位（31 个 64 位寄存器，加上 32 个 128 位寄存器）。而 iPhone 5s 的内存是 1GB，约为 80 亿位（bit）。这意味着，高性能、高成本、高耗电的设计可以用在寄存器上，反正只有 6000 多位，而不能用在内存上。因为每个位的成本和能耗只要增加一点点，就会被放大 80 亿倍。\n\n事实上确实如此，内存的设计相对简单，每个位就是一个电容和一个晶体管，而寄存器的设计则完全不同，多出好几个电子元件。并且通电以后，寄存器的晶体管一直有电，而内存的晶体管只有用到的才有电，没用到的就没电，这样有利于省电。这些设计上的因素，决定了寄存器比内存读取速度更快。\n\n## 原因三：工作方式不同\n寄存器的工作方式很简单，只有两步：（1）找到相关的位，（2）读取这些位。\n\n内存的工作方式就要复杂得多：\n（1）找到数据的指针。（指针可能存放在寄存器内，所以这一步就已经包括寄存器的全部工作了。）\n（2）将指针送往内存管理单元（MMU），由 MMU 将虚拟的内存地址翻译成实际的物理地址。\n（3）将物理地址送往内存控制器（memory controller），由内存控制器找出该地址在哪一根内存插槽（bank）上。\n（4）确定数据在哪一个内存块（chunk）上，从该块读取数据。\n（5）数据先送回内存控制器，再送回 CPU，然后开始使用。\n内存的工作流程比寄存器多出许多步。每一步都会产生延迟，累积起来就使得内存比寄存器慢得多。\n为了缓解寄存器与内存之间的巨大速度差异，硬件设计师做出了许多努力，包括在 CPU 内部设置缓存、优化 CPU 工作方式，尽量一次性从内存读取指令所要用到的全部数据等等。\n","slug":"为什么寄存器比内存快","published":1,"updated":"2016-05-14T09:46:05.710Z","_id":"cio6yuqa3000t4kybuvljn971","layout":"post","photos":[],"link":"","content":"<p>计算机的存储层次（memory hierarchy）之中，寄存器（register）最快，内存其次，最慢的是硬盘。<br>同样都是晶体管存储设备，为什么寄存器比内存快呢？<br>Mike Ash 写了一篇很好的解释，非常通俗地回答了这个问题，有助于加深对硬件的理解。下面就是我的简单翻译。<br><a id=\"more\"></a></p>\n<h2 id=\"原因一：距离不同\"><a href=\"#原因一：距离不同\" class=\"headerlink\" title=\"原因一：距离不同\"></a>原因一：距离不同</h2><p>距离不是主要因素，但是最好懂，所以放在最前面说。内存离 CPU 比较远，所以要耗费更长的时间读取。<br>以 3GHz 的 CPU 为例，电流每秒钟可以振荡 30 亿次，每次耗时大约为 0.33纳秒。光在 1 纳秒的时间内，可以前进 30 厘米。也就是说，在 CPU 的一个时钟周期内，光可以前进 10 厘米。因此，如果内存距离 CPU 超过 5 厘米，就不可能在一个时钟周期内完成数据的读取，这还没有考虑硬件的限制和电流实际上达不到光速。相比之下，寄存器在 CPU 内部，当然读起来会快一点。<br>距离对于桌面电脑影响很大，对于手机影响就要小得多。手机 CPU 的时钟频率比较慢（iPhone 5s 为 1.3GHz），而且手机的内存紧挨着 CPU。</p>\n<h2 id=\"原因二：硬件设计不同\"><a href=\"#原因二：硬件设计不同\" class=\"headerlink\" title=\"原因二：硬件设计不同\"></a>原因二：硬件设计不同</h2><p>苹果公司新推出的 iPhone 5s，CPU 是 A7，寄存器有 6000 多位（31 个 64 位寄存器，加上 32 个 128 位寄存器）。而 iPhone 5s 的内存是 1GB，约为 80 亿位（bit）。这意味着，高性能、高成本、高耗电的设计可以用在寄存器上，反正只有 6000 多位，而不能用在内存上。因为每个位的成本和能耗只要增加一点点，就会被放大 80 亿倍。</p>\n<p>事实上确实如此，内存的设计相对简单，每个位就是一个电容和一个晶体管，而寄存器的设计则完全不同，多出好几个电子元件。并且通电以后，寄存器的晶体管一直有电，而内存的晶体管只有用到的才有电，没用到的就没电，这样有利于省电。这些设计上的因素，决定了寄存器比内存读取速度更快。</p>\n<h2 id=\"原因三：工作方式不同\"><a href=\"#原因三：工作方式不同\" class=\"headerlink\" title=\"原因三：工作方式不同\"></a>原因三：工作方式不同</h2><p>寄存器的工作方式很简单，只有两步：（1）找到相关的位，（2）读取这些位。</p>\n<p>内存的工作方式就要复杂得多：<br>（1）找到数据的指针。（指针可能存放在寄存器内，所以这一步就已经包括寄存器的全部工作了。）<br>（2）将指针送往内存管理单元（MMU），由 MMU 将虚拟的内存地址翻译成实际的物理地址。<br>（3）将物理地址送往内存控制器（memory controller），由内存控制器找出该地址在哪一根内存插槽（bank）上。<br>（4）确定数据在哪一个内存块（chunk）上，从该块读取数据。<br>（5）数据先送回内存控制器，再送回 CPU，然后开始使用。<br>内存的工作流程比寄存器多出许多步。每一步都会产生延迟，累积起来就使得内存比寄存器慢得多。<br>为了缓解寄存器与内存之间的巨大速度差异，硬件设计师做出了许多努力，包括在 CPU 内部设置缓存、优化 CPU 工作方式，尽量一次性从内存读取指令所要用到的全部数据等等。</p>\n","excerpt":"<p>计算机的存储层次（memory hierarchy）之中，寄存器（register）最快，内存其次，最慢的是硬盘。<br>同样都是晶体管存储设备，为什么寄存器比内存快呢？<br>Mike Ash 写了一篇很好的解释，非常通俗地回答了这个问题，有助于加深对硬件的理解。下面就是我的简单翻译。<br>","more":"</p>\n<h2 id=\"原因一：距离不同\"><a href=\"#原因一：距离不同\" class=\"headerlink\" title=\"原因一：距离不同\"></a>原因一：距离不同</h2><p>距离不是主要因素，但是最好懂，所以放在最前面说。内存离 CPU 比较远，所以要耗费更长的时间读取。<br>以 3GHz 的 CPU 为例，电流每秒钟可以振荡 30 亿次，每次耗时大约为 0.33纳秒。光在 1 纳秒的时间内，可以前进 30 厘米。也就是说，在 CPU 的一个时钟周期内，光可以前进 10 厘米。因此，如果内存距离 CPU 超过 5 厘米，就不可能在一个时钟周期内完成数据的读取，这还没有考虑硬件的限制和电流实际上达不到光速。相比之下，寄存器在 CPU 内部，当然读起来会快一点。<br>距离对于桌面电脑影响很大，对于手机影响就要小得多。手机 CPU 的时钟频率比较慢（iPhone 5s 为 1.3GHz），而且手机的内存紧挨着 CPU。</p>\n<h2 id=\"原因二：硬件设计不同\"><a href=\"#原因二：硬件设计不同\" class=\"headerlink\" title=\"原因二：硬件设计不同\"></a>原因二：硬件设计不同</h2><p>苹果公司新推出的 iPhone 5s，CPU 是 A7，寄存器有 6000 多位（31 个 64 位寄存器，加上 32 个 128 位寄存器）。而 iPhone 5s 的内存是 1GB，约为 80 亿位（bit）。这意味着，高性能、高成本、高耗电的设计可以用在寄存器上，反正只有 6000 多位，而不能用在内存上。因为每个位的成本和能耗只要增加一点点，就会被放大 80 亿倍。</p>\n<p>事实上确实如此，内存的设计相对简单，每个位就是一个电容和一个晶体管，而寄存器的设计则完全不同，多出好几个电子元件。并且通电以后，寄存器的晶体管一直有电，而内存的晶体管只有用到的才有电，没用到的就没电，这样有利于省电。这些设计上的因素，决定了寄存器比内存读取速度更快。</p>\n<h2 id=\"原因三：工作方式不同\"><a href=\"#原因三：工作方式不同\" class=\"headerlink\" title=\"原因三：工作方式不同\"></a>原因三：工作方式不同</h2><p>寄存器的工作方式很简单，只有两步：（1）找到相关的位，（2）读取这些位。</p>\n<p>内存的工作方式就要复杂得多：<br>（1）找到数据的指针。（指针可能存放在寄存器内，所以这一步就已经包括寄存器的全部工作了。）<br>（2）将指针送往内存管理单元（MMU），由 MMU 将虚拟的内存地址翻译成实际的物理地址。<br>（3）将物理地址送往内存控制器（memory controller），由内存控制器找出该地址在哪一根内存插槽（bank）上。<br>（4）确定数据在哪一个内存块（chunk）上，从该块读取数据。<br>（5）数据先送回内存控制器，再送回 CPU，然后开始使用。<br>内存的工作流程比寄存器多出许多步。每一步都会产生延迟，累积起来就使得内存比寄存器慢得多。<br>为了缓解寄存器与内存之间的巨大速度差异，硬件设计师做出了许多努力，包括在 CPU 内部设置缓存、优化 CPU 工作方式，尽量一次性从内存读取指令所要用到的全部数据等等。</p>"}],"PostAsset":[{"_id":"source/_posts/Java设计模式之观察者模式/003vMReezy6OWsC8Oogc8&690.jpg","slug":"003vMReezy6OWsC8Oogc8&690.jpg","post":"cio5q2liv00047oybaem3lmaf","modified":0,"renderable":0},{"_id":"source/_posts/Java设计模式之观察者模式/003vMReezy6OWsKgs3pa3&690.jpg","slug":"003vMReezy6OWsKgs3pa3&690.jpg","post":"cio5q2liv00047oybaem3lmaf","modified":0,"renderable":0},{"_id":"source/_posts/Java设计模式之观察者模式/class.jpg","slug":"class.jpg","post":"cio5q2liv00047oybaem3lmaf","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1KHLwtFe7&690.png","slug":"003vMReezy6P1KHLwtFe7&690.png","post":"cio5q2lig00017oyb696tvb8p","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1KnAQkx19&690.png","slug":"003vMReezy6P1KnAQkx19&690.png","post":"cio5q2lig00017oyb696tvb8p","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1LyH3gqae&690.jpg","slug":"003vMReezy6P1LyH3gqae&690.jpg","post":"cio5q2lig00017oyb696tvb8p","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1MG9JTO50&690.png","slug":"003vMReezy6P1MG9JTO50&690.png","post":"cio5q2lig00017oyb696tvb8p","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1MlAy3H5d&690.jpg","slug":"003vMReezy6P1MlAy3H5d&690.jpg","post":"cio5q2lig00017oyb696tvb8p","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1Mzjamje7&690.jpg","slug":"003vMReezy6P1Mzjamje7&690.jpg","post":"cio5q2lig00017oyb696tvb8p","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1O1zJBg32&690.jpg","slug":"003vMReezy6P1O1zJBg32&690.jpg","post":"cio5q2lig00017oyb696tvb8p","modified":0,"renderable":0},{"_id":"source/_posts/Nginx+Tomcat集群/003vMReezy6OUXDo7kt61&690.jpg","slug":"003vMReezy6OUXDo7kt61&690.jpg","post":"cio5uhgmn0003o0ybkqnkf09x","modified":0,"renderable":0},{"_id":"source/_posts/虚拟机联网方式设置/6c224f4a20a4462399c138119b22720e0cf3d7be.jpg","slug":"6c224f4a20a4462399c138119b22720e0cf3d7be.jpg","post":"cio6v5rl900024kybokn07zf9","modified":1,"renderable":0},{"_id":"source/_posts/虚拟机联网方式设置/241f95cad1c8a786c6c1d77d6409c93d71cf50dd.jpg","slug":"241f95cad1c8a786c6c1d77d6409c93d71cf50dd.jpg","post":"cio6v5rl900024kybokn07zf9","modified":1,"renderable":0},{"_id":"source/_posts/虚拟机联网方式设置/d31b0ef41bd5ad6ef751f89982cb39dbb6fd3c1c.jpg","slug":"d31b0ef41bd5ad6ef751f89982cb39dbb6fd3c1c.jpg","post":"cio6v5rl900024kybokn07zf9","modified":1,"renderable":0},{"_id":"source/_posts/虚拟机联网方式设置/203fb80e7bec54e72f564b6aba389b504fc26a0f.jpg","slug":"203fb80e7bec54e72f564b6aba389b504fc26a0f.jpg","post":"cio6v5rl900024kybokn07zf9","modified":1,"renderable":0},{"_id":"source/_posts/虚拟机联网方式设置/e7cd7b899e510fb3728324e3da33c895d1430c2f.jpg","slug":"e7cd7b899e510fb3728324e3da33c895d1430c2f.jpg","post":"cio6v5rl900024kybokn07zf9","modified":1,"renderable":0},{"_id":"source/_posts/虚拟机联网方式设置/d8f9d72a6059252d3cf04e70379b033b5ab5b9db.jpg","slug":"d8f9d72a6059252d3cf04e70379b033b5ab5b9db.jpg","post":"cio6v5rl900024kybokn07zf9","modified":1,"renderable":0},{"_id":"source/_posts/虚拟机联网方式设置/aec379310a55b31966f8dc0140a98226cffc1744.jpg","slug":"aec379310a55b31966f8dc0140a98226cffc1744.jpg","post":"cio6v5rl900024kybokn07zf9","modified":1,"renderable":0},{"_id":"source/_posts/虚拟机联网方式设置/a6efce1b9d16fdfa3265015bb48f8c5494ee7b7e.jpg","slug":"a6efce1b9d16fdfa3265015bb48f8c5494ee7b7e.jpg","post":"cio6v5rl900024kybokn07zf9","modified":1,"renderable":0},{"_id":"source/_posts/Java开发过程中异常汇总及解决办法/cdbf6c81800a19d86e32661230fa828ba61e46f0.jpg","slug":"cdbf6c81800a19d86e32661230fa828ba61e46f0.jpg","post":"cio6vlw9500054kybnbe9t0x8","modified":1,"renderable":0},{"_id":"source/_posts/Java开发过程中异常汇总及解决办法/b03533fa828ba61e7fad2a384234970a304e5962.jpg","slug":"b03533fa828ba61e7fad2a384234970a304e5962.jpg","post":"cio6vlw9500054kybnbe9t0x8","modified":1,"renderable":0},{"_id":"source/_posts/Java开发过程中异常汇总及解决办法/5366d0160924ab1893c50c2036fae6cd7a890bd1.jpg","slug":"5366d0160924ab1893c50c2036fae6cd7a890bd1.jpg","post":"cio6vlw9500054kybnbe9t0x8","modified":1,"renderable":0},{"_id":"source/_posts/Java开发过程中异常汇总及解决办法/7aec54e736d12f2e1dbd40774cc2d56285356869.jpg","slug":"7aec54e736d12f2e1dbd40774cc2d56285356869.jpg","post":"cio6vlw9500054kybnbe9t0x8","modified":1,"renderable":0},{"_id":"source/_posts/Java开发过程中异常汇总及解决办法/58ee3d6d55fbb2fb1bceb6054c4a20a44723dcc4.jpg","slug":"58ee3d6d55fbb2fb1bceb6054c4a20a44723dcc4.jpg","post":"cio6vlw9500054kybnbe9t0x8","modified":1,"renderable":0},{"_id":"source/_posts/中间件远程调试设置/b2de9c82d158ccbfbe89542d1ad8bc3eb13541f4.jpg","slug":"b2de9c82d158ccbfbe89542d1ad8bc3eb13541f4.jpg","post":"cio6wb5w300074kyb8znepkzp","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/d0c8a786c9177f3ea3573f0c72cf3bc79f3d5654.jpg","slug":"d0c8a786c9177f3ea3573f0c72cf3bc79f3d5654.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/a686c9177f3e67090c1786fe39c79f3df8dc5598.jpg","slug":"a686c9177f3e67090c1786fe39c79f3df8dc5598.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/f2deb48f8c5494ee6c91cc182ff5e0fe99257e04.jpg","slug":"f2deb48f8c5494ee6c91cc182ff5e0fe99257e04.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/ac6eddc451da81cbd80640cc5066d016082431cb.jpg","slug":"ac6eddc451da81cbd80640cc5066d016082431cb.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/d0c8a786c9177f3ea39a3f0c72cf3bc79f3d5601.jpg","slug":"d0c8a786c9177f3ea39a3f0c72cf3bc79f3d5601.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/4610b912c8fcc3ce12f40b329045d688d43f20ff.jpg","slug":"4610b912c8fcc3ce12f40b329045d688d43f20ff.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/c83d70cf3bc79f3d30562631b8a1cd11728b2978.jpg","slug":"c83d70cf3bc79f3d30562631b8a1cd11728b2978.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/0df431adcbef760930385b9e2cdda3cc7cd99e84.jpg","slug":"0df431adcbef760930385b9e2cdda3cc7cd99e84.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/2e2eb9389b504fc259ec7204e7dde71190ef6d04.jpg","slug":"2e2eb9389b504fc259ec7204e7dde71190ef6d04.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/4d086e061d950a7b2a1a8cc508d162d9f2d3c980.jpg","slug":"4d086e061d950a7b2a1a8cc508d162d9f2d3c980.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/7a899e510fb30f24acb42e02ca95d143ad4b0381.jpg","slug":"7a899e510fb30f24acb42e02ca95d143ad4b0381.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/b151f8198618367acea2bddc2c738bd4b31ce58c.jpg","slug":"b151f8198618367acea2bddc2c738bd4b31ce58c.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/96dda144ad345982c72127930ef431adcbef840c.jpg","slug":"96dda144ad345982c72127930ef431adcbef840c.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/e4dde71190ef76c63577392a9f16fdfaaf51670e.jpg","slug":"e4dde71190ef76c63577392a9f16fdfaaf51670e.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/96dda144ad345982c7ab27930ef431adcbef848a.jpg","slug":"96dda144ad345982c7ab27930ef431adcbef848a.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/c8ea15ce36d3d539d610c2c23887e950352ab086.jpg","slug":"c8ea15ce36d3d539d610c2c23887e950352ab086.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/c8ea15ce36d3d539d7c2cdc23887e950352ab030.jpg","slug":"c8ea15ce36d3d539d7c2cdc23887e950352ab030.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/5bafa40f4bfbfbed5277fb7e7af0f736afc31f81.jpg","slug":"5bafa40f4bfbfbed5277fb7e7af0f736afc31f81.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/1e30e924b899a90168ce99371f950a7b0208f53c.jpg","slug":"1e30e924b899a90168ce99371f950a7b0208f53c.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/4ec2d5628535e5dd690b68de74c6a7efce1b6288.jpg","slug":"4ec2d5628535e5dd690b68de74c6a7efce1b6288.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/3b87e950352ac65c7624ab72f9f2b21193138a8a.jpg","slug":"3b87e950352ac65c7624ab72f9f2b21193138a8a.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/42166d224f4a20a4063cf1c692529822720ed095.jpg","slug":"42166d224f4a20a4063cf1c692529822720ed095.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/caef76094b36acaf525e5bfd7ed98d1001e99c71.jpg","slug":"caef76094b36acaf525e5bfd7ed98d1001e99c71.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/023b5bb5c9ea15ce68f52d08b4003af33a87b29c.jpg","slug":"023b5bb5c9ea15ce68f52d08b4003af33a87b29c.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0},{"_id":"source/_posts/Jar转exe/c8ea15ce36d3d539d688c2c23887e950352ab07e.jpg","slug":"c8ea15ce36d3d539d688c2c23887e950352ab07e.jpg","post":"cio6wx4eq000i4kybsc7a3fm2","modified":1,"renderable":0}],"PostCategory":[{"post_id":"cio5q2lig00007oybozbqg9eo","category_id":"cio5q2lig00027oyb7hqytk4c","_id":"cio5q2liv00087oybo4jo8zoi"},{"post_id":"cio5q2lig00017oyb696tvb8p","category_id":"cio5q2liv00067oyboky4b2rk","_id":"cio5q2liv000a7oyb6czqpe40"},{"post_id":"cio5q2liv00037oyb1pgvab2o","category_id":"cio5q2liv00097oyb09lmhzyj","_id":"cio5q2liv000c7oybsm63piui"},{"post_id":"cio5q2liv00047oybaem3lmaf","category_id":"cio5q2liv000b7oyb0bqqc5t2","_id":"cio5q2ljb000e7oyb8kj18wjc"},{"post_id":"cio5q2liv00057oybjke4iqzy","category_id":"cio5q2liv000b7oyb0bqqc5t2","_id":"cio5q2ljb000f7oyb5814vcdf"},{"post_id":"cio5uhgm80000o0yb6mmgogp0","category_id":"cio5uhgmn0002o0yba26ei45b","_id":"cio5uhgn30008o0ybqbvovzpe"},{"post_id":"cio5uhgmn0001o0yb2cdt3uen","category_id":"cio5uhgn30006o0ybel9wspvp","_id":"cio5uhgn3000ao0yb4qe3jg1f"},{"post_id":"cio5uhgmn0003o0ybkqnkf09x","category_id":"cio5uhgmn0002o0yba26ei45b","_id":"cio5uhgnj000co0ybu076o25j"},{"post_id":"cio5uhgn30004o0ybbrfbmeys","category_id":"cio5uhgn3000bo0ybv6oy15t6","_id":"cio5uhgnj000eo0yb2mj2817l"},{"post_id":"cio5uhgn30005o0ybgzqolwrk","category_id":"cio5uhgnj000do0yb17ghm3b0","_id":"cio5uhgnj000go0ybib1prbkt"},{"post_id":"cio5uhgn30007o0ybg6dj3y0u","category_id":"cio5uhgnj000do0yb17ghm3b0","_id":"cio5uhgnj000ho0ybkz8ivyai"},{"post_id":"cio6v5rl900024kybokn07zf9","category_id":"cio6v6x9u00034kybmaaad45r","_id":"cio6v6x9u00044kybu7ikjw5c"},{"post_id":"cio6vlw9500054kybnbe9t0x8","category_id":"cio5q2liv000b7oyb0bqqc5t2","_id":"cio6vlw9f00064kyb13v3kwbp"},{"post_id":"cio6wb5w300074kyb8znepkzp","category_id":"cio6wfnl8000e4kybdcpzvv78","_id":"cio6wfnl8000f4kyburaqt85e"},{"post_id":"cio6wm9o7000g4kybgoxb6ud8","category_id":"cio5q2lig00027oyb7hqytk4c","_id":"cio6wm9o9000h4kybisvupz7g"},{"post_id":"cio6wx4eq000i4kybsc7a3fm2","category_id":"cio6y4g8w000l4kybowdxh6d5","_id":"cio6y4g8w000m4kybshplugpe"},{"post_id":"cio6y75io000n4kybtdpszzq7","category_id":"cio5q2lig00027oyb7hqytk4c","_id":"cio6y75iq000o4kybdf9vk4ja"},{"post_id":"cio6ymvdn000p4kybophujy1n","category_id":"cio5q2lig00027oyb7hqytk4c","_id":"cio6ymvdx000q4kybnduku7if"},{"post_id":"cio6yq5ro000r4kybrk3l8rrx","category_id":"cio5q2lig00027oyb7hqytk4c","_id":"cio6yq5rr000s4kyb9g0zesm4"},{"post_id":"cio6yuqa3000t4kybuvljn971","category_id":"cio6yv4p0000x4kyb2uvdwat4","_id":"cio6yv4p0000y4kybu9iahhqu"}],"PostTag":[],"Tag":[]}}