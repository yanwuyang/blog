{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"themes/landscape/source/css/css.css","path":"css/css.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1462880652854},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1462880652854},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1462880652854},{"_id":"themes/landscape/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1462880652854},{"_id":"themes/landscape/_config.yml","hash":"ef739d58d14e2c221d32860e54a4f326193ace5e","modified":1462894072631},{"_id":"themes/landscape/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1462880652856},{"_id":"source/favicon.ico","hash":"f50f1228739e790380a195144d715886ea1961e0","modified":1337753982000},{"_id":"source/_posts/Hadoop集群完全分布式部署.md","hash":"ca0992a7749f2da863cbbe4aa0a38aa12c8f32ec","modified":1462974224383},{"_id":"source/_posts/JavaScript面向对象编程.md","hash":"ffd6f24a99d76b8c6d59de7ca7f1267e90495cfa","modified":1462967643518},{"_id":"source/_posts/Java设计模式之观察者模式.md","hash":"07de8801d29fed50e52feca0865385222cf78a17","modified":1462970450499},{"_id":"source/_posts/Linux常见问题解决方法.md","hash":"73c03e08109ffb3a1245a4387c31c47e86ce8a8b","modified":1462967643519},{"_id":"source/_posts/System.setOut.md","hash":"3166c5c55586aeb268d1de251f83a45e4f72174a","modified":1462967643519},{"_id":"source/_posts/博客搭建.md","hash":"d3d5b75490c360e15a84a22bbe1b63fad9ba2444","modified":1462967643520},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1462880652873},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1462880652875},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1462880652875},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1462880652875},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"1ef52d096f074d88399ef1fa80d2f78a81d4b83c","modified":1462894393323},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1462880652876},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1462880652876},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1462880652876},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1462880652876},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1462880652876},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1462880652877},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1462880652877},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1462880652878},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1462880652875},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1KHLwtFe7&690.png","hash":"7043bbc267e660a3a615e5818e92c357f1443521","modified":1462972857742},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1KnAQkx19&690.png","hash":"a735aa956f5d380c96e4175097904fc93a6fc91d","modified":1462972598533},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1MG9JTO50&690.png","hash":"521acf61bbe9221bb399203d90d3679362fd7344","modified":1462971310892},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1MlAy3H5d&690.jpg","hash":"be5eb12da6ea72e0cf7d88228c74a0879ebea51d","modified":1462974125225},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1Mzjamje7&690.jpg","hash":"a75887f218506a0689004b4a5b46ac528e287d57","modified":1462974157741},{"_id":"source/_posts/Java设计模式之观察者模式/class.jpg","hash":"79d8669aca398f54e6e49d3c0ee39c83903876f3","modified":1462969264623},{"_id":"source/_posts/Java设计模式之观察者模式/003vMReezy6OWsC8Oogc8&690.jpg","hash":"3b2dab83187ba0e1975c7545c305ddf3f2bdd26b","modified":1462969737268},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"63bc4f8802967697a9a1096937384bafff0ecd62","modified":1462967643520},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1462880652906},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1462880652906},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"163544fba4d089b33254f36d7619431699ec01c9","modified":1462967643521},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1462880652906},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1462880652906},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"482cf2ab89581e8c08428862763b8ce034bf528f","modified":1462891266693},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c21ca56f419d01a9f49c27b6be9f4a98402b2aa3","modified":1462880652906},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1462880652907},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1462880652907},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1462880652905},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1462880652908},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1462880652908},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1462880652908},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1462880652908},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1462880652918},{"_id":"themes/landscape/source/css/_variables.styl","hash":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1462880652918},{"_id":"themes/landscape/source/css/css.css","hash":"9c4c9aae05ffd5a38082080efb3ddefbd8772cb2","modified":1462891041861},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1462880652919},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1462880652926},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1462880652927},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1462880652927},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1462880652927},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1462880652927},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1462880652928},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1462880652929},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1462880652929},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1462880652929},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1462880652926},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1LyH3gqae&690.jpg","hash":"ad604ae5be66bdcc06aaa1bf626f4303a05ac558","modified":1462974005188},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1O1zJBg32&690.jpg","hash":"a3a2c32631f0c7ab624041e591f17d760f910bcb","modified":1462974183242},{"_id":"source/_posts/Java设计模式之观察者模式/003vMReezy6OWsKgs3pa3&690.jpg","hash":"6616e5940a254b19bbe47b2967188cbf0ea6172e","modified":1462969606358},{"_id":"themes/landscape/source/js/jquery.min.js","hash":"a6eedf84389e1bc9f757bc2d19538f8c8d1cae9d","modified":1462891162286},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1462880652938},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1462880652934},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1462880652938},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1462880652938},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1462880652938},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1462880652938},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1462880652942},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"77d2a41321a2734a8007548e582184fad4ff247e","modified":1462975166201},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1462880652942},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1462880652944},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1462880652944},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"36eefe6332b86b66023a9884b754d305235846b4","modified":1462880652944},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1462880652944},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1462880652944},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1462880652944},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1462880652944},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1462880652942},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1462880652943},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1462880652946},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1462880652945},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1462880652946},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1462880652948},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1462880652947},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1462880652948},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1462880652948},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1462880652948},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1462880652948},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1462880652948},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1462880652948},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1462880652948},{"_id":"public/2016/05/11/JavaScript面向对象编程/index.html","hash":"257259592ad201ff9d6fe80d35e622fc067843a0","modified":1462977064980},{"_id":"public/2016/05/10/Linux常见问题解决方法/index.html","hash":"105cc7354812fe04c0deb2d08a951d3a2504a6de","modified":1462977064981},{"_id":"public/2016/05/10/博客搭建/index.html","hash":"a69b1d227203ce9de16bff14ca25269c95beee9a","modified":1462977064981},{"_id":"public/archives/index.html","hash":"af775cd73d15d2fd7b1782d0e39f297f84787a35","modified":1462977064982},{"_id":"public/archives/2015/index.html","hash":"be0c0dbef0a34fc07f6f67ed6334ca5a1687a8b5","modified":1462977064982},{"_id":"public/archives/2015/01/index.html","hash":"3ff5f589a72ba48b5dd0dbb6aec90f7bf5a6da81","modified":1462977064982},{"_id":"public/archives/2016/index.html","hash":"b509953ee14caeccb9715e1208c7e34fd76adc63","modified":1462977064982},{"_id":"public/archives/2016/05/index.html","hash":"d00545241b03a3af58828ab80100fd23bdde9c25","modified":1462977064982},{"_id":"public/categories/Hadoop/index.html","hash":"4aadf0a14e5f6b8227e204ed11a7486017526a5e","modified":1462977064981},{"_id":"public/categories/JavaScript/index.html","hash":"95d7f8d5a6b764cce5ec8d718e61441c95e6d761","modified":1462976723286},{"_id":"public/categories/Java/index.html","hash":"838e6eac2ac5169ac7c23b64664b7918ed9daa03","modified":1462977064981},{"_id":"public/categories/Linux/index.html","hash":"1c928a34b6b621ea3eb1dac5655285220ab6e5f4","modified":1462977064981},{"_id":"public/index.html","hash":"ad6220e8d21d4312a57d5541a9c4365f1a864f50","modified":1462977064982},{"_id":"public/2016/05/10/System.setOut/index.html","hash":"dcddfecf30497ccdc51c03c417ad386ca45dd69c","modified":1462977064982},{"_id":"public/2015/01/08/Hadoop集群完全分布式部署/index.html","hash":"434ec19ce574c0140e2bfad39b469f066ec6ca1b","modified":1462977064982},{"_id":"public/2015/01/05/Java设计模式之观察者模式/index.html","hash":"ed492f99c7dea42356733e18e63b1f6e7855f119","modified":1462977064982},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1462976723301},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1462976723301},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1462976723301},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1462976723301},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1462976723302},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1462976723302},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1462976723302},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1462976723302},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1462976723302},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1462976723302},{"_id":"public/2015/01/05/Java设计模式之观察者模式/003vMReezy6OWsC8Oogc8&690.jpg","hash":"3b2dab83187ba0e1975c7545c305ddf3f2bdd26b","modified":1462976723302},{"_id":"public/2015/01/05/Java设计模式之观察者模式/class.jpg","hash":"79d8669aca398f54e6e49d3c0ee39c83903876f3","modified":1462976723302},{"_id":"public/2015/01/08/Hadoop集群完全分布式部署/003vMReezy6P1KHLwtFe7&690.png","hash":"7043bbc267e660a3a615e5818e92c357f1443521","modified":1462976723302},{"_id":"public/2015/01/08/Hadoop集群完全分布式部署/003vMReezy6P1KnAQkx19&690.png","hash":"a735aa956f5d380c96e4175097904fc93a6fc91d","modified":1462976723302},{"_id":"public/2015/01/08/Hadoop集群完全分布式部署/003vMReezy6P1MG9JTO50&690.png","hash":"521acf61bbe9221bb399203d90d3679362fd7344","modified":1462976723303},{"_id":"public/2015/01/08/Hadoop集群完全分布式部署/003vMReezy6P1MlAy3H5d&690.jpg","hash":"be5eb12da6ea72e0cf7d88228c74a0879ebea51d","modified":1462976723303},{"_id":"public/2015/01/08/Hadoop集群完全分布式部署/003vMReezy6P1Mzjamje7&690.jpg","hash":"a75887f218506a0689004b4a5b46ac528e287d57","modified":1462976723304},{"_id":"public/favicon.ico","hash":"f50f1228739e790380a195144d715886ea1961e0","modified":1462976724111},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1462976724111},{"_id":"public/2015/01/05/Java设计模式之观察者模式/003vMReezy6OWsKgs3pa3&690.jpg","hash":"6616e5940a254b19bbe47b2967188cbf0ea6172e","modified":1462976724113},{"_id":"public/2015/01/08/Hadoop集群完全分布式部署/003vMReezy6P1LyH3gqae&690.jpg","hash":"ad604ae5be66bdcc06aaa1bf626f4303a05ac558","modified":1462976724113},{"_id":"public/2015/01/08/Hadoop集群完全分布式部署/003vMReezy6P1O1zJBg32&690.jpg","hash":"a3a2c32631f0c7ab624041e591f17d760f910bcb","modified":1462976724113},{"_id":"public/css/css.css","hash":"9c4c9aae05ffd5a38082080efb3ddefbd8772cb2","modified":1462976724145},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1462976724146},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1462976724146},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1462976724146},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1462976724146},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1462976724146},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1462976724146},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1462976724147},{"_id":"public/css/style.css","hash":"0c715c997f367c24d09fea5e6ce145909839f9d5","modified":1462976724148},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1462976724148},{"_id":"public/js/jquery.min.js","hash":"a6eedf84389e1bc9f757bc2d19538f8c8d1cae9d","modified":1462976724148},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1462976724148},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1462976724160},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1462976724160}],"Category":[{"name":"Hadoop","_id":"cio2ykfrp0002e4ybw2flix66"},{"name":"JavaScript","_id":"cio2ykfrz0006e4yb26h5ripk"},{"name":"Java","_id":"cio2ykfs30009e4ybq8ywltzs"},{"name":"Linux","_id":"cio2ykfs4000be4ybi0r0bip4"}],"Data":[],"Page":[],"Post":[{"title":"Hadoop集群完全分布式部署","date":"2015-01-08T15:45:20.000Z","comments":1,"toc":true,"_content":"\n## 准备环境\n|IP       \t\t | 主机名称    | 角色                  |操作系统   |\n|:--------------:|:-----------:|:---------------------:|:---------:|\n|192.168.131.129 |HadoopMaster | NameNode JobTracker   | CentOS 6.6|\n|192.168.131.128 |HadoopSlave1 | DataNode TaskTracker  | CentOS 6.6|\n\n<!-- more --> \n## hadoop版本\n***hadoop-2.6.0***\n***hadoop目录结构***\n![hadoop目录结构](003vMReezy6P1MG9JTO50&690.png)\n\n## 修改主机名称\n***将192.168.131.129修改为HadoopMaster***\n```\nshell vi /etc/sysconfig/network\nNETWORKING=yes\nHOSTNAME=HadoopMaster\n```\n***将192.168.131.128修改为HadoopSlave1***\n\n```\nshell vi /etc/sysconfig/network\nHOSTNAME=HadoopSlave\n```\n***通过命令hostname输出主机名称验证是否修改成功***\n\n```\nshell hostname\nHadoopMaster\n```\n\n## 配置hosts\n```\nshell vi /etc/hosts\n192.168.131.129 HadoopMaster\n192.168.131.128 HadoopSlave1\n```\n***在hosts文件添加如上两行 必须保证所有节点的host一样***\n\n\n## 安装jdk\n第一步：检查是否已经安装了jdk 存在就卸载 rpm -e 包名\n```\nshell rpm -qa|grep java\n```\n第二步：查看yum库是否有java安装包\n```\nshell yum -y list java*\n```\n第三步：选择一个进行安装\n```\nshell yum -y install java-1.6.0-openjdk*\n```\n第四步：确定是否安装成功\n```\nshell java -version\njava version \"1.6.0_20\"\nOpenJDK Runtime Environment (IcedTea6 1.9.10) (rhel-1.23.1.9.10.el5_7-i386)\nOpenJDK Client VM (build 19.0-b09, mixed mode)\n```\n显示如上信息表示安装成功\n\n## 安装软件（系统一般都自带）\n```\nshell yum install ssh\nshell yum install rsync\n```\n## 创建hadoop用户\n所有节点的用户名称和密码多必须保持一致相同\n\n## 切换到Hadoop用户配置ssh免密码登录\n1、在Master节点上执行\n```\nshell ssh-keygen -t dsa -P '' -f ~/.ssh/id_dsa \nshell cat ~/.ssh/id_dsa.pub >> ~/.ssh/authorized_keys \n```\n2、对authorized_keys 授权\n```\nshell chmod 744 authorized_keys \nshell ls ~/.ssh/\n```\n3、验证是否密码登录\n```\nshell ssh HadoopMaster\n```\n4、将id_dsa.pub 复制其他Slave节点hadoop用户~/.ssh/目录下\n```\nshell scp  ~/.ssh/id_dsa.pub hadoop@192.168.1.128:~/.ssh/\n```\n5、在Slave节点上通过\n```\nshell cat ~/.ssh/id_dsa.pub >> ~/.ssh/authorized_keys \n```\n生成authorized_keys并授权\n6、在Master节点上验证是否能密码了登录Slave节点\n```\nshell ssh HadoopSlave1\n```\n\n## 切换到root用户下载hadoop\n\n```\nshell http://apache.fayea.com/hadoop/common/hadoop-2.6.0/hadoop-2.6.0.tar.gz\n```\n[hadoop所有版本地址](http://apache.fayea.com/hadoop/common/)\n\n## 解压hadoop\n```\nshell tar -zxvf hadoop-2.6.0.tar.gz\n```\n将hadoop移动到/home/hadoop/目录下\n把hadoop-2.6.0目录操作权限分配给hadoop用户\n```\nshell chown hadoop hadoop-2.6.0/*\nshell chmod 700 hadoop-2.6.0/*\n```\n查看文件操作操作用户权限\n![文件权限](003vMReezy6P1KnAQkx19&690.png)\n\n## 设置hadoop启动参数\n### 设置java安装路径\n```\nshell vi etc/hadoop/hadoop-env.sh\nexport JAVA_HOME=java的安装路径\n```\n如果通过yum安装的jdk不知道java安装路径可以通过如下命令查找\n```\nshell which java\n/use/bin/java\n```\n得到的路径是/use/bin/java只需要将JAVE_HOME=/use即可\n![java环境配置](003vMReezy6P1KHLwtFe7&690.png)\n\n## 配置core-site.xml\n```xml\nshell /home/hadoop/hadoop-2.6.0/etc/hadoop/core-site.xml\n\n<configuration>\n\t<property>  \n        <name>hadoop.tmp.dir</name>  \n        <value>/home/hadoop/tmp</value>  \n        <description>Abase for other temporary directories.</description>  \n    </property>\n\t<property>\n      <name>fs.default.name</name>\n      <value>hdfs://HadoopMaster:9000</value>         \n  </property>          \n  <property>            \n       <name>mapred.job.tracker</name>           \n       <value>hdfs://HadoopMaster:9001</value>     \n  </property>                      \n  <property>  \n        <name>io.file.buffer.size</name>  \n        <value>4096</value>  \n  </property>\n</configuration>\n```\n\n## 配置hdfs-site.xml\n```xml\nshell vi /home/hadoop/hadoop-2.6.0/etc/hadoop/hdfs-site.xml\n\n<configuration>\n\t<property>  \n        <name>dfs.nameservices</name>  \n        <value>hadoop-cluster1</value>  \n    </property>  \n    <property>  \n        <name>dfs.namenode.secondary.http-address</name>  \n        <value>HadoopMaster:50090</value>  \n    </property>  \n    <property>  \n        <name>dfs.namenode.name.dir</name>  \n        <value>file:///home/hadoop/dfs/name</value>  \n    </property>  \n    <property>  \n        <name>dfs.datanode.data.dir</name>  \n        <value>file:///home/hadoop/dfs/data</value>  \n    </property>  \n    <property>  \n        <name>dfs.replication</name>  \n        <value>2</value>  \n    </property>  \n    <property>  \n        <name>dfs.webhdfs.enabled</name>  \n        <value>true</value>  \n    </property> \n</configuration>\n```\n\n## 配置slaves\n```\nshell vi /home/hadoop/hadoop-2.6.0/etc/hadoop/slaves\n```\n***集群中所有slave节点的配置文件HadoopSlave1是Slave节点主机名称***\n```\nshell cat etc/hadoop/slaves\nlocalhost\n```\n***将localhost修改为HadoopSlave1***\n\n## 配置hadoop安装目录\n```\nshell vi /etc/profile\n\nexport HADOOP_HOME=/home/hadoop/hadoop-2.6.0\nexport HADOOP_COMMON_HOME=$HADOOP_HOME\nexport HADOOP_HDFS_HOME=$HADOOP_HOME\nexport HADOOP_MAPRED_HOME=$HADOOP_HOME\nexport HADOOP_YARN_HOME=$HADOOP_HOME\nexport HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop\nexport PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOOME/sbin:$HADOOP_HOME/lib\nexport HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native\nexport HADOOP_OPTS=\"-Djava.library.path=$HADOOP_HOME/lib\"\n\n#使修改立即生效\nshell source /etc/profile \n```\n\n***注意：如果不添加上面配置可能会报如下错误***\n```\n15/01/07 23:52:35 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\nStarting namenodes on [OpenJDK Client VM warning: You have loaded library /home/hadoop/hadoop-2.6.0/lib/native/libhadoop.so.1.0.0 which might have disabled stack guard. The VM will try to fix the stack guard now.\nIt's highly recommended that you fix the library with 'execstack -c ', or link it with '-z noexecstack'.\n```\n\n## 格式化hadoop\n```\nshell bin/hadoop namenode -format\n```\n![格式化hadoop](003vMReezy6P1LyH3gqae&690.jpg)\n格式化成功\n\n## 同步节点\n将hadoop分别复制到其他节点的相同目录下（例如Master节点hadoop目录是/home/hadoop/hadoop-2.6.0其他节点也是这个目录）\n```\nshell scp -r hadoop-2.6.0 hadoop@192.168.131.128:/home/hadoop/\n```\n\n## 启动hadoop\n```\nshell sbin/start-all.sh\n```\n\n通过http://192.168.131.129:50070查看hadoop相关信息\n![启动成功](003vMReezy6P1MlAy3H5d&690.jpg)\n如果没有启动成功或者live noades为0查看hadoop启动日志就能很快解决问题\n![启动失败](003vMReezy6P1Mzjamje7&690.jpg)\n\n查看日志看到如异常（日志文件在 hadoop logs目录下）\n![查看日志](003vMReezy6P1O1zJBg32&690.jpg)\n这个问题主要是因为Master节点clusterID 和Slave节点clusterID 号不一致导致解决办法就是删除在core-site.xml中配置的hadoop.tmp.dir 的/home/hadoop/tmp目录下所有文件重新启动就ok了","source":"_posts/Hadoop集群完全分布式部署.md","raw":"---\ntitle: Hadoop集群完全分布式部署\ndate: 2015-01-08 23:45:20 \ncomments: true \ncategories: Hadoop\ntoc: true\n---\n\n## 准备环境\n|IP       \t\t | 主机名称    | 角色                  |操作系统   |\n|:--------------:|:-----------:|:---------------------:|:---------:|\n|192.168.131.129 |HadoopMaster | NameNode JobTracker   | CentOS 6.6|\n|192.168.131.128 |HadoopSlave1 | DataNode TaskTracker  | CentOS 6.6|\n\n<!-- more --> \n## hadoop版本\n***hadoop-2.6.0***\n***hadoop目录结构***\n![hadoop目录结构](003vMReezy6P1MG9JTO50&690.png)\n\n## 修改主机名称\n***将192.168.131.129修改为HadoopMaster***\n```\nshell vi /etc/sysconfig/network\nNETWORKING=yes\nHOSTNAME=HadoopMaster\n```\n***将192.168.131.128修改为HadoopSlave1***\n\n```\nshell vi /etc/sysconfig/network\nHOSTNAME=HadoopSlave\n```\n***通过命令hostname输出主机名称验证是否修改成功***\n\n```\nshell hostname\nHadoopMaster\n```\n\n## 配置hosts\n```\nshell vi /etc/hosts\n192.168.131.129 HadoopMaster\n192.168.131.128 HadoopSlave1\n```\n***在hosts文件添加如上两行 必须保证所有节点的host一样***\n\n\n## 安装jdk\n第一步：检查是否已经安装了jdk 存在就卸载 rpm -e 包名\n```\nshell rpm -qa|grep java\n```\n第二步：查看yum库是否有java安装包\n```\nshell yum -y list java*\n```\n第三步：选择一个进行安装\n```\nshell yum -y install java-1.6.0-openjdk*\n```\n第四步：确定是否安装成功\n```\nshell java -version\njava version \"1.6.0_20\"\nOpenJDK Runtime Environment (IcedTea6 1.9.10) (rhel-1.23.1.9.10.el5_7-i386)\nOpenJDK Client VM (build 19.0-b09, mixed mode)\n```\n显示如上信息表示安装成功\n\n## 安装软件（系统一般都自带）\n```\nshell yum install ssh\nshell yum install rsync\n```\n## 创建hadoop用户\n所有节点的用户名称和密码多必须保持一致相同\n\n## 切换到Hadoop用户配置ssh免密码登录\n1、在Master节点上执行\n```\nshell ssh-keygen -t dsa -P '' -f ~/.ssh/id_dsa \nshell cat ~/.ssh/id_dsa.pub >> ~/.ssh/authorized_keys \n```\n2、对authorized_keys 授权\n```\nshell chmod 744 authorized_keys \nshell ls ~/.ssh/\n```\n3、验证是否密码登录\n```\nshell ssh HadoopMaster\n```\n4、将id_dsa.pub 复制其他Slave节点hadoop用户~/.ssh/目录下\n```\nshell scp  ~/.ssh/id_dsa.pub hadoop@192.168.1.128:~/.ssh/\n```\n5、在Slave节点上通过\n```\nshell cat ~/.ssh/id_dsa.pub >> ~/.ssh/authorized_keys \n```\n生成authorized_keys并授权\n6、在Master节点上验证是否能密码了登录Slave节点\n```\nshell ssh HadoopSlave1\n```\n\n## 切换到root用户下载hadoop\n\n```\nshell http://apache.fayea.com/hadoop/common/hadoop-2.6.0/hadoop-2.6.0.tar.gz\n```\n[hadoop所有版本地址](http://apache.fayea.com/hadoop/common/)\n\n## 解压hadoop\n```\nshell tar -zxvf hadoop-2.6.0.tar.gz\n```\n将hadoop移动到/home/hadoop/目录下\n把hadoop-2.6.0目录操作权限分配给hadoop用户\n```\nshell chown hadoop hadoop-2.6.0/*\nshell chmod 700 hadoop-2.6.0/*\n```\n查看文件操作操作用户权限\n![文件权限](003vMReezy6P1KnAQkx19&690.png)\n\n## 设置hadoop启动参数\n### 设置java安装路径\n```\nshell vi etc/hadoop/hadoop-env.sh\nexport JAVA_HOME=java的安装路径\n```\n如果通过yum安装的jdk不知道java安装路径可以通过如下命令查找\n```\nshell which java\n/use/bin/java\n```\n得到的路径是/use/bin/java只需要将JAVE_HOME=/use即可\n![java环境配置](003vMReezy6P1KHLwtFe7&690.png)\n\n## 配置core-site.xml\n```xml\nshell /home/hadoop/hadoop-2.6.0/etc/hadoop/core-site.xml\n\n<configuration>\n\t<property>  \n        <name>hadoop.tmp.dir</name>  \n        <value>/home/hadoop/tmp</value>  \n        <description>Abase for other temporary directories.</description>  \n    </property>\n\t<property>\n      <name>fs.default.name</name>\n      <value>hdfs://HadoopMaster:9000</value>         \n  </property>          \n  <property>            \n       <name>mapred.job.tracker</name>           \n       <value>hdfs://HadoopMaster:9001</value>     \n  </property>                      \n  <property>  \n        <name>io.file.buffer.size</name>  \n        <value>4096</value>  \n  </property>\n</configuration>\n```\n\n## 配置hdfs-site.xml\n```xml\nshell vi /home/hadoop/hadoop-2.6.0/etc/hadoop/hdfs-site.xml\n\n<configuration>\n\t<property>  \n        <name>dfs.nameservices</name>  \n        <value>hadoop-cluster1</value>  \n    </property>  \n    <property>  \n        <name>dfs.namenode.secondary.http-address</name>  \n        <value>HadoopMaster:50090</value>  \n    </property>  \n    <property>  \n        <name>dfs.namenode.name.dir</name>  \n        <value>file:///home/hadoop/dfs/name</value>  \n    </property>  \n    <property>  \n        <name>dfs.datanode.data.dir</name>  \n        <value>file:///home/hadoop/dfs/data</value>  \n    </property>  \n    <property>  \n        <name>dfs.replication</name>  \n        <value>2</value>  \n    </property>  \n    <property>  \n        <name>dfs.webhdfs.enabled</name>  \n        <value>true</value>  \n    </property> \n</configuration>\n```\n\n## 配置slaves\n```\nshell vi /home/hadoop/hadoop-2.6.0/etc/hadoop/slaves\n```\n***集群中所有slave节点的配置文件HadoopSlave1是Slave节点主机名称***\n```\nshell cat etc/hadoop/slaves\nlocalhost\n```\n***将localhost修改为HadoopSlave1***\n\n## 配置hadoop安装目录\n```\nshell vi /etc/profile\n\nexport HADOOP_HOME=/home/hadoop/hadoop-2.6.0\nexport HADOOP_COMMON_HOME=$HADOOP_HOME\nexport HADOOP_HDFS_HOME=$HADOOP_HOME\nexport HADOOP_MAPRED_HOME=$HADOOP_HOME\nexport HADOOP_YARN_HOME=$HADOOP_HOME\nexport HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop\nexport PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOOME/sbin:$HADOOP_HOME/lib\nexport HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native\nexport HADOOP_OPTS=\"-Djava.library.path=$HADOOP_HOME/lib\"\n\n#使修改立即生效\nshell source /etc/profile \n```\n\n***注意：如果不添加上面配置可能会报如下错误***\n```\n15/01/07 23:52:35 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\nStarting namenodes on [OpenJDK Client VM warning: You have loaded library /home/hadoop/hadoop-2.6.0/lib/native/libhadoop.so.1.0.0 which might have disabled stack guard. The VM will try to fix the stack guard now.\nIt's highly recommended that you fix the library with 'execstack -c ', or link it with '-z noexecstack'.\n```\n\n## 格式化hadoop\n```\nshell bin/hadoop namenode -format\n```\n![格式化hadoop](003vMReezy6P1LyH3gqae&690.jpg)\n格式化成功\n\n## 同步节点\n将hadoop分别复制到其他节点的相同目录下（例如Master节点hadoop目录是/home/hadoop/hadoop-2.6.0其他节点也是这个目录）\n```\nshell scp -r hadoop-2.6.0 hadoop@192.168.131.128:/home/hadoop/\n```\n\n## 启动hadoop\n```\nshell sbin/start-all.sh\n```\n\n通过http://192.168.131.129:50070查看hadoop相关信息\n![启动成功](003vMReezy6P1MlAy3H5d&690.jpg)\n如果没有启动成功或者live noades为0查看hadoop启动日志就能很快解决问题\n![启动失败](003vMReezy6P1Mzjamje7&690.jpg)\n\n查看日志看到如异常（日志文件在 hadoop logs目录下）\n![查看日志](003vMReezy6P1O1zJBg32&690.jpg)\n这个问题主要是因为Master节点clusterID 和Slave节点clusterID 号不一致导致解决办法就是删除在core-site.xml中配置的hadoop.tmp.dir 的/home/hadoop/tmp目录下所有文件重新启动就ok了","slug":"Hadoop集群完全分布式部署","published":1,"updated":"2016-05-11T13:43:44.383Z","layout":"post","photos":[],"link":"","_id":"cio2ykfre0000e4ybv6zw6eui","content":"<h2 id=\"准备环境\"><a href=\"#准备环境\" class=\"headerlink\" title=\"准备环境\"></a>准备环境</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">IP</th>\n<th style=\"text-align:center\">主机名称</th>\n<th style=\"text-align:center\">角色</th>\n<th style=\"text-align:center\">操作系统</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">192.168.131.129</td>\n<td style=\"text-align:center\">HadoopMaster</td>\n<td style=\"text-align:center\">NameNode JobTracker</td>\n<td style=\"text-align:center\">CentOS 6.6</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">192.168.131.128</td>\n<td style=\"text-align:center\">HadoopSlave1</td>\n<td style=\"text-align:center\">DataNode TaskTracker</td>\n<td style=\"text-align:center\">CentOS 6.6</td>\n</tr>\n</tbody>\n</table>\n<a id=\"more\"></a> \n<h2 id=\"hadoop版本\"><a href=\"#hadoop版本\" class=\"headerlink\" title=\"hadoop版本\"></a>hadoop版本</h2><p><strong><em>hadoop-2.6.0</em></strong><br><strong><em>hadoop目录结构</em></strong><br><img src=\"003vMReezy6P1MG9JTO50&amp;690.png\" alt=\"hadoop目录结构\"></p>\n<h2 id=\"修改主机名称\"><a href=\"#修改主机名称\" class=\"headerlink\" title=\"修改主机名称\"></a>修改主机名称</h2><p><strong><em>将192.168.131.129修改为HadoopMaster</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /etc/sysconfig/network</span><br><span class=\"line\">NETWORKING=yes</span><br><span class=\"line\">HOSTNAME=HadoopMaster</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>将192.168.131.128修改为HadoopSlave1</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /etc/sysconfig/network</span><br><span class=\"line\">HOSTNAME=HadoopSlave</span><br></pre></td></tr></table></figure>\n<p><strong><em>通过命令hostname输出主机名称验证是否修改成功</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell hostname</span><br><span class=\"line\">HadoopMaster</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置hosts\"><a href=\"#配置hosts\" class=\"headerlink\" title=\"配置hosts\"></a>配置hosts</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /etc/hosts</span><br><span class=\"line\">192.168.131.129 HadoopMaster</span><br><span class=\"line\">192.168.131.128 HadoopSlave1</span><br></pre></td></tr></table></figure>\n<p><strong><em>在hosts文件添加如上两行 必须保证所有节点的host一样</em></strong></p>\n<h2 id=\"安装jdk\"><a href=\"#安装jdk\" class=\"headerlink\" title=\"安装jdk\"></a>安装jdk</h2><p>第一步：检查是否已经安装了jdk 存在就卸载 rpm -e 包名<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell rpm -qa|grep java</span><br></pre></td></tr></table></figure></p>\n<p>第二步：查看yum库是否有java安装包<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell yum -y list java*</span><br></pre></td></tr></table></figure></p>\n<p>第三步：选择一个进行安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell yum -y install java-1.6.0-openjdk*</span><br></pre></td></tr></table></figure></p>\n<p>第四步：确定是否安装成功<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell java -version</span><br><span class=\"line\">java version &quot;1.6.0_20&quot;</span><br><span class=\"line\">OpenJDK Runtime Environment (IcedTea6 1.9.10) (rhel-1.23.1.9.10.el5_7-i386)</span><br><span class=\"line\">OpenJDK Client VM (build 19.0-b09, mixed mode)</span><br></pre></td></tr></table></figure></p>\n<p>显示如上信息表示安装成功</p>\n<h2 id=\"安装软件（系统一般都自带）\"><a href=\"#安装软件（系统一般都自带）\" class=\"headerlink\" title=\"安装软件（系统一般都自带）\"></a>安装软件（系统一般都自带）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell yum install ssh</span><br><span class=\"line\">shell yum install rsync</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建hadoop用户\"><a href=\"#创建hadoop用户\" class=\"headerlink\" title=\"创建hadoop用户\"></a>创建hadoop用户</h2><p>所有节点的用户名称和密码多必须保持一致相同</p>\n<h2 id=\"切换到Hadoop用户配置ssh免密码登录\"><a href=\"#切换到Hadoop用户配置ssh免密码登录\" class=\"headerlink\" title=\"切换到Hadoop用户配置ssh免密码登录\"></a>切换到Hadoop用户配置ssh免密码登录</h2><p>1、在Master节点上执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell ssh-keygen -t dsa -P &apos;&apos; -f ~/.ssh/id_dsa </span><br><span class=\"line\">shell cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></p>\n<p>2、对authorized_keys 授权<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell chmod 744 authorized_keys </span><br><span class=\"line\">shell ls ~/.ssh/</span><br></pre></td></tr></table></figure></p>\n<p>3、验证是否密码登录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell ssh HadoopMaster</span><br></pre></td></tr></table></figure></p>\n<p>4、将id_dsa.pub 复制其他Slave节点hadoop用户~/.ssh/目录下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell scp  ~/.ssh/id_dsa.pub hadoop@192.168.1.128:~/.ssh/</span><br></pre></td></tr></table></figure></p>\n<p>5、在Slave节点上通过<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></p>\n<p>生成authorized_keys并授权<br>6、在Master节点上验证是否能密码了登录Slave节点<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell ssh HadoopSlave1</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"切换到root用户下载hadoop\"><a href=\"#切换到root用户下载hadoop\" class=\"headerlink\" title=\"切换到root用户下载hadoop\"></a>切换到root用户下载hadoop</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell http://apache.fayea.com/hadoop/common/hadoop-2.6.0/hadoop-2.6.0.tar.gz</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://apache.fayea.com/hadoop/common/\" target=\"_blank\" rel=\"external\">hadoop所有版本地址</a></p>\n<h2 id=\"解压hadoop\"><a href=\"#解压hadoop\" class=\"headerlink\" title=\"解压hadoop\"></a>解压hadoop</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell tar -zxvf hadoop-2.6.0.tar.gz</span><br></pre></td></tr></table></figure>\n<p>将hadoop移动到/home/hadoop/目录下<br>把hadoop-2.6.0目录操作权限分配给hadoop用户<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell chown hadoop hadoop-2.6.0/*</span><br><span class=\"line\">shell chmod 700 hadoop-2.6.0/*</span><br></pre></td></tr></table></figure></p>\n<p>查看文件操作操作用户权限<br><img src=\"003vMReezy6P1KnAQkx19&amp;690.png\" alt=\"文件权限\"></p>\n<h2 id=\"设置hadoop启动参数\"><a href=\"#设置hadoop启动参数\" class=\"headerlink\" title=\"设置hadoop启动参数\"></a>设置hadoop启动参数</h2><h3 id=\"设置java安装路径\"><a href=\"#设置java安装路径\" class=\"headerlink\" title=\"设置java安装路径\"></a>设置java安装路径</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi etc/hadoop/hadoop-env.sh</span><br><span class=\"line\">export JAVA_HOME=java的安装路径</span><br></pre></td></tr></table></figure>\n<p>如果通过yum安装的jdk不知道java安装路径可以通过如下命令查找<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell which java</span><br><span class=\"line\">/use/bin/java</span><br></pre></td></tr></table></figure></p>\n<p>得到的路径是/use/bin/java只需要将JAVE_HOME=/use即可<br><img src=\"003vMReezy6P1KHLwtFe7&amp;690.png\" alt=\"java环境配置\"></p>\n<h2 id=\"配置core-site-xml\"><a href=\"#配置core-site-xml\" class=\"headerlink\" title=\"配置core-site.xml\"></a>配置core-site.xml</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell /home/hadoop/hadoop-2.6.0/etc/hadoop/core-site.xml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>hadoop.tmp.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>/home/hadoop/tmp<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Abase for other temporary directories.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>fs.default.name<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>hdfs://HadoopMaster:9000<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>         </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>          </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>            </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>mapred.job.tracker<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>           </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>hdfs://HadoopMaster:9001<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>                      </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>io.file.buffer.size<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>4096<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"配置hdfs-site-xml\"><a href=\"#配置hdfs-site-xml\" class=\"headerlink\" title=\"配置hdfs-site.xml\"></a>配置hdfs-site.xml</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /home/hadoop/hadoop-2.6.0/etc/hadoop/hdfs-site.xml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.nameservices<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>hadoop-cluster1<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>HadoopMaster:50090<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.name.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///home/hadoop/dfs/name<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.datanode.data.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///home/hadoop/dfs/data<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.replication<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.webhdfs.enabled<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"配置slaves\"><a href=\"#配置slaves\" class=\"headerlink\" title=\"配置slaves\"></a>配置slaves</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /home/hadoop/hadoop-2.6.0/etc/hadoop/slaves</span><br></pre></td></tr></table></figure>\n<p><strong><em>集群中所有slave节点的配置文件HadoopSlave1是Slave节点主机名称</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell cat etc/hadoop/slaves</span><br><span class=\"line\">localhost</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>将localhost修改为HadoopSlave1</em></strong></p>\n<h2 id=\"配置hadoop安装目录\"><a href=\"#配置hadoop安装目录\" class=\"headerlink\" title=\"配置hadoop安装目录\"></a>配置hadoop安装目录</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">export HADOOP_HOME=/home/hadoop/hadoop-2.6.0</span><br><span class=\"line\">export HADOOP_COMMON_HOME=$HADOOP_HOME</span><br><span class=\"line\">export HADOOP_HDFS_HOME=$HADOOP_HOME</span><br><span class=\"line\">export HADOOP_MAPRED_HOME=$HADOOP_HOME</span><br><span class=\"line\">export HADOOP_YARN_HOME=$HADOOP_HOME</span><br><span class=\"line\">export HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop</span><br><span class=\"line\">export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOOME/sbin:$HADOOP_HOME/lib</span><br><span class=\"line\">export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native</span><br><span class=\"line\">export HADOOP_OPTS=&quot;-Djava.library.path=$HADOOP_HOME/lib&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">#使修改立即生效</span><br><span class=\"line\">shell source /etc/profile</span><br></pre></td></tr></table></figure>\n<p><strong><em>注意：如果不添加上面配置可能会报如下错误</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">15/01/07 23:52:35 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable</span><br><span class=\"line\">Starting namenodes on [OpenJDK Client VM warning: You have loaded library /home/hadoop/hadoop-2.6.0/lib/native/libhadoop.so.1.0.0 which might have disabled stack guard. The VM will try to fix the stack guard now.</span><br><span class=\"line\">It&apos;s highly recommended that you fix the library with &apos;execstack -c &apos;, or link it with &apos;-z noexecstack&apos;.</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"格式化hadoop\"><a href=\"#格式化hadoop\" class=\"headerlink\" title=\"格式化hadoop\"></a>格式化hadoop</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell bin/hadoop namenode -format</span><br></pre></td></tr></table></figure>\n<p><img src=\"003vMReezy6P1LyH3gqae&amp;690.jpg\" alt=\"格式化hadoop\"><br>格式化成功</p>\n<h2 id=\"同步节点\"><a href=\"#同步节点\" class=\"headerlink\" title=\"同步节点\"></a>同步节点</h2><p>将hadoop分别复制到其他节点的相同目录下（例如Master节点hadoop目录是/home/hadoop/hadoop-2.6.0其他节点也是这个目录）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell scp -r hadoop-2.6.0 hadoop@192.168.131.128:/home/hadoop/</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"启动hadoop\"><a href=\"#启动hadoop\" class=\"headerlink\" title=\"启动hadoop\"></a>启动hadoop</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell sbin/start-all.sh</span><br></pre></td></tr></table></figure>\n<p>通过<a href=\"http://192.168.131.129:50070查看hadoop相关信息\" target=\"_blank\" rel=\"external\">http://192.168.131.129:50070查看hadoop相关信息</a><br><img src=\"003vMReezy6P1MlAy3H5d&amp;690.jpg\" alt=\"启动成功\"><br>如果没有启动成功或者live noades为0查看hadoop启动日志就能很快解决问题<br><img src=\"003vMReezy6P1Mzjamje7&amp;690.jpg\" alt=\"启动失败\"></p>\n<p>查看日志看到如异常（日志文件在 hadoop logs目录下）<br><img src=\"003vMReezy6P1O1zJBg32&amp;690.jpg\" alt=\"查看日志\"><br>这个问题主要是因为Master节点clusterID 和Slave节点clusterID 号不一致导致解决办法就是删除在core-site.xml中配置的hadoop.tmp.dir 的/home/hadoop/tmp目录下所有文件重新启动就ok了</p>\n","excerpt":"<h2 id=\"准备环境\"><a href=\"#准备环境\" class=\"headerlink\" title=\"准备环境\"></a>准备环境</h2><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">IP</th>\n<th style=\"text-align:center\">主机名称</th>\n<th style=\"text-align:center\">角色</th>\n<th style=\"text-align:center\">操作系统</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">192.168.131.129</td>\n<td style=\"text-align:center\">HadoopMaster</td>\n<td style=\"text-align:center\">NameNode JobTracker</td>\n<td style=\"text-align:center\">CentOS 6.6</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">192.168.131.128</td>\n<td style=\"text-align:center\">HadoopSlave1</td>\n<td style=\"text-align:center\">DataNode TaskTracker</td>\n<td style=\"text-align:center\">CentOS 6.6</td>\n</tr>\n</tbody>\n</table>","more":"<h2 id=\"hadoop版本\"><a href=\"#hadoop版本\" class=\"headerlink\" title=\"hadoop版本\"></a>hadoop版本</h2><p><strong><em>hadoop-2.6.0</em></strong><br><strong><em>hadoop目录结构</em></strong><br><img src=\"003vMReezy6P1MG9JTO50&amp;690.png\" alt=\"hadoop目录结构\"></p>\n<h2 id=\"修改主机名称\"><a href=\"#修改主机名称\" class=\"headerlink\" title=\"修改主机名称\"></a>修改主机名称</h2><p><strong><em>将192.168.131.129修改为HadoopMaster</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /etc/sysconfig/network</span><br><span class=\"line\">NETWORKING=yes</span><br><span class=\"line\">HOSTNAME=HadoopMaster</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>将192.168.131.128修改为HadoopSlave1</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /etc/sysconfig/network</span><br><span class=\"line\">HOSTNAME=HadoopSlave</span><br></pre></td></tr></table></figure>\n<p><strong><em>通过命令hostname输出主机名称验证是否修改成功</em></strong></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell hostname</span><br><span class=\"line\">HadoopMaster</span><br></pre></td></tr></table></figure>\n<h2 id=\"配置hosts\"><a href=\"#配置hosts\" class=\"headerlink\" title=\"配置hosts\"></a>配置hosts</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /etc/hosts</span><br><span class=\"line\">192.168.131.129 HadoopMaster</span><br><span class=\"line\">192.168.131.128 HadoopSlave1</span><br></pre></td></tr></table></figure>\n<p><strong><em>在hosts文件添加如上两行 必须保证所有节点的host一样</em></strong></p>\n<h2 id=\"安装jdk\"><a href=\"#安装jdk\" class=\"headerlink\" title=\"安装jdk\"></a>安装jdk</h2><p>第一步：检查是否已经安装了jdk 存在就卸载 rpm -e 包名<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell rpm -qa|grep java</span><br></pre></td></tr></table></figure></p>\n<p>第二步：查看yum库是否有java安装包<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell yum -y list java*</span><br></pre></td></tr></table></figure></p>\n<p>第三步：选择一个进行安装<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell yum -y install java-1.6.0-openjdk*</span><br></pre></td></tr></table></figure></p>\n<p>第四步：确定是否安装成功<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell java -version</span><br><span class=\"line\">java version &quot;1.6.0_20&quot;</span><br><span class=\"line\">OpenJDK Runtime Environment (IcedTea6 1.9.10) (rhel-1.23.1.9.10.el5_7-i386)</span><br><span class=\"line\">OpenJDK Client VM (build 19.0-b09, mixed mode)</span><br></pre></td></tr></table></figure></p>\n<p>显示如上信息表示安装成功</p>\n<h2 id=\"安装软件（系统一般都自带）\"><a href=\"#安装软件（系统一般都自带）\" class=\"headerlink\" title=\"安装软件（系统一般都自带）\"></a>安装软件（系统一般都自带）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell yum install ssh</span><br><span class=\"line\">shell yum install rsync</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建hadoop用户\"><a href=\"#创建hadoop用户\" class=\"headerlink\" title=\"创建hadoop用户\"></a>创建hadoop用户</h2><p>所有节点的用户名称和密码多必须保持一致相同</p>\n<h2 id=\"切换到Hadoop用户配置ssh免密码登录\"><a href=\"#切换到Hadoop用户配置ssh免密码登录\" class=\"headerlink\" title=\"切换到Hadoop用户配置ssh免密码登录\"></a>切换到Hadoop用户配置ssh免密码登录</h2><p>1、在Master节点上执行<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell ssh-keygen -t dsa -P &apos;&apos; -f ~/.ssh/id_dsa </span><br><span class=\"line\">shell cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></p>\n<p>2、对authorized_keys 授权<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell chmod 744 authorized_keys </span><br><span class=\"line\">shell ls ~/.ssh/</span><br></pre></td></tr></table></figure></p>\n<p>3、验证是否密码登录<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell ssh HadoopMaster</span><br></pre></td></tr></table></figure></p>\n<p>4、将id_dsa.pub 复制其他Slave节点hadoop用户~/.ssh/目录下<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell scp  ~/.ssh/id_dsa.pub hadoop@192.168.1.128:~/.ssh/</span><br></pre></td></tr></table></figure></p>\n<p>5、在Slave节点上通过<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell cat ~/.ssh/id_dsa.pub &gt;&gt; ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure></p>\n<p>生成authorized_keys并授权<br>6、在Master节点上验证是否能密码了登录Slave节点<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell ssh HadoopSlave1</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"切换到root用户下载hadoop\"><a href=\"#切换到root用户下载hadoop\" class=\"headerlink\" title=\"切换到root用户下载hadoop\"></a>切换到root用户下载hadoop</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell http://apache.fayea.com/hadoop/common/hadoop-2.6.0/hadoop-2.6.0.tar.gz</span><br></pre></td></tr></table></figure>\n<p><a href=\"http://apache.fayea.com/hadoop/common/\">hadoop所有版本地址</a></p>\n<h2 id=\"解压hadoop\"><a href=\"#解压hadoop\" class=\"headerlink\" title=\"解压hadoop\"></a>解压hadoop</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell tar -zxvf hadoop-2.6.0.tar.gz</span><br></pre></td></tr></table></figure>\n<p>将hadoop移动到/home/hadoop/目录下<br>把hadoop-2.6.0目录操作权限分配给hadoop用户<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell chown hadoop hadoop-2.6.0/*</span><br><span class=\"line\">shell chmod 700 hadoop-2.6.0/*</span><br></pre></td></tr></table></figure></p>\n<p>查看文件操作操作用户权限<br><img src=\"003vMReezy6P1KnAQkx19&amp;690.png\" alt=\"文件权限\"></p>\n<h2 id=\"设置hadoop启动参数\"><a href=\"#设置hadoop启动参数\" class=\"headerlink\" title=\"设置hadoop启动参数\"></a>设置hadoop启动参数</h2><h3 id=\"设置java安装路径\"><a href=\"#设置java安装路径\" class=\"headerlink\" title=\"设置java安装路径\"></a>设置java安装路径</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi etc/hadoop/hadoop-env.sh</span><br><span class=\"line\">export JAVA_HOME=java的安装路径</span><br></pre></td></tr></table></figure>\n<p>如果通过yum安装的jdk不知道java安装路径可以通过如下命令查找<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell which java</span><br><span class=\"line\">/use/bin/java</span><br></pre></td></tr></table></figure></p>\n<p>得到的路径是/use/bin/java只需要将JAVE_HOME=/use即可<br><img src=\"003vMReezy6P1KHLwtFe7&amp;690.png\" alt=\"java环境配置\"></p>\n<h2 id=\"配置core-site-xml\"><a href=\"#配置core-site-xml\" class=\"headerlink\" title=\"配置core-site.xml\"></a>配置core-site.xml</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell /home/hadoop/hadoop-2.6.0/etc/hadoop/core-site.xml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>hadoop.tmp.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>/home/hadoop/tmp<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">description</span>&gt;</span>Abase for other temporary directories.<span class=\"tag\">&lt;/<span class=\"name\">description</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>fs.default.name<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span></span><br><span class=\"line\">      <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>hdfs://HadoopMaster:9000<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>         </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>          </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>            </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>mapred.job.tracker<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>           </span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>hdfs://HadoopMaster:9001<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>     </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>                      </span><br><span class=\"line\">  <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>io.file.buffer.size<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>4096<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">  <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"配置hdfs-site-xml\"><a href=\"#配置hdfs-site-xml\" class=\"headerlink\" title=\"配置hdfs-site.xml\"></a>配置hdfs-site.xml</h2><figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /home/hadoop/hadoop-2.6.0/etc/hadoop/hdfs-site.xml</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">configuration</span>&gt;</span></span><br><span class=\"line\">\t<span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.nameservices<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>hadoop-cluster1<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>HadoopMaster:50090<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.namenode.name.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///home/hadoop/dfs/name<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.datanode.data.dir<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>file:///home/hadoop/dfs/data<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.replication<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>2<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">property</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">name</span>&gt;</span>dfs.webhdfs.enabled<span class=\"tag\">&lt;/<span class=\"name\">name</span>&gt;</span>  </span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">value</span>&gt;</span>true<span class=\"tag\">&lt;/<span class=\"name\">value</span>&gt;</span>  </span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">property</span>&gt;</span> </span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"配置slaves\"><a href=\"#配置slaves\" class=\"headerlink\" title=\"配置slaves\"></a>配置slaves</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /home/hadoop/hadoop-2.6.0/etc/hadoop/slaves</span><br></pre></td></tr></table></figure>\n<p><strong><em>集群中所有slave节点的配置文件HadoopSlave1是Slave节点主机名称</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell cat etc/hadoop/slaves</span><br><span class=\"line\">localhost</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>将localhost修改为HadoopSlave1</em></strong></p>\n<h2 id=\"配置hadoop安装目录\"><a href=\"#配置hadoop安装目录\" class=\"headerlink\" title=\"配置hadoop安装目录\"></a>配置hadoop安装目录</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell vi /etc/profile</span><br><span class=\"line\"></span><br><span class=\"line\">export HADOOP_HOME=/home/hadoop/hadoop-2.6.0</span><br><span class=\"line\">export HADOOP_COMMON_HOME=$HADOOP_HOME</span><br><span class=\"line\">export HADOOP_HDFS_HOME=$HADOOP_HOME</span><br><span class=\"line\">export HADOOP_MAPRED_HOME=$HADOOP_HOME</span><br><span class=\"line\">export HADOOP_YARN_HOME=$HADOOP_HOME</span><br><span class=\"line\">export HADOOP_CONF_DIR=$HADOOP_HOME/etc/hadoop</span><br><span class=\"line\">export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOOME/sbin:$HADOOP_HOME/lib</span><br><span class=\"line\">export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native</span><br><span class=\"line\">export HADOOP_OPTS=&quot;-Djava.library.path=$HADOOP_HOME/lib&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">#使修改立即生效</span><br><span class=\"line\">shell source /etc/profile</span><br></pre></td></tr></table></figure>\n<p><strong><em>注意：如果不添加上面配置可能会报如下错误</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">15/01/07 23:52:35 WARN util.NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable</span><br><span class=\"line\">Starting namenodes on [OpenJDK Client VM warning: You have loaded library /home/hadoop/hadoop-2.6.0/lib/native/libhadoop.so.1.0.0 which might have disabled stack guard. The VM will try to fix the stack guard now.</span><br><span class=\"line\">It&apos;s highly recommended that you fix the library with &apos;execstack -c &apos;, or link it with &apos;-z noexecstack&apos;.</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"格式化hadoop\"><a href=\"#格式化hadoop\" class=\"headerlink\" title=\"格式化hadoop\"></a>格式化hadoop</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell bin/hadoop namenode -format</span><br></pre></td></tr></table></figure>\n<p><img src=\"003vMReezy6P1LyH3gqae&amp;690.jpg\" alt=\"格式化hadoop\"><br>格式化成功</p>\n<h2 id=\"同步节点\"><a href=\"#同步节点\" class=\"headerlink\" title=\"同步节点\"></a>同步节点</h2><p>将hadoop分别复制到其他节点的相同目录下（例如Master节点hadoop目录是/home/hadoop/hadoop-2.6.0其他节点也是这个目录）<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell scp -r hadoop-2.6.0 hadoop@192.168.131.128:/home/hadoop/</span><br></pre></td></tr></table></figure></p>\n<h2 id=\"启动hadoop\"><a href=\"#启动hadoop\" class=\"headerlink\" title=\"启动hadoop\"></a>启动hadoop</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shell sbin/start-all.sh</span><br></pre></td></tr></table></figure>\n<p>通过<a href=\"http://192.168.131.129:50070查看hadoop相关信息\">http://192.168.131.129:50070查看hadoop相关信息</a><br><img src=\"003vMReezy6P1MlAy3H5d&amp;690.jpg\" alt=\"启动成功\"><br>如果没有启动成功或者live noades为0查看hadoop启动日志就能很快解决问题<br><img src=\"003vMReezy6P1Mzjamje7&amp;690.jpg\" alt=\"启动失败\"></p>\n<p>查看日志看到如异常（日志文件在 hadoop logs目录下）<br><img src=\"003vMReezy6P1O1zJBg32&amp;690.jpg\" alt=\"查看日志\"><br>这个问题主要是因为Master节点clusterID 和Slave节点clusterID 号不一致导致解决办法就是删除在core-site.xml中配置的hadoop.tmp.dir 的/home/hadoop/tmp目录下所有文件重新启动就ok了</p>"},{"title":"JavaScript面向对象编程","date":"2016-05-11T03:05:20.000Z","comments":1,"toc":true,"_content":"\n## this\njavascript中的this和java一样都是表示当前对象，但需要注意的是同一个函数调用的方式不一样this指向的对象也不一样如下：\n\n```javascript\nfunction Test(){\n  alert(this);\n}\n//此时的this，是window弹出[object Window]\nTest();\n//此时的this，是当前对象的的object 弹出[object Object]\nvar t = new Test();\n```\n<!-- more -->\n会出现前后不一样的原因其实很简单，因为我们直接在调用Test函数浏览器会把这个函数当成window中的一个函数，此时的this当然指向的是window。在后面我们通过new 实例化了Test此时浏览器会吧Test当做成了一个对象此时的this肯定是指向当前对象。\n\n## Prototype\njavascript规定，每一个构造函数都有一个prototype属性，指向另一个对象。这个对象的所有属性和方法，都会被构造函数的实例继承。\n这意味着。我们可以把那些不变的属性和方法，直接定义在prototype对象上。这样带来的好处就是再实例多一个对象的时候减少了内存开销，因为多个对象指向的是同一个内存地址，提高了允许的效率。类似于java中的静态方法（被static修饰的变量和方法）。\n\n## 对于对象常用的操作\n\n### constructor\n每一个对象都会自动包含一个constructor属性，指向他们的构造函数。obj.constructor == Object\n### instanceof\n用于验证原型对象与实例对象之间的关系 obj  instanceof Object\n\n### isPrototypeOf \n判断某个prototype对象和某个实例之间的关系 Object.prototype.isPrototypeOf(obj)\n\n### hasOwnProperty\n用于判断某一个属性到底是本地属性，还是继承自prototype对象的属性  obj.hasOwnProerty(\"name\")\n\n\n ### in\n某个实例是否含有某个属性，不管是不是本地属性。 “name” in Obj\nin运算符还可以用来遍历某个对象的所有属性\n```javascript\nfor(var prop in cat1) {\n  alert(\"cat1[\"+prop+\"]=\"+cat1[prop]); \n}\n```\n\n","source":"_posts/JavaScript面向对象编程.md","raw":"---\ntitle: JavaScript面向对象编程\ndate: 2016-05-11 11:05:20\ncomments: true \ncategories: JavaScript\ntoc: true\n---\n\n## this\njavascript中的this和java一样都是表示当前对象，但需要注意的是同一个函数调用的方式不一样this指向的对象也不一样如下：\n\n```javascript\nfunction Test(){\n  alert(this);\n}\n//此时的this，是window弹出[object Window]\nTest();\n//此时的this，是当前对象的的object 弹出[object Object]\nvar t = new Test();\n```\n<!-- more -->\n会出现前后不一样的原因其实很简单，因为我们直接在调用Test函数浏览器会把这个函数当成window中的一个函数，此时的this当然指向的是window。在后面我们通过new 实例化了Test此时浏览器会吧Test当做成了一个对象此时的this肯定是指向当前对象。\n\n## Prototype\njavascript规定，每一个构造函数都有一个prototype属性，指向另一个对象。这个对象的所有属性和方法，都会被构造函数的实例继承。\n这意味着。我们可以把那些不变的属性和方法，直接定义在prototype对象上。这样带来的好处就是再实例多一个对象的时候减少了内存开销，因为多个对象指向的是同一个内存地址，提高了允许的效率。类似于java中的静态方法（被static修饰的变量和方法）。\n\n## 对于对象常用的操作\n\n### constructor\n每一个对象都会自动包含一个constructor属性，指向他们的构造函数。obj.constructor == Object\n### instanceof\n用于验证原型对象与实例对象之间的关系 obj  instanceof Object\n\n### isPrototypeOf \n判断某个prototype对象和某个实例之间的关系 Object.prototype.isPrototypeOf(obj)\n\n### hasOwnProperty\n用于判断某一个属性到底是本地属性，还是继承自prototype对象的属性  obj.hasOwnProerty(\"name\")\n\n\n ### in\n某个实例是否含有某个属性，不管是不是本地属性。 “name” in Obj\nin运算符还可以用来遍历某个对象的所有属性\n```javascript\nfor(var prop in cat1) {\n  alert(\"cat1[\"+prop+\"]=\"+cat1[prop]); \n}\n```\n\n","slug":"JavaScript面向对象编程","published":1,"updated":"2016-05-11T11:54:03.518Z","layout":"post","photos":[],"link":"","_id":"cio2f1gjs0000u8jw13i4o37x","content":"<h2 id=\"this\"><a href=\"#this\" class=\"headerlink\" title=\"this\"></a>this</h2><p>javascript中的this和java一样都是表示当前对象，但需要注意的是同一个函数调用的方式不一样this指向的对象也不一样如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Test</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  alert(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//此时的this，是window弹出[object Window]</span></span><br><span class=\"line\">Test();</span><br><span class=\"line\"><span class=\"comment\">//此时的this，是当前对象的的object 弹出[object Object]</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> t = <span class=\"keyword\">new</span> Test();</span><br></pre></td></tr></table></figure>\n<a id=\"more\"></a>\n<p>会出现前后不一样的原因其实很简单，因为我们直接在调用Test函数浏览器会把这个函数当成window中的一个函数，此时的this当然指向的是window。在后面我们通过new 实例化了Test此时浏览器会吧Test当做成了一个对象此时的this肯定是指向当前对象。</p>\n<h2 id=\"Prototype\"><a href=\"#Prototype\" class=\"headerlink\" title=\"Prototype\"></a>Prototype</h2><p>javascript规定，每一个构造函数都有一个prototype属性，指向另一个对象。这个对象的所有属性和方法，都会被构造函数的实例继承。<br>这意味着。我们可以把那些不变的属性和方法，直接定义在prototype对象上。这样带来的好处就是再实例多一个对象的时候减少了内存开销，因为多个对象指向的是同一个内存地址，提高了允许的效率。类似于java中的静态方法（被static修饰的变量和方法）。</p>\n<h2 id=\"对于对象常用的操作\"><a href=\"#对于对象常用的操作\" class=\"headerlink\" title=\"对于对象常用的操作\"></a>对于对象常用的操作</h2><h3 id=\"constructor-NaN\"><a href=\"#constructor-NaN\" class=\"headerlink\" title=\"constructor\"></a>constructor</h3><p>每一个对象都会自动包含一个constructor属性，指向他们的构造函数。obj.constructor == Object</p>\n<h3 id=\"instanceof\"><a href=\"#instanceof\" class=\"headerlink\" title=\"instanceof\"></a>instanceof</h3><p>用于验证原型对象与实例对象之间的关系 obj  instanceof Object</p>\n<h3 id=\"isPrototypeOf-NaN\"><a href=\"#isPrototypeOf-NaN\" class=\"headerlink\" title=\"isPrototypeOf\"></a>isPrototypeOf</h3><p>判断某个prototype对象和某个实例之间的关系 Object.prototype.isPrototypeOf(obj)</p>\n<h3 id=\"hasOwnProperty-NaN\"><a href=\"#hasOwnProperty-NaN\" class=\"headerlink\" title=\"hasOwnProperty\"></a>hasOwnProperty</h3><p>用于判断某一个属性到底是本地属性，还是继承自prototype对象的属性  obj.hasOwnProerty(“name”)</p>\n<h3 id=\"in\"><a href=\"#in\" class=\"headerlink\" title=\"in\"></a>in</h3><p>某个实例是否含有某个属性，不管是不是本地属性。 “name” in Obj<br>in运算符还可以用来遍历某个对象的所有属性<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> prop <span class=\"keyword\">in</span> cat1) &#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"cat1[\"</span>+prop+<span class=\"string\">\"]=\"</span>+cat1[prop]); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n","excerpt":"<h2 id=\"this\"><a href=\"#this\" class=\"headerlink\" title=\"this\"></a>this</h2><p>javascript中的this和java一样都是表示当前对象，但需要注意的是同一个函数调用的方式不一样this指向的对象也不一样如下：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Test</span>(<span class=\"params\"></span>)</span>&#123;</span><br><span class=\"line\">  alert(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//此时的this，是window弹出[object Window]</span></span><br><span class=\"line\">Test();</span><br><span class=\"line\"><span class=\"comment\">//此时的this，是当前对象的的object 弹出[object Object]</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> t = <span class=\"keyword\">new</span> Test();</span><br></pre></td></tr></table></figure>","more":"<p>会出现前后不一样的原因其实很简单，因为我们直接在调用Test函数浏览器会把这个函数当成window中的一个函数，此时的this当然指向的是window。在后面我们通过new 实例化了Test此时浏览器会吧Test当做成了一个对象此时的this肯定是指向当前对象。</p>\n<h2 id=\"Prototype\"><a href=\"#Prototype\" class=\"headerlink\" title=\"Prototype\"></a>Prototype</h2><p>javascript规定，每一个构造函数都有一个prototype属性，指向另一个对象。这个对象的所有属性和方法，都会被构造函数的实例继承。<br>这意味着。我们可以把那些不变的属性和方法，直接定义在prototype对象上。这样带来的好处就是再实例多一个对象的时候减少了内存开销，因为多个对象指向的是同一个内存地址，提高了允许的效率。类似于java中的静态方法（被static修饰的变量和方法）。</p>\n<h2 id=\"对于对象常用的操作\"><a href=\"#对于对象常用的操作\" class=\"headerlink\" title=\"对于对象常用的操作\"></a>对于对象常用的操作</h2><h3 id=\"constructor-NaN\"><a href=\"#constructor-NaN\" class=\"headerlink\" title=\"constructor\"></a>constructor</h3><p>每一个对象都会自动包含一个constructor属性，指向他们的构造函数。obj.constructor == Object</p>\n<h3 id=\"instanceof\"><a href=\"#instanceof\" class=\"headerlink\" title=\"instanceof\"></a>instanceof</h3><p>用于验证原型对象与实例对象之间的关系 obj  instanceof Object</p>\n<h3 id=\"isPrototypeOf-NaN\"><a href=\"#isPrototypeOf-NaN\" class=\"headerlink\" title=\"isPrototypeOf\"></a>isPrototypeOf</h3><p>判断某个prototype对象和某个实例之间的关系 Object.prototype.isPrototypeOf(obj)</p>\n<h3 id=\"hasOwnProperty-NaN\"><a href=\"#hasOwnProperty-NaN\" class=\"headerlink\" title=\"hasOwnProperty\"></a>hasOwnProperty</h3><p>用于判断某一个属性到底是本地属性，还是继承自prototype对象的属性  obj.hasOwnProerty(“name”)</p>\n<h3 id=\"in\"><a href=\"#in\" class=\"headerlink\" title=\"in\"></a>in</h3><p>某个实例是否含有某个属性，不管是不是本地属性。 “name” in Obj<br>in运算符还可以用来遍历某个对象的所有属性<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">for</span>(<span class=\"keyword\">var</span> prop <span class=\"keyword\">in</span> cat1) &#123;</span><br><span class=\"line\">  alert(<span class=\"string\">\"cat1[\"</span>+prop+<span class=\"string\">\"]=\"</span>+cat1[prop]); </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>"},{"title":"Java设计模式之观察者模式","date":"2015-01-05T06:43:27.000Z","comments":1,"toc":true,"_content":"\n观察者模式定义了一个一对多的依赖关系，让一个或多个观察者对象监察一个主题对象。这样一个主题对象在状态上的变化能够通知所有的依赖于此对象的那些观察者对象，使这些观察者对象能够自动更新。\n观察者（Observer）模式是对象的行为型模式，又叫做发表-订阅（Publish/Subscribe）模式、模型-视图（Model/View）模式、源-收听者（Source/Listener）模式或从属者（Dependents）模式。\n\t  \n<!-- more --> \n### 类图结构\n![类图结构](class.jpg)\n\n### 抽象主题\n主题把所有的观察者对象引用保存到一个集合中，每个主题都可以有任何数量的观察者。主题提供一个增加、销毁观察者和通知所有观察者的方法。\n\n![抽象主题](003vMReezy6OWsKgs3pa3&690.jpg)\n\n### 抽象观察者\n为所有具体的观察者定义一个接口，再得到通知更新自己。\n\n![抽象观察者](003vMReezy6OWsC8Oogc8&690.jpg)\n\n### 具体主题\n保存对具体观察者对象有用的内部状态；在这种内部状态改变时给其观察者发出一个通知；具体主题角色又叫作具体被观察者角色；\n\n### 具体观察者\n保存一个指向具体主题对象的引用；和一个与主题的状态相符的状态。具体观察者角色实现抽象观察者角色所要求的更新自己的接口，以便使本身的状态与主题的状态同步。\n\n\n下面就使用java.util.Observable 和java.util.Observer 实现观察者模式\n\n***代码清单一：具体主题***\n```java\npackage com.design.mode;\n\nimport java.util.Observable;\npublic class Subject extends Observable{\n  private String str;\n  public void add(String str){\n\tthis.str = str;\n\t//设置change=true\n\tsetChanged();\n\t//通知所有观察者主题有改变\n\tnotifyObservers(str);\n\t//notifyObservers();\n  }\n}\n```\n\n***代码清单二：具体观察者***\n```java\npackage com.design.mode;\nimport java.util.Observable;\nimport java.util.Observer;\npublic class SubjectObserver extends Observer{\n  public SubjectObserver(Observable 0){\n\to.addObserver(this);\n  }\n\t\n  public void update(Observable o,Object arg){\n\tSystem.out.println(arg);\n  }\n}\n```\n\n***代码清单三：测试***\n```java\npackage com.design.mode;\n\npublic class Test{\n  public static void main(String[] args){\n\t//实例化主题\n\tSubject sb = new Subject();\n\t//实例化观察者\n\tSubjectObserver so = new SubjectObserver(sb);\n\tsb.add(\"hello world\");\n  }\n}\n```\n***控制台输出***\n```\nhello world\n```\n\n### 总结\n观察者设计模式降低了系统的耦合度被观察者角色所知道的只是一个具体观察者列表，每一个具体观察者都符合一个抽象观察者的接口。被观察者并不认识任何一个具体观察者，它只知道它们都有一个共同的接口。\n由于被观察者和观察者没有紧密地耦合在一起，因此它们可以属于不同的抽象化层次。如果被观察者和观察者都被扔到一起，那么这个对象必然跨越抽象化和具体化层次。\n\n\n\n","source":"_posts/Java设计模式之观察者模式.md","raw":"---\ntitle: Java设计模式之观察者模式\ndate: 2015-01-05 14:43:27 \ncomments: true \ncategories: Java\ntoc: true\n---\n\n观察者模式定义了一个一对多的依赖关系，让一个或多个观察者对象监察一个主题对象。这样一个主题对象在状态上的变化能够通知所有的依赖于此对象的那些观察者对象，使这些观察者对象能够自动更新。\n观察者（Observer）模式是对象的行为型模式，又叫做发表-订阅（Publish/Subscribe）模式、模型-视图（Model/View）模式、源-收听者（Source/Listener）模式或从属者（Dependents）模式。\n\t  \n<!-- more --> \n### 类图结构\n![类图结构](class.jpg)\n\n### 抽象主题\n主题把所有的观察者对象引用保存到一个集合中，每个主题都可以有任何数量的观察者。主题提供一个增加、销毁观察者和通知所有观察者的方法。\n\n![抽象主题](003vMReezy6OWsKgs3pa3&690.jpg)\n\n### 抽象观察者\n为所有具体的观察者定义一个接口，再得到通知更新自己。\n\n![抽象观察者](003vMReezy6OWsC8Oogc8&690.jpg)\n\n### 具体主题\n保存对具体观察者对象有用的内部状态；在这种内部状态改变时给其观察者发出一个通知；具体主题角色又叫作具体被观察者角色；\n\n### 具体观察者\n保存一个指向具体主题对象的引用；和一个与主题的状态相符的状态。具体观察者角色实现抽象观察者角色所要求的更新自己的接口，以便使本身的状态与主题的状态同步。\n\n\n下面就使用java.util.Observable 和java.util.Observer 实现观察者模式\n\n***代码清单一：具体主题***\n```java\npackage com.design.mode;\n\nimport java.util.Observable;\npublic class Subject extends Observable{\n  private String str;\n  public void add(String str){\n\tthis.str = str;\n\t//设置change=true\n\tsetChanged();\n\t//通知所有观察者主题有改变\n\tnotifyObservers(str);\n\t//notifyObservers();\n  }\n}\n```\n\n***代码清单二：具体观察者***\n```java\npackage com.design.mode;\nimport java.util.Observable;\nimport java.util.Observer;\npublic class SubjectObserver extends Observer{\n  public SubjectObserver(Observable 0){\n\to.addObserver(this);\n  }\n\t\n  public void update(Observable o,Object arg){\n\tSystem.out.println(arg);\n  }\n}\n```\n\n***代码清单三：测试***\n```java\npackage com.design.mode;\n\npublic class Test{\n  public static void main(String[] args){\n\t//实例化主题\n\tSubject sb = new Subject();\n\t//实例化观察者\n\tSubjectObserver so = new SubjectObserver(sb);\n\tsb.add(\"hello world\");\n  }\n}\n```\n***控制台输出***\n```\nhello world\n```\n\n### 总结\n观察者设计模式降低了系统的耦合度被观察者角色所知道的只是一个具体观察者列表，每一个具体观察者都符合一个抽象观察者的接口。被观察者并不认识任何一个具体观察者，它只知道它们都有一个共同的接口。\n由于被观察者和观察者没有紧密地耦合在一起，因此它们可以属于不同的抽象化层次。如果被观察者和观察者都被扔到一起，那么这个对象必然跨越抽象化和具体化层次。\n\n\n\n","slug":"Java设计模式之观察者模式","published":1,"updated":"2016-05-11T12:40:50.499Z","layout":"post","photos":[],"link":"","_id":"cio2ykfrs0003e4ybm4g95xw7","content":"<p>观察者模式定义了一个一对多的依赖关系，让一个或多个观察者对象监察一个主题对象。这样一个主题对象在状态上的变化能够通知所有的依赖于此对象的那些观察者对象，使这些观察者对象能够自动更新。<br>观察者（Observer）模式是对象的行为型模式，又叫做发表-订阅（Publish/Subscribe）模式、模型-视图（Model/View）模式、源-收听者（Source/Listener）模式或从属者（Dependents）模式。</p>\n<a id=\"more\"></a> \n<h3 id=\"类图结构\"><a href=\"#类图结构\" class=\"headerlink\" title=\"类图结构\"></a>类图结构</h3><p><img src=\"class.jpg\" alt=\"类图结构\"></p>\n<h3 id=\"抽象主题\"><a href=\"#抽象主题\" class=\"headerlink\" title=\"抽象主题\"></a>抽象主题</h3><p>主题把所有的观察者对象引用保存到一个集合中，每个主题都可以有任何数量的观察者。主题提供一个增加、销毁观察者和通知所有观察者的方法。</p>\n<p><img src=\"003vMReezy6OWsKgs3pa3&amp;690.jpg\" alt=\"抽象主题\"></p>\n<h3 id=\"抽象观察者\"><a href=\"#抽象观察者\" class=\"headerlink\" title=\"抽象观察者\"></a>抽象观察者</h3><p>为所有具体的观察者定义一个接口，再得到通知更新自己。</p>\n<p><img src=\"003vMReezy6OWsC8Oogc8&amp;690.jpg\" alt=\"抽象观察者\"></p>\n<h3 id=\"具体主题\"><a href=\"#具体主题\" class=\"headerlink\" title=\"具体主题\"></a>具体主题</h3><p>保存对具体观察者对象有用的内部状态；在这种内部状态改变时给其观察者发出一个通知；具体主题角色又叫作具体被观察者角色；</p>\n<h3 id=\"具体观察者\"><a href=\"#具体观察者\" class=\"headerlink\" title=\"具体观察者\"></a>具体观察者</h3><p>保存一个指向具体主题对象的引用；和一个与主题的状态相符的状态。具体观察者角色实现抽象观察者角色所要求的更新自己的接口，以便使本身的状态与主题的状态同步。</p>\n<p>下面就使用java.util.Observable 和java.util.Observer 实现观察者模式</p>\n<p><strong><em>代码清单一：具体主题</em></strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.design.mode;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Observable;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Subject</span> <span class=\"keyword\">extends</span> <span class=\"title\">Observable</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String str;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(String str)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.str = str;</span><br><span class=\"line\">\t<span class=\"comment\">//设置change=true</span></span><br><span class=\"line\">\tsetChanged();</span><br><span class=\"line\">\t<span class=\"comment\">//通知所有观察者主题有改变</span></span><br><span class=\"line\">\tnotifyObservers(str);</span><br><span class=\"line\">\t<span class=\"comment\">//notifyObservers();</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>代码清单二：具体观察者</em></strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.design.mode;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Observable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Observer;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SubjectObserver</span> <span class=\"keyword\">extends</span> <span class=\"title\">Observer</span></span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SubjectObserver</span><span class=\"params\">(Observable <span class=\"number\">0</span>)</span></span>&#123;</span><br><span class=\"line\">\to.addObserver(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(Observable o,Object arg)</span></span>&#123;</span><br><span class=\"line\">\tSystem.out.println(arg);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>代码清单三：测试</em></strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.design.mode;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//实例化主题</span></span><br><span class=\"line\">\tSubject sb = <span class=\"keyword\">new</span> Subject();</span><br><span class=\"line\">\t<span class=\"comment\">//实例化观察者</span></span><br><span class=\"line\">\tSubjectObserver so = <span class=\"keyword\">new</span> SubjectObserver(sb);</span><br><span class=\"line\">\tsb.add(<span class=\"string\">\"hello world\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>控制台输出</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hello world</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>观察者设计模式降低了系统的耦合度被观察者角色所知道的只是一个具体观察者列表，每一个具体观察者都符合一个抽象观察者的接口。被观察者并不认识任何一个具体观察者，它只知道它们都有一个共同的接口。<br>由于被观察者和观察者没有紧密地耦合在一起，因此它们可以属于不同的抽象化层次。如果被观察者和观察者都被扔到一起，那么这个对象必然跨越抽象化和具体化层次。</p>\n","excerpt":"<p>观察者模式定义了一个一对多的依赖关系，让一个或多个观察者对象监察一个主题对象。这样一个主题对象在状态上的变化能够通知所有的依赖于此对象的那些观察者对象，使这些观察者对象能够自动更新。<br>观察者（Observer）模式是对象的行为型模式，又叫做发表-订阅（Publish/Subscribe）模式、模型-视图（Model/View）模式、源-收听者（Source/Listener）模式或从属者（Dependents）模式。</p>","more":"<h3 id=\"类图结构\"><a href=\"#类图结构\" class=\"headerlink\" title=\"类图结构\"></a>类图结构</h3><p><img src=\"class.jpg\" alt=\"类图结构\"></p>\n<h3 id=\"抽象主题\"><a href=\"#抽象主题\" class=\"headerlink\" title=\"抽象主题\"></a>抽象主题</h3><p>主题把所有的观察者对象引用保存到一个集合中，每个主题都可以有任何数量的观察者。主题提供一个增加、销毁观察者和通知所有观察者的方法。</p>\n<p><img src=\"003vMReezy6OWsKgs3pa3&amp;690.jpg\" alt=\"抽象主题\"></p>\n<h3 id=\"抽象观察者\"><a href=\"#抽象观察者\" class=\"headerlink\" title=\"抽象观察者\"></a>抽象观察者</h3><p>为所有具体的观察者定义一个接口，再得到通知更新自己。</p>\n<p><img src=\"003vMReezy6OWsC8Oogc8&amp;690.jpg\" alt=\"抽象观察者\"></p>\n<h3 id=\"具体主题\"><a href=\"#具体主题\" class=\"headerlink\" title=\"具体主题\"></a>具体主题</h3><p>保存对具体观察者对象有用的内部状态；在这种内部状态改变时给其观察者发出一个通知；具体主题角色又叫作具体被观察者角色；</p>\n<h3 id=\"具体观察者\"><a href=\"#具体观察者\" class=\"headerlink\" title=\"具体观察者\"></a>具体观察者</h3><p>保存一个指向具体主题对象的引用；和一个与主题的状态相符的状态。具体观察者角色实现抽象观察者角色所要求的更新自己的接口，以便使本身的状态与主题的状态同步。</p>\n<p>下面就使用java.util.Observable 和java.util.Observer 实现观察者模式</p>\n<p><strong><em>代码清单一：具体主题</em></strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.design.mode;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Observable;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Subject</span> <span class=\"keyword\">extends</span> <span class=\"title\">Observable</span></span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">private</span> String str;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">add</span><span class=\"params\">(String str)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">this</span>.str = str;</span><br><span class=\"line\">\t<span class=\"comment\">//设置change=true</span></span><br><span class=\"line\">\tsetChanged();</span><br><span class=\"line\">\t<span class=\"comment\">//通知所有观察者主题有改变</span></span><br><span class=\"line\">\tnotifyObservers(str);</span><br><span class=\"line\">\t<span class=\"comment\">//notifyObservers();</span></span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>代码清单二：具体观察者</em></strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.design.mode;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Observable;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.util.Observer;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">SubjectObserver</span> <span class=\"keyword\">extends</span> <span class=\"title\">Observer</span></span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"title\">SubjectObserver</span><span class=\"params\">(Observable <span class=\"number\">0</span>)</span></span>&#123;</span><br><span class=\"line\">\to.addObserver(<span class=\"keyword\">this</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">update</span><span class=\"params\">(Observable o,Object arg)</span></span>&#123;</span><br><span class=\"line\">\tSystem.out.println(arg);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>代码清单三：测试</em></strong><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> com.design.mode;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">Test</span></span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title\">main</span><span class=\"params\">(String[] args)</span></span>&#123;</span><br><span class=\"line\">\t<span class=\"comment\">//实例化主题</span></span><br><span class=\"line\">\tSubject sb = <span class=\"keyword\">new</span> Subject();</span><br><span class=\"line\">\t<span class=\"comment\">//实例化观察者</span></span><br><span class=\"line\">\tSubjectObserver so = <span class=\"keyword\">new</span> SubjectObserver(sb);</span><br><span class=\"line\">\tsb.add(<span class=\"string\">\"hello world\"</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<p><strong><em>控制台输出</em></strong><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hello world</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>观察者设计模式降低了系统的耦合度被观察者角色所知道的只是一个具体观察者列表，每一个具体观察者都符合一个抽象观察者的接口。被观察者并不认识任何一个具体观察者，它只知道它们都有一个共同的接口。<br>由于被观察者和观察者没有紧密地耦合在一起，因此它们可以属于不同的抽象化层次。如果被观察者和观察者都被扔到一起，那么这个对象必然跨越抽象化和具体化层次。</p>"},{"title":"Linux常见问题解决方法","date":"2016-05-10T12:05:33.000Z","comments":1,"_content":"\n### 使用SSH登陆Linux的时候提示\n 1. 问题描述\n```shell\nThe host '192.168.1.240' is unreachable.\nthe host may be down,or there may be a problem with the network connection.Sometimes such problems can also be caused by a misconfigured firewall\n```\n**解决办法**\n<!-- more -->\n 1. 关闭防火墙\n```shell\nservice iptables stop(重启生效)\niptables -F(立即生效)\n```\n***如果通过上面的方法还是无法连接那就是sshd服务没有启动***\n\n 2. 启动服务就可以正常访问。\n```shell\n service sshd start\n```\n\n\n----------\n### connect network is unreachable\n原因是没有正确设置IP地址\n**解决办法**\n 1. 修改ifcfg-eth0\n```shell\nvi /etc/sysconfig/network-scripts/ifcfg-eth0\n\nservice network restart\nroute add default  gw 192.168.1.1(设置网关)\nservice network restart\n```\n----------\n\n### linux从一台主机复杂文件目录到另一台\n\n 1. 复制文件\n```shell\nscp conf.xml root@192.168.1.240:/usr/conf\n\n说明：scp 文件名 用户名@计算机IP或者计算机名称 :远程路径\n```\n\n 2. 复制目录\n```shell\nscp -r apache-tomcat-6.0.41 root@192.168.1.240:/usr/tomcat\n\n说明：scp -r 目录名 用户名@计算机IP或者计算机名称 :远程路径\n```\n\n\n----------\n### make：cc：命令未找到\n**解决办法**\n 1. 安装gcc\n```shell\nyum -y install gcc automake autoconf libtool make\n```\n\n\n----------\n\n### /bin/sh:ctags:command not found\n**解决办法**\n 1. 安装ctags\n```shell\nyum install ctags\n```\n\n\n\n\n","source":"_posts/Linux常见问题解决方法.md","raw":"---\ntitle: Linux常见问题解决方法\ndate: 2016-05-10 20:05:33 \ncomments: true \ncategories: Linux\n---\n\n### 使用SSH登陆Linux的时候提示\n 1. 问题描述\n```shell\nThe host '192.168.1.240' is unreachable.\nthe host may be down,or there may be a problem with the network connection.Sometimes such problems can also be caused by a misconfigured firewall\n```\n**解决办法**\n<!-- more -->\n 1. 关闭防火墙\n```shell\nservice iptables stop(重启生效)\niptables -F(立即生效)\n```\n***如果通过上面的方法还是无法连接那就是sshd服务没有启动***\n\n 2. 启动服务就可以正常访问。\n```shell\n service sshd start\n```\n\n\n----------\n### connect network is unreachable\n原因是没有正确设置IP地址\n**解决办法**\n 1. 修改ifcfg-eth0\n```shell\nvi /etc/sysconfig/network-scripts/ifcfg-eth0\n\nservice network restart\nroute add default  gw 192.168.1.1(设置网关)\nservice network restart\n```\n----------\n\n### linux从一台主机复杂文件目录到另一台\n\n 1. 复制文件\n```shell\nscp conf.xml root@192.168.1.240:/usr/conf\n\n说明：scp 文件名 用户名@计算机IP或者计算机名称 :远程路径\n```\n\n 2. 复制目录\n```shell\nscp -r apache-tomcat-6.0.41 root@192.168.1.240:/usr/tomcat\n\n说明：scp -r 目录名 用户名@计算机IP或者计算机名称 :远程路径\n```\n\n\n----------\n### make：cc：命令未找到\n**解决办法**\n 1. 安装gcc\n```shell\nyum -y install gcc automake autoconf libtool make\n```\n\n\n----------\n\n### /bin/sh:ctags:command not found\n**解决办法**\n 1. 安装ctags\n```shell\nyum install ctags\n```\n\n\n\n\n","slug":"Linux常见问题解决方法","published":1,"updated":"2016-05-11T11:54:03.519Z","layout":"post","photos":[],"link":"","_id":"cio2ykfrv0004e4ybtn3fawnp","content":"<h3 id=\"使用SSH登陆Linux的时候提示\"><a href=\"#使用SSH登陆Linux的时候提示\" class=\"headerlink\" title=\"使用SSH登陆Linux的时候提示\"></a>使用SSH登陆Linux的时候提示</h3><ol>\n<li>问题描述<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The host &apos;192.168.1.240&apos; is unreachable.</span><br><span class=\"line\">the host may be down,or there may be a problem with the network connection.Sometimes such problems can also be caused by a misconfigured firewall</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>解决办法</strong><br><a id=\"more\"></a></p>\n<ol>\n<li>关闭防火墙<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service iptables stop(重启生效)</span><br><span class=\"line\">iptables -F(立即生效)</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong><em>如果通过上面的方法还是无法连接那就是sshd服务没有启动</em></strong></p>\n<ol>\n<li>启动服务就可以正常访问。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service sshd start</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h3 id=\"connect-network-is-unreachable\"><a href=\"#connect-network-is-unreachable\" class=\"headerlink\" title=\"connect network is unreachable\"></a>connect network is unreachable</h3><p>原因是没有正确设置IP地址<br><strong>解决办法</strong></p>\n<ol>\n<li>修改ifcfg-eth0<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class=\"line\"></span><br><span class=\"line\">service network restart</span><br><span class=\"line\">route add default  gw 192.168.1.1(设置网关)</span><br><span class=\"line\">service network restart</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h3 id=\"linux从一台主机复杂文件目录到另一台\"><a href=\"#linux从一台主机复杂文件目录到另一台\" class=\"headerlink\" title=\"linux从一台主机复杂文件目录到另一台\"></a>linux从一台主机复杂文件目录到另一台</h3><ol>\n<li><p>复制文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp conf.xml root@192.168.1.240:/usr/conf</span><br><span class=\"line\"></span><br><span class=\"line\">说明：scp 文件名 用户名@计算机IP或者计算机名称 :远程路径</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>复制目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r apache-tomcat-6.0.41 root@192.168.1.240:/usr/tomcat</span><br><span class=\"line\"></span><br><span class=\"line\">说明：scp -r 目录名 用户名@计算机IP或者计算机名称 :远程路径</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h3 id=\"make：cc：命令未找到\"><a href=\"#make：cc：命令未找到\" class=\"headerlink\" title=\"make：cc：命令未找到\"></a>make：cc：命令未找到</h3><p><strong>解决办法</strong></p>\n<ol>\n<li>安装gcc<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install gcc automake autoconf libtool make</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h3 id=\"bin-sh-ctags-command-not-found\"><a href=\"#bin-sh-ctags-command-not-found\" class=\"headerlink\" title=\"/bin/sh:ctags:command not found\"></a>/bin/sh:ctags:command not found</h3><p><strong>解决办法</strong></p>\n<ol>\n<li>安装ctags<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install ctags</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n","excerpt":"<h3 id=\"使用SSH登陆Linux的时候提示\"><a href=\"#使用SSH登陆Linux的时候提示\" class=\"headerlink\" title=\"使用SSH登陆Linux的时候提示\"></a>使用SSH登陆Linux的时候提示</h3><ol>\n<li>问题描述<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">The host &apos;192.168.1.240&apos; is unreachable.</span><br><span class=\"line\">the host may be down,or there may be a problem with the network connection.Sometimes such problems can also be caused by a misconfigured firewall</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong>解决办法</strong><br>","more":"</p>\n<ol>\n<li>关闭防火墙<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service iptables stop(重启生效)</span><br><span class=\"line\">iptables -F(立即生效)</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<p><strong><em>如果通过上面的方法还是无法连接那就是sshd服务没有启动</em></strong></p>\n<ol>\n<li>启动服务就可以正常访问。<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">service sshd start</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h3 id=\"connect-network-is-unreachable\"><a href=\"#connect-network-is-unreachable\" class=\"headerlink\" title=\"connect network is unreachable\"></a>connect network is unreachable</h3><p>原因是没有正确设置IP地址<br><strong>解决办法</strong></p>\n<ol>\n<li>修改ifcfg-eth0<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class=\"line\"></span><br><span class=\"line\">service network restart</span><br><span class=\"line\">route add default  gw 192.168.1.1(设置网关)</span><br><span class=\"line\">service network restart</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h3 id=\"linux从一台主机复杂文件目录到另一台\"><a href=\"#linux从一台主机复杂文件目录到另一台\" class=\"headerlink\" title=\"linux从一台主机复杂文件目录到另一台\"></a>linux从一台主机复杂文件目录到另一台</h3><ol>\n<li><p>复制文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp conf.xml root@192.168.1.240:/usr/conf</span><br><span class=\"line\"></span><br><span class=\"line\">说明：scp 文件名 用户名@计算机IP或者计算机名称 :远程路径</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>复制目录</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">scp -r apache-tomcat-6.0.41 root@192.168.1.240:/usr/tomcat</span><br><span class=\"line\"></span><br><span class=\"line\">说明：scp -r 目录名 用户名@计算机IP或者计算机名称 :远程路径</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h3 id=\"make：cc：命令未找到\"><a href=\"#make：cc：命令未找到\" class=\"headerlink\" title=\"make：cc：命令未找到\"></a>make：cc：命令未找到</h3><p><strong>解决办法</strong></p>\n<ol>\n<li>安装gcc<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install gcc automake autoconf libtool make</span><br></pre></td></tr></table></figure>\n</li>\n</ol>\n<hr>\n<h3 id=\"bin-sh-ctags-command-not-found\"><a href=\"#bin-sh-ctags-command-not-found\" class=\"headerlink\" title=\"/bin/sh:ctags:command not found\"></a>/bin/sh:ctags:command not found</h3><p><strong>解决办法</strong></p>\n<ol>\n<li>安装ctags<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install ctags</span><br></pre></td></tr></table></figure>\n</li>\n</ol>"},{"title":"System.setOut","date":"2016-05-10T12:10:33.000Z","comments":1,"_content":"   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今天一同事问我System.out.println()输出的内容为什么没有输出到日志文件中。他告诉我的是他使用的weblogic中间件。说起这个真的平时没太注意。因为我之前一直使用的是jboss，查看日志也是看的jboss日志文件，通过System.out.println输出的内容也显示在了日志文件中。带着好奇心去看了下自己系统下的日志文件果然没有。于是打开jboss的log4j.xml 与自己系统下的log4j.xml进行了一下对比发现并无不同。于是打开jboss代码看了下发现jboss org.jboss.logging.Log4jService  installSystemAdapters方法中对System.setOut 有设置。\n   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表示对于System.setOut不懂到网上百度了下，官方说明是通过System.setOut方法允许程序员自行定义System.out输出流， 我们可以将我们改造好的PrintStream替换java原来的System.out对象。于是他这个问题就很好解决了。\n<!-- more --> \n```java\npublic void init() {\n  PrintStream printStream = new PrintStream(System.out) {\n   public void println(boolean x) {\n    log(Boolean.valueOf(x));\n   }\n\n   public void println(char x) {\n    log(Character.valueOf(x));\n   }\n\n   public void println(char[] x) {\n    log(x == null ? null : new String(x));\n   }\n\n   public void println(double x) {\n    log(Double.valueOf(x));\n   }\n\n   public void println(float x) {\n    log(Float.valueOf(x));\n   }\n\n   public void println(int x) {\n    log(Integer.valueOf(x));\n   }\n\n   public void println(long x) {\n    log(x);\n   }\n\n   public void println(Object x) {\n    log(x);\n   }\n\n   public void println(String x) {\n    log(x);\n   }\n  };\n  System.setOut(printStream);\n  System.setErr(printStream);\n\n }\n\n private void log(Object info) {\n  LogFactoryImpl.getLog(getClass()).info(info);\n }\n```\n\n在web的监听器里面初始下这个就可以了\n\n下面是log4j的配置文件\n\n```\nlog4j.rootLogger=INFO,Stdout,R\nlog4j.appender.Stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.Stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.Stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %m%n\nlog4j.appender.R=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.R.File=F:/stdout.log\nlog4j.appender.R.datePattern='.'yyyy-MM-dd'.txt'\nlog4j.appender.R.layout=org.apache.log4j.PatternLayout\nlog4j.appender.R.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %m%n\n```\n\n","source":"_posts/System.setOut.md","raw":"---\ntitle: System.setOut\ndate: 2016-05-10 20:10:33 \ncomments: true \ncategories: Java\n---\n   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今天一同事问我System.out.println()输出的内容为什么没有输出到日志文件中。他告诉我的是他使用的weblogic中间件。说起这个真的平时没太注意。因为我之前一直使用的是jboss，查看日志也是看的jboss日志文件，通过System.out.println输出的内容也显示在了日志文件中。带着好奇心去看了下自己系统下的日志文件果然没有。于是打开jboss的log4j.xml 与自己系统下的log4j.xml进行了一下对比发现并无不同。于是打开jboss代码看了下发现jboss org.jboss.logging.Log4jService  installSystemAdapters方法中对System.setOut 有设置。\n   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表示对于System.setOut不懂到网上百度了下，官方说明是通过System.setOut方法允许程序员自行定义System.out输出流， 我们可以将我们改造好的PrintStream替换java原来的System.out对象。于是他这个问题就很好解决了。\n<!-- more --> \n```java\npublic void init() {\n  PrintStream printStream = new PrintStream(System.out) {\n   public void println(boolean x) {\n    log(Boolean.valueOf(x));\n   }\n\n   public void println(char x) {\n    log(Character.valueOf(x));\n   }\n\n   public void println(char[] x) {\n    log(x == null ? null : new String(x));\n   }\n\n   public void println(double x) {\n    log(Double.valueOf(x));\n   }\n\n   public void println(float x) {\n    log(Float.valueOf(x));\n   }\n\n   public void println(int x) {\n    log(Integer.valueOf(x));\n   }\n\n   public void println(long x) {\n    log(x);\n   }\n\n   public void println(Object x) {\n    log(x);\n   }\n\n   public void println(String x) {\n    log(x);\n   }\n  };\n  System.setOut(printStream);\n  System.setErr(printStream);\n\n }\n\n private void log(Object info) {\n  LogFactoryImpl.getLog(getClass()).info(info);\n }\n```\n\n在web的监听器里面初始下这个就可以了\n\n下面是log4j的配置文件\n\n```\nlog4j.rootLogger=INFO,Stdout,R\nlog4j.appender.Stdout=org.apache.log4j.ConsoleAppender\nlog4j.appender.Stdout.layout=org.apache.log4j.PatternLayout\nlog4j.appender.Stdout.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %m%n\nlog4j.appender.R=org.apache.log4j.DailyRollingFileAppender\nlog4j.appender.R.File=F:/stdout.log\nlog4j.appender.R.datePattern='.'yyyy-MM-dd'.txt'\nlog4j.appender.R.layout=org.apache.log4j.PatternLayout\nlog4j.appender.R.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %m%n\n```\n\n","slug":"System.setOut","published":1,"updated":"2016-05-11T11:54:03.519Z","layout":"post","photos":[],"link":"","_id":"cio2ykfrx0005e4ybnjmxdn8b","content":"<p>   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今天一同事问我System.out.println()输出的内容为什么没有输出到日志文件中。他告诉我的是他使用的weblogic中间件。说起这个真的平时没太注意。因为我之前一直使用的是jboss，查看日志也是看的jboss日志文件，通过System.out.println输出的内容也显示在了日志文件中。带着好奇心去看了下自己系统下的日志文件果然没有。于是打开jboss的log4j.xml 与自己系统下的log4j.xml进行了一下对比发现并无不同。于是打开jboss代码看了下发现jboss org.jboss.logging.Log4jService  installSystemAdapters方法中对System.setOut 有设置。<br>   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表示对于System.setOut不懂到网上百度了下，官方说明是通过System.setOut方法允许程序员自行定义System.out输出流， 我们可以将我们改造好的PrintStream替换java原来的System.out对象。于是他这个问题就很好解决了。<br><a id=\"more\"></a><br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  PrintStream printStream = <span class=\"keyword\">new</span> PrintStream(System.out) &#123;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">boolean</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(Boolean.valueOf(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">char</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(Character.valueOf(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">char</span>[] x)</span> </span>&#123;</span><br><span class=\"line\">    log(x == <span class=\"keyword\">null</span> ? <span class=\"keyword\">null</span> : <span class=\"keyword\">new</span> String(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">double</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(Double.valueOf(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">float</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(Float.valueOf(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(Integer.valueOf(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">long</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(x);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(Object x)</span> </span>&#123;</span><br><span class=\"line\">    log(x);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(String x)</span> </span>&#123;</span><br><span class=\"line\">    log(x);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  System.setOut(printStream);</span><br><span class=\"line\">  System.setErr(printStream);</span><br><span class=\"line\"></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">log</span><span class=\"params\">(Object info)</span> </span>&#123;</span><br><span class=\"line\">  LogFactoryImpl.getLog(getClass()).info(info);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n<p>在web的监听器里面初始下这个就可以了</p>\n<p>下面是log4j的配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log4j.rootLogger=INFO,Stdout,R</span><br><span class=\"line\">log4j.appender.Stdout=org.apache.log4j.ConsoleAppender</span><br><span class=\"line\">log4j.appender.Stdout.layout=org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.Stdout.layout.ConversionPattern=%d&#123;yyyy-MM-dd HH:mm:ss&#125; %-5p %m%n</span><br><span class=\"line\">log4j.appender.R=org.apache.log4j.DailyRollingFileAppender</span><br><span class=\"line\">log4j.appender.R.File=F:/stdout.log</span><br><span class=\"line\">log4j.appender.R.datePattern=&apos;.&apos;yyyy-MM-dd&apos;.txt&apos;</span><br><span class=\"line\">log4j.appender.R.layout=org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.R.layout.ConversionPattern=%d&#123;yyyy-MM-dd HH:mm:ss&#125; %-5p %m%n</span><br></pre></td></tr></table></figure>\n","excerpt":"<p>   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;今天一同事问我System.out.println()输出的内容为什么没有输出到日志文件中。他告诉我的是他使用的weblogic中间件。说起这个真的平时没太注意。因为我之前一直使用的是jboss，查看日志也是看的jboss日志文件，通过System.out.println输出的内容也显示在了日志文件中。带着好奇心去看了下自己系统下的日志文件果然没有。于是打开jboss的log4j.xml 与自己系统下的log4j.xml进行了一下对比发现并无不同。于是打开jboss代码看了下发现jboss org.jboss.logging.Log4jService  installSystemAdapters方法中对System.setOut 有设置。<br>   &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;表示对于System.setOut不懂到网上百度了下，官方说明是通过System.setOut方法允许程序员自行定义System.out输出流， 我们可以将我们改造好的PrintStream替换java原来的System.out对象。于是他这个问题就很好解决了。<br>","more":"<br><figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">init</span><span class=\"params\">()</span> </span>&#123;</span><br><span class=\"line\">  PrintStream printStream = <span class=\"keyword\">new</span> PrintStream(System.out) &#123;</span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">boolean</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(Boolean.valueOf(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">char</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(Character.valueOf(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">char</span>[] x)</span> </span>&#123;</span><br><span class=\"line\">    log(x == <span class=\"keyword\">null</span> ? <span class=\"keyword\">null</span> : <span class=\"keyword\">new</span> String(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">double</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(Double.valueOf(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">float</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(Float.valueOf(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">int</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(Integer.valueOf(x));</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(<span class=\"keyword\">long</span> x)</span> </span>&#123;</span><br><span class=\"line\">    log(x);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(Object x)</span> </span>&#123;</span><br><span class=\"line\">    log(x);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title\">println</span><span class=\"params\">(String x)</span> </span>&#123;</span><br><span class=\"line\">    log(x);</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">  &#125;;</span><br><span class=\"line\">  System.setOut(printStream);</span><br><span class=\"line\">  System.setErr(printStream);</span><br><span class=\"line\"></span><br><span class=\"line\"> &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"> <span class=\"function\"><span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title\">log</span><span class=\"params\">(Object info)</span> </span>&#123;</span><br><span class=\"line\">  LogFactoryImpl.getLog(getClass()).info(info);</span><br><span class=\"line\"> &#125;</span><br></pre></td></tr></table></figure></p>\n<p>在web的监听器里面初始下这个就可以了</p>\n<p>下面是log4j的配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">log4j.rootLogger=INFO,Stdout,R</span><br><span class=\"line\">log4j.appender.Stdout=org.apache.log4j.ConsoleAppender</span><br><span class=\"line\">log4j.appender.Stdout.layout=org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.Stdout.layout.ConversionPattern=%d&#123;yyyy-MM-dd HH:mm:ss&#125; %-5p %m%n</span><br><span class=\"line\">log4j.appender.R=org.apache.log4j.DailyRollingFileAppender</span><br><span class=\"line\">log4j.appender.R.File=F:/stdout.log</span><br><span class=\"line\">log4j.appender.R.datePattern=&apos;.&apos;yyyy-MM-dd&apos;.txt&apos;</span><br><span class=\"line\">log4j.appender.R.layout=org.apache.log4j.PatternLayout</span><br><span class=\"line\">log4j.appender.R.layout.ConversionPattern=%d&#123;yyyy-MM-dd HH:mm:ss&#125; %-5p %m%n</span><br></pre></td></tr></table></figure>"},{"title":"博客搭建","date":"2016-05-10T11:05:33.000Z","comments":0,"_content":"2016年5月10号基于github搭建我的第一个博客\n\n\n个人简历: [关于我](/about/index.html)\n","source":"_posts/博客搭建.md","raw":"---\ntitle: 博客搭建\ndate: 2016-05-10 19:05:33\ncomments: false \n---\n2016年5月10号基于github搭建我的第一个博客\n\n\n个人简历: [关于我](/about/index.html)\n","slug":"博客搭建","published":1,"updated":"2016-05-11T11:54:03.520Z","layout":"post","photos":[],"link":"","_id":"cio2ykfs00007e4ybry5ku2wl","content":"<p>2016年5月10号基于github搭建我的第一个博客</p>\n<p>个人简历: <a href=\"/about/index.html\">关于我</a></p>\n","excerpt":"","more":"<p>2016年5月10号基于github搭建我的第一个博客</p>\n<p>个人简历: <a href=\"/about/index.html\">关于我</a></p>\n"}],"PostAsset":[{"_id":"source/_posts/Java设计模式之观察者模式/003vMReezy6OWsC8Oogc8&690.jpg","slug":"003vMReezy6OWsC8Oogc8&690.jpg","post":"cio2ykfrs0003e4ybm4g95xw7","modified":0,"renderable":0},{"_id":"source/_posts/Java设计模式之观察者模式/003vMReezy6OWsKgs3pa3&690.jpg","slug":"003vMReezy6OWsKgs3pa3&690.jpg","post":"cio2ykfrs0003e4ybm4g95xw7","modified":0,"renderable":0},{"_id":"source/_posts/Java设计模式之观察者模式/class.jpg","slug":"class.jpg","post":"cio2ykfrs0003e4ybm4g95xw7","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1KHLwtFe7&690.png","slug":"003vMReezy6P1KHLwtFe7&690.png","post":"cio2ykfre0000e4ybv6zw6eui","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1KnAQkx19&690.png","slug":"003vMReezy6P1KnAQkx19&690.png","post":"cio2ykfre0000e4ybv6zw6eui","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1LyH3gqae&690.jpg","slug":"003vMReezy6P1LyH3gqae&690.jpg","post":"cio2ykfre0000e4ybv6zw6eui","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1MG9JTO50&690.png","slug":"003vMReezy6P1MG9JTO50&690.png","post":"cio2ykfre0000e4ybv6zw6eui","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1MlAy3H5d&690.jpg","slug":"003vMReezy6P1MlAy3H5d&690.jpg","post":"cio2ykfre0000e4ybv6zw6eui","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1Mzjamje7&690.jpg","slug":"003vMReezy6P1Mzjamje7&690.jpg","post":"cio2ykfre0000e4ybv6zw6eui","modified":0,"renderable":0},{"_id":"source/_posts/Hadoop集群完全分布式部署/003vMReezy6P1O1zJBg32&690.jpg","slug":"003vMReezy6P1O1zJBg32&690.jpg","post":"cio2ykfre0000e4ybv6zw6eui","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cio2ykfre0000e4ybv6zw6eui","category_id":"cio2ykfrp0002e4ybw2flix66","_id":"cio2ykfs30008e4ybkaunov3f"},{"post_id":"cio2ykfrm0001e4ybo0j2akoa","category_id":"cio2ykfrz0006e4yb26h5ripk","_id":"cio2ykfs4000ae4ybyjx4ier4"},{"post_id":"cio2ykfrs0003e4ybm4g95xw7","category_id":"cio2ykfs30009e4ybq8ywltzs","_id":"cio2ykfs5000ce4ybbi4bahrv"},{"post_id":"cio2ykfrv0004e4ybtn3fawnp","category_id":"cio2ykfs4000be4ybi0r0bip4","_id":"cio2ykfs6000ee4ybbztno9ui"},{"post_id":"cio2ykfrx0005e4ybnjmxdn8b","category_id":"cio2ykfs30009e4ybq8ywltzs","_id":"cio2ykfs8000fe4ybwz5jo71m"}],"PostTag":[],"Tag":[]}}